{
  "id": "14597d3d9746b17b629822780e98835e",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.8.10",
  "solcLongVersion": "0.8.10+commit.fc410830",
  "input": {
    "language": "Solidity",
    "sources": {
      "contracts/mocks/MockTreasury.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.10;\n\nlibrary SafeMath {\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\n    uint256 c = a + b;\n    require(c >= a, \"SafeMath: addition overflow\");\n\n    return c;\n  }\n\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n    return sub(a, b, \"SafeMath: subtraction overflow\");\n  }\n\n  function sub(\n    uint256 a,\n    uint256 b,\n    string memory errorMessage\n  ) internal pure returns (uint256) {\n    require(b <= a, errorMessage);\n    uint256 c = a - b;\n\n    return c;\n  }\n\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n    if (a == 0) {\n      return 0;\n    }\n\n    uint256 c = a * b;\n    require(c / a == b, \"SafeMath: multiplication overflow\");\n\n    return c;\n  }\n\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\n    return div(a, b, \"SafeMath: division by zero\");\n  }\n\n  function div(\n    uint256 a,\n    uint256 b,\n    string memory errorMessage\n  ) internal pure returns (uint256) {\n    require(b > 0, errorMessage);\n    uint256 c = a / b;\n    return c;\n  }\n}\n\nlibrary Address {\n  function isContract(address account) internal view returns (bool) {\n    // This method relies in extcodesize, which returns 0 for contracts in\n    // construction, since the code is only stored at the end of the\n    // constructor execution.\n\n    uint256 size;\n    // solhint-disable-next-line no-inline-assembly\n    assembly {\n      size := extcodesize(account)\n    }\n    return size > 0;\n  }\n\n  function functionCall(\n    address target,\n    bytes memory data,\n    string memory errorMessage\n  ) internal returns (bytes memory) {\n    return _functionCallWithValue(target, data, 0, errorMessage);\n  }\n\n  function _functionCallWithValue(\n    address target,\n    bytes memory data,\n    uint256 weiValue,\n    string memory errorMessage\n  ) private returns (bytes memory) {\n    require(isContract(target), \"Address: call to non-contract\");\n\n    // solhint-disable-next-line avoid-low-level-calls\n    (bool success, bytes memory returndata) = target.call{value: weiValue}(\n      data\n    );\n    if (success) {\n      return returndata;\n    } else {\n      if (returndata.length > 0) {\n        // solhint-disable-next-line no-inline-assembly\n        assembly {\n          let returndata_size := mload(returndata)\n          revert(add(32, returndata), returndata_size)\n        }\n      } else {\n        revert(errorMessage);\n      }\n    }\n  }\n\n  function _verifyCallResult(\n    bool success,\n    bytes memory returndata,\n    string memory errorMessage\n  ) private pure returns (bytes memory) {\n    if (success) {\n      return returndata;\n    } else {\n      if (returndata.length > 0) {\n        // solhint-disable-next-line no-inline-assembly\n        assembly {\n          let returndata_size := mload(returndata)\n          revert(add(32, returndata), returndata_size)\n        }\n      } else {\n        revert(errorMessage);\n      }\n    }\n  }\n}\n\ninterface IOwnable {\n  function manager() external view returns (address);\n\n  function renounceManagement() external;\n\n  function pushManagement(address newOwner_) external;\n\n  function pullManagement() external;\n}\n\ncontract Ownable is IOwnable {\n  address internal _owner;\n  address internal _newOwner;\n\n  event OwnershipPushed(\n    address indexed previousOwner,\n    address indexed newOwner\n  );\n  event OwnershipPulled(\n    address indexed previousOwner,\n    address indexed newOwner\n  );\n\n  constructor() {\n    _owner = msg.sender;\n    emit OwnershipPushed(address(0), _owner);\n  }\n\n  function manager() public view override returns (address) {\n    return _owner;\n  }\n\n  modifier onlyManager() {\n    require(_owner == msg.sender, \"Ownable: caller is not the owner\");\n    _;\n  }\n\n  function renounceManagement() public virtual override onlyManager {\n    emit OwnershipPushed(_owner, address(0));\n    _owner = address(0);\n  }\n\n  function pushManagement(address newOwner_)\n    public\n    virtual\n    override\n    onlyManager\n  {\n    require(newOwner_ != address(0), \"Ownable: new owner is the zero address\");\n    emit OwnershipPushed(_owner, newOwner_);\n    _newOwner = newOwner_;\n  }\n\n  function pullManagement() public virtual override {\n    require(msg.sender == _newOwner, \"Ownable: must be new owner to pull\");\n    emit OwnershipPulled(_owner, _newOwner);\n    _owner = _newOwner;\n  }\n}\n\ninterface IERC20 {\n  function decimals() external view returns (uint8);\n\n  function balanceOf(address account) external view returns (uint256);\n\n  function transfer(address recipient, uint256 amount) external returns (bool);\n\n  function approve(address spender, uint256 amount) external returns (bool);\n\n  function totalSupply() external view returns (uint256);\n\n  function transferFrom(\n    address sender,\n    address recipient,\n    uint256 amount\n  ) external returns (bool);\n\n  event Transfer(address indexed from, address indexed to, uint256 value);\n\n  event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n\nlibrary SafeERC20 {\n  using SafeMath for uint256;\n  using Address for address;\n\n  function safeTransfer(\n    IERC20 token,\n    address to,\n    uint256 value\n  ) internal {\n    _callOptionalReturn(\n      token,\n      abi.encodeWithSelector(token.transfer.selector, to, value)\n    );\n  }\n\n  function safeTransferFrom(\n    IERC20 token,\n    address from,\n    address to,\n    uint256 value\n  ) internal {\n    _callOptionalReturn(\n      token,\n      abi.encodeWithSelector(token.transferFrom.selector, from, to, value)\n    );\n  }\n\n  function _callOptionalReturn(IERC20 token, bytes memory data) private {\n    bytes memory returndata = address(token).functionCall(\n      data,\n      \"SafeERC20: low-level call failed\"\n    );\n    if (returndata.length > 0) {\n      // Return data is optional\n      // solhint-disable-next-line max-line-length\n      require(\n        abi.decode(returndata, (bool)),\n        \"SafeERC20: ERC20 operation did not succeed\"\n      );\n    }\n  }\n}\n\ninterface IERC20Mintable {\n  function mint(uint256 amount_) external;\n\n  function mint(address account_, uint256 ammount_) external;\n}\n\ninterface IOHMERC20 {\n  function burnFrom(address account_, uint256 amount_) external;\n}\n\ninterface IBondCalculator {\n  function valuation(address pair_, uint256 amount_)\n    external\n    view\n    returns (uint256 _value);\n}\n\ncontract MockOlympusTreasury is Ownable {\n  using SafeMath for uint256;\n  using SafeERC20 for IERC20;\n\n  event Deposit(address indexed token, uint256 amount, uint256 value);\n  event Withdrawal(address indexed token, uint256 amount, uint256 value);\n  event CreateDebt(\n    address indexed debtor,\n    address indexed token,\n    uint256 amount,\n    uint256 value\n  );\n  event RepayDebt(\n    address indexed debtor,\n    address indexed token,\n    uint256 amount,\n    uint256 value\n  );\n  event ReservesManaged(address indexed token, uint256 amount);\n  event ReservesUpdated(uint256 indexed totalReserves);\n  event ReservesAudited(uint256 indexed totalReserves);\n  event RewardsMinted(\n    address indexed caller,\n    address indexed recipient,\n    uint256 amount\n  );\n  event ChangeQueued(MANAGING indexed managing, address queued);\n  event ChangeActivated(\n    MANAGING indexed managing,\n    address activated,\n    bool result\n  );\n\n  enum MANAGING {\n    RESERVEDEPOSITOR,\n    RESERVESPENDER,\n    RESERVETOKEN,\n    RESERVEMANAGER,\n    LIQUIDITYDEPOSITOR,\n    LIQUIDITYTOKEN,\n    LIQUIDITYMANAGER,\n    DEBTOR,\n    REWARDMANAGER,\n    SOHM\n  }\n\n  address public immutable OHM;\n  uint256 public immutable blocksNeededForQueue;\n\n  address[] public reserveTokens; // Push only, beware false-positives.\n  mapping(address => bool) public isReserveToken;\n  mapping(address => uint256) public reserveTokenQueue; // Delays changes to mapping.\n\n  address[] public reserveDepositors; // Push only, beware false-positives. Only for viewing.\n  mapping(address => bool) public isReserveDepositor;\n  mapping(address => uint256) public reserveDepositorQueue; // Delays changes to mapping.\n\n  address[] public reserveSpenders; // Push only, beware false-positives. Only for viewing.\n  mapping(address => bool) public isReserveSpender;\n  mapping(address => uint256) public reserveSpenderQueue; // Delays changes to mapping.\n\n  address[] public liquidityTokens; // Push only, beware false-positives.\n  mapping(address => bool) public isLiquidityToken;\n  mapping(address => uint256) public LiquidityTokenQueue; // Delays changes to mapping.\n\n  address[] public liquidityDepositors; // Push only, beware false-positives. Only for viewing.\n  mapping(address => bool) public isLiquidityDepositor;\n  mapping(address => uint256) public LiquidityDepositorQueue; // Delays changes to mapping.\n\n  mapping(address => address) public bondCalculator; // bond calculator for liquidity token\n\n  address[] public reserveManagers; // Push only, beware false-positives. Only for viewing.\n  mapping(address => bool) public isReserveManager;\n  mapping(address => uint256) public ReserveManagerQueue; // Delays changes to mapping.\n\n  address[] public liquidityManagers; // Push only, beware false-positives. Only for viewing.\n  mapping(address => bool) public isLiquidityManager;\n  mapping(address => uint256) public LiquidityManagerQueue; // Delays changes to mapping.\n\n  address[] public debtors; // Push only, beware false-positives. Only for viewing.\n  mapping(address => bool) public isDebtor;\n  mapping(address => uint256) public debtorQueue; // Delays changes to mapping.\n  mapping(address => uint256) public debtorBalance;\n\n  address[] public rewardManagers; // Push only, beware false-positives. Only for viewing.\n  mapping(address => bool) public isRewardManager;\n  mapping(address => uint256) public rewardManagerQueue; // Delays changes to mapping.\n\n  address public sOHM;\n  uint256 public sOHMQueue; // Delays change to sOHM address\n\n  uint256 public totalReserves; // Risk-free value of all assets\n  uint256 public totalDebt;\n\n  constructor(\n    address _OHM,\n    address _DAI,\n    address _Frax,\n    //address _OHMDAI,\n    uint256 _blocksNeededForQueue\n  ) {\n    require(_OHM != address(0));\n    OHM = _OHM;\n\n    isReserveToken[_DAI] = true;\n    reserveTokens.push(_DAI);\n\n    isReserveToken[_Frax] = true;\n    reserveTokens.push(_Frax);\n\n    // isLiquidityToken[ _OHMDAI ] = true;\n    // liquidityTokens.push( _OHMDAI );\n\n    blocksNeededForQueue = _blocksNeededForQueue;\n  }\n\n  /**\n        @notice allow approved address to deposit an asset for OHM\n        @param _amount uint\n        @param _token address\n        @param _profit uint\n        @return send_ uint\n     */\n  function deposit(\n    uint256 _amount,\n    address _token,\n    uint256 _profit\n  ) external returns (uint256 send_) {\n    require(isReserveToken[_token] || isLiquidityToken[_token], \"Not accepted\");\n    IERC20(_token).safeTransferFrom(msg.sender, address(this), _amount);\n\n    if (isReserveToken[_token]) {\n      require(isReserveDepositor[msg.sender], \"Not approved\");\n    } else {\n      require(isLiquidityDepositor[msg.sender], \"Not approved\");\n    }\n\n    uint256 value = valueOfToken(_token, _amount);\n    (_token, _amount);\n    // mint OHM needed and store amount of rewards for distribution\n    send_ = value.sub(_profit);\n    IERC20Mintable(OHM).mint(msg.sender, send_);\n\n    totalReserves = totalReserves.add(value);\n    emit ReservesUpdated(totalReserves);\n\n    emit Deposit(_token, _amount, value);\n  }\n\n  /**\n        @notice allow approved address to burn OHM for reserves\n        @param _amount uint\n        @param _token address\n     */\n  function withdraw(uint256 _amount, address _token) external {\n    require(isReserveToken[_token], \"Not accepted\"); // Only reserves can be used for redemptions\n    require(isReserveSpender[msg.sender] == true, \"Not approved\");\n\n    uint256 value = valueOfToken(_token, _amount);\n    IOHMERC20(OHM).burnFrom(msg.sender, value);\n\n    totalReserves = totalReserves.sub(value);\n    emit ReservesUpdated(totalReserves);\n\n    IERC20(_token).safeTransfer(msg.sender, _amount);\n\n    emit Withdrawal(_token, _amount, value);\n  }\n\n  /**\n        @notice allow approved address to borrow reserves\n        @param _amount uint\n        @param _token address\n     */\n  function incurDebt(uint256 _amount, address _token) external {\n    require(isDebtor[msg.sender], \"Not approved\");\n    require(isReserveToken[_token], \"Not accepted\");\n\n    uint256 value = valueOfToken(_token, _amount);\n\n    uint256 maximumDebt = IERC20(sOHM).balanceOf(msg.sender); // Can only borrow against sOHM held\n    uint256 availableDebt = maximumDebt.sub(debtorBalance[msg.sender]);\n    require(value <= availableDebt, \"Exceeds debt limit\");\n\n    debtorBalance[msg.sender] = debtorBalance[msg.sender].add(value);\n    totalDebt = totalDebt.add(value);\n\n    totalReserves = totalReserves.sub(value);\n    emit ReservesUpdated(totalReserves);\n\n    IERC20(_token).transfer(msg.sender, _amount);\n\n    emit CreateDebt(msg.sender, _token, _amount, value);\n  }\n\n  /**\n        @notice allow approved address to repay borrowed reserves with reserves\n        @param _amount uint\n        @param _token address\n     */\n  function repayDebtWithReserve(uint256 _amount, address _token) external {\n    require(isDebtor[msg.sender], \"Not approved\");\n    require(isReserveToken[_token], \"Not accepted\");\n\n    IERC20(_token).safeTransferFrom(msg.sender, address(this), _amount);\n\n    uint256 value = valueOfToken(_token, _amount);\n    debtorBalance[msg.sender] = debtorBalance[msg.sender].sub(value);\n    totalDebt = totalDebt.sub(value);\n\n    totalReserves = totalReserves.add(value);\n    emit ReservesUpdated(totalReserves);\n\n    emit RepayDebt(msg.sender, _token, _amount, value);\n  }\n\n  /**\n        @notice allow approved address to repay borrowed reserves with OHM\n        @param _amount uint\n     */\n  function repayDebtWithOHM(uint256 _amount) external {\n    require(isDebtor[msg.sender], \"Not approved\");\n\n    IOHMERC20(OHM).burnFrom(msg.sender, _amount);\n\n    debtorBalance[msg.sender] = debtorBalance[msg.sender].sub(_amount);\n    totalDebt = totalDebt.sub(_amount);\n\n    emit RepayDebt(msg.sender, OHM, _amount, _amount);\n  }\n\n  /**\n        @notice allow approved address to withdraw assets\n        @param _token address\n        @param _amount uint\n     */\n  function manage(address _token, uint256 _amount) external {\n    if (isLiquidityToken[_token]) {\n      require(isLiquidityManager[msg.sender], \"Not approved\");\n    } else {\n      require(isReserveManager[msg.sender], \"Not approved\");\n    }\n\n    uint256 value = valueOfToken(_token, _amount);\n    (_token, _amount);\n    require(value <= excessReserves(), \"Insufficient reserves\");\n\n    totalReserves = totalReserves.sub(value);\n    emit ReservesUpdated(totalReserves);\n\n    IERC20(_token).safeTransfer(msg.sender, _amount);\n\n    emit ReservesManaged(_token, _amount);\n  }\n\n  /**\n        @notice send epoch reward to staking contract\n     */\n  function mintRewards(address _recipient, uint256 _amount) external {\n    require(isRewardManager[msg.sender], \"Not approved\");\n    require(_amount <= excessReserves(), \"Insufficient reserves\");\n\n    IERC20Mintable(OHM).mint(_recipient, _amount);\n\n    emit RewardsMinted(msg.sender, _recipient, _amount);\n  }\n\n  /**\n        @notice returns excess reserves not backing tokens\n        @return uint\n     */\n  function excessReserves() public view returns (uint256) {\n    return totalReserves.sub(IERC20(OHM).totalSupply().sub(totalDebt));\n  }\n\n  /**\n        @notice takes inventory of all tracked assets\n        @notice always consolidate to recognized reserves before audit\n     */\n  function auditReserves() external onlyManager {\n    uint256 reserves;\n    for (uint256 i = 0; i < reserveTokens.length; i++) {\n      reserves = reserves.add(\n        valueOfToken(\n          reserveTokens[i],\n          IERC20(reserveTokens[i]).balanceOf(address(this))\n        )\n      );\n    }\n    for (uint256 i = 0; i < liquidityTokens.length; i++) {\n      reserves = reserves.add(\n        valueOfToken(\n          liquidityTokens[i],\n          IERC20(liquidityTokens[i]).balanceOf(address(this))\n        )\n      );\n    }\n    totalReserves = reserves;\n    emit ReservesUpdated(reserves);\n    emit ReservesAudited(reserves);\n  }\n\n  /**\n        @notice returns OHM valuation of asset\n        @param _token address\n        @param _amount uint\n        @return value_ uint\n     */\n  function valueOfToken(address _token, uint256 _amount)\n    public\n    view\n    returns (uint256 value_)\n  {\n    if (isReserveToken[_token]) {\n      // convert amount to match OHM decimals\n      value_ = _amount.mul(10**IERC20(OHM).decimals()).div(\n        10**IERC20(_token).decimals()\n      );\n    } else if (isLiquidityToken[_token]) {\n      value_ = IBondCalculator(bondCalculator[_token]).valuation(\n        _token,\n        _amount\n      );\n    }\n  }\n\n  /**\n        @notice queue address to change boolean in mapping\n        @param _managing MANAGING\n        @param _address address\n        @return bool\n     */\n  function queue(MANAGING _managing, address _address)\n    external\n    onlyManager\n    returns (bool)\n  {\n    require(_address != address(0));\n    if (_managing == MANAGING.RESERVEDEPOSITOR) {\n      // 0\n      reserveDepositorQueue[_address] = block.number.add(blocksNeededForQueue);\n    } else if (_managing == MANAGING.RESERVESPENDER) {\n      // 1\n      reserveSpenderQueue[_address] = block.number.add(blocksNeededForQueue);\n    } else if (_managing == MANAGING.RESERVETOKEN) {\n      // 2\n      reserveTokenQueue[_address] = block.number.add(blocksNeededForQueue);\n    } else if (_managing == MANAGING.RESERVEMANAGER) {\n      // 3\n      ReserveManagerQueue[_address] = block.number.add(\n        blocksNeededForQueue.mul(2)\n      );\n    } else if (_managing == MANAGING.LIQUIDITYDEPOSITOR) {\n      // 4\n      LiquidityDepositorQueue[_address] = block.number.add(\n        blocksNeededForQueue\n      );\n    } else if (_managing == MANAGING.LIQUIDITYTOKEN) {\n      // 5\n      LiquidityTokenQueue[_address] = block.number.add(blocksNeededForQueue);\n    } else if (_managing == MANAGING.LIQUIDITYMANAGER) {\n      // 6\n      LiquidityManagerQueue[_address] = block.number.add(\n        blocksNeededForQueue.mul(2)\n      );\n    } else if (_managing == MANAGING.DEBTOR) {\n      // 7\n      debtorQueue[_address] = block.number.add(blocksNeededForQueue);\n    } else if (_managing == MANAGING.REWARDMANAGER) {\n      // 8\n      rewardManagerQueue[_address] = block.number.add(blocksNeededForQueue);\n    } else if (_managing == MANAGING.SOHM) {\n      // 9\n      sOHMQueue = block.number.add(blocksNeededForQueue);\n    } else return false;\n\n    emit ChangeQueued(_managing, _address);\n    return true;\n  }\n\n  /**\n        @notice verify queue then set boolean in mapping\n        @param _managing MANAGING\n        @param _address address\n        @param _calculator address\n        @return bool\n     */\n  function toggle(\n    MANAGING _managing,\n    address _address,\n    address _calculator\n  ) external onlyManager returns (bool) {\n    require(_address != address(0));\n    bool result;\n    if (_managing == MANAGING.RESERVEDEPOSITOR) {\n      // 0\n      if (requirements(reserveDepositorQueue, isReserveDepositor, _address)) {\n        reserveDepositorQueue[_address] = 0;\n        if (!listContains(reserveDepositors, _address)) {\n          reserveDepositors.push(_address);\n        }\n      }\n      result = !isReserveDepositor[_address];\n      isReserveDepositor[_address] = result;\n    } else if (_managing == MANAGING.RESERVESPENDER) {\n      // 1\n      if (requirements(reserveSpenderQueue, isReserveSpender, _address)) {\n        reserveSpenderQueue[_address] = 0;\n        if (!listContains(reserveSpenders, _address)) {\n          reserveSpenders.push(_address);\n        }\n      }\n      result = !isReserveSpender[_address];\n      isReserveSpender[_address] = result;\n    } else if (_managing == MANAGING.RESERVETOKEN) {\n      // 2\n      if (requirements(reserveTokenQueue, isReserveToken, _address)) {\n        reserveTokenQueue[_address] = 0;\n        if (!listContains(reserveTokens, _address)) {\n          reserveTokens.push(_address);\n        }\n      }\n      result = !isReserveToken[_address];\n      isReserveToken[_address] = result;\n    } else if (_managing == MANAGING.RESERVEMANAGER) {\n      // 3\n      if (requirements(ReserveManagerQueue, isReserveManager, _address)) {\n        reserveManagers.push(_address);\n        ReserveManagerQueue[_address] = 0;\n        if (!listContains(reserveManagers, _address)) {\n          reserveManagers.push(_address);\n        }\n      }\n      result = !isReserveManager[_address];\n      isReserveManager[_address] = result;\n    } else if (_managing == MANAGING.LIQUIDITYDEPOSITOR) {\n      // 4\n      if (\n        requirements(LiquidityDepositorQueue, isLiquidityDepositor, _address)\n      ) {\n        liquidityDepositors.push(_address);\n        LiquidityDepositorQueue[_address] = 0;\n        if (!listContains(liquidityDepositors, _address)) {\n          liquidityDepositors.push(_address);\n        }\n      }\n      result = !isLiquidityDepositor[_address];\n      isLiquidityDepositor[_address] = result;\n    } else if (_managing == MANAGING.LIQUIDITYTOKEN) {\n      // 5\n      if (requirements(LiquidityTokenQueue, isLiquidityToken, _address)) {\n        LiquidityTokenQueue[_address] = 0;\n        if (!listContains(liquidityTokens, _address)) {\n          liquidityTokens.push(_address);\n        }\n      }\n      result = !isLiquidityToken[_address];\n      isLiquidityToken[_address] = result;\n      bondCalculator[_address] = _calculator;\n    } else if (_managing == MANAGING.LIQUIDITYMANAGER) {\n      // 6\n      if (requirements(LiquidityManagerQueue, isLiquidityManager, _address)) {\n        LiquidityManagerQueue[_address] = 0;\n        if (!listContains(liquidityManagers, _address)) {\n          liquidityManagers.push(_address);\n        }\n      }\n      result = !isLiquidityManager[_address];\n      isLiquidityManager[_address] = result;\n    } else if (_managing == MANAGING.DEBTOR) {\n      // 7\n      if (requirements(debtorQueue, isDebtor, _address)) {\n        debtorQueue[_address] = 0;\n        if (!listContains(debtors, _address)) {\n          debtors.push(_address);\n        }\n      }\n      result = !isDebtor[_address];\n      isDebtor[_address] = result;\n    } else if (_managing == MANAGING.REWARDMANAGER) {\n      // 8\n      if (requirements(rewardManagerQueue, isRewardManager, _address)) {\n        rewardManagerQueue[_address] = 0;\n        if (!listContains(rewardManagers, _address)) {\n          rewardManagers.push(_address);\n        }\n      }\n      result = !isRewardManager[_address];\n      isRewardManager[_address] = result;\n    } else if (_managing == MANAGING.SOHM) {\n      // 9\n      sOHMQueue = 0;\n      sOHM = _address;\n      result = true;\n    } else return false;\n\n    emit ChangeActivated(_managing, _address, result);\n    return true;\n  }\n\n  /**\n        @notice checks requirements and returns altered structs\n        @param queue_ mapping( address => uint )\n        @param status_ mapping( address => bool )\n        @param _address address\n        @return bool \n     */\n  function requirements(\n    mapping(address => uint256) storage queue_,\n    mapping(address => bool) storage status_,\n    address _address\n  ) internal view returns (bool) {\n    if (!status_[_address]) {\n      require(queue_[_address] != 0, \"Must queue\");\n      require(queue_[_address] <= block.number, \"Queue not expired\");\n      return true;\n    }\n    return false;\n  }\n\n  /**\n        @notice checks array to ensure against duplicate\n        @param _list address[]\n        @param _token address\n        @return bool\n     */\n  function listContains(address[] storage _list, address _token)\n    internal\n    view\n    returns (bool)\n  {\n    for (uint256 i = 0; i < _list.length; i++) {\n      if (_list[i] == _token) {\n        return true;\n      }\n    }\n    return false;\n  }\n}\n"
      }
    },
    "settings": {
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "evmVersion": "london",
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers",
            "metadata",
            "devdoc",
            "userdoc",
            "storageLayout",
            "evm.gasEstimates"
          ],
          "": [
            "ast"
          ]
        }
      },
      "metadata": {
        "useLiteralContent": true
      }
    }
  },
  "output": {
    "contracts": {
      "contracts/mocks/MockTreasury.sol": {
        "Address": {
          "abi": [],
          "devdoc": {
            "kind": "dev",
            "methods": {},
            "version": 1
          },
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202771e2ce88f364c6c21f87ce71bc65b82081bbb5fcae201d15cf28ee5c60342864736f6c634300080a0033",
              "opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x27 PUSH18 0xE2CE88F364C6C21F87CE71BC65B82081BBB5 0xFC 0xAE KECCAK256 SAR ISZERO 0xCF 0x28 0xEE 0x5C PUSH1 0x34 0x28 PUSH5 0x736F6C6343 STOP ADDMOD EXP STOP CALLER ",
              "sourceMap": "1105:1851:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1105:1851:0;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202771e2ce88f364c6c21f87ce71bc65b82081bbb5fcae201d15cf28ee5c60342864736f6c634300080a0033",
              "opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x27 PUSH18 0xE2CE88F364C6C21F87CE71BC65B82081BBB5 0xFC 0xAE KECCAK256 SAR ISZERO 0xCF 0x28 0xEE 0x5C PUSH1 0x34 0x28 PUSH5 0x736F6C6343 STOP ADDMOD EXP STOP CALLER ",
              "sourceMap": "1105:1851:0:-:0;;;;;;;;"
            },
            "gasEstimates": {
              "creation": {
                "codeDepositCost": "17200",
                "executionCost": "103",
                "totalCost": "17303"
              },
              "internal": {
                "_functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
                "_verifyCallResult(bool,bytes memory,string memory)": "infinite",
                "functionCall(address,bytes memory,string memory)": "infinite",
                "isContract(address)": "infinite"
              }
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/mocks/MockTreasury.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/mocks/MockTreasury.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.10;\\n\\nlibrary SafeMath {\\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n    uint256 c = a + b;\\n    require(c >= a, \\\"SafeMath: addition overflow\\\");\\n\\n    return c;\\n  }\\n\\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n    return sub(a, b, \\\"SafeMath: subtraction overflow\\\");\\n  }\\n\\n  function sub(\\n    uint256 a,\\n    uint256 b,\\n    string memory errorMessage\\n  ) internal pure returns (uint256) {\\n    require(b <= a, errorMessage);\\n    uint256 c = a - b;\\n\\n    return c;\\n  }\\n\\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n    if (a == 0) {\\n      return 0;\\n    }\\n\\n    uint256 c = a * b;\\n    require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\n\\n    return c;\\n  }\\n\\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n    return div(a, b, \\\"SafeMath: division by zero\\\");\\n  }\\n\\n  function div(\\n    uint256 a,\\n    uint256 b,\\n    string memory errorMessage\\n  ) internal pure returns (uint256) {\\n    require(b > 0, errorMessage);\\n    uint256 c = a / b;\\n    return c;\\n  }\\n}\\n\\nlibrary Address {\\n  function isContract(address account) internal view returns (bool) {\\n    // This method relies in extcodesize, which returns 0 for contracts in\\n    // construction, since the code is only stored at the end of the\\n    // constructor execution.\\n\\n    uint256 size;\\n    // solhint-disable-next-line no-inline-assembly\\n    assembly {\\n      size := extcodesize(account)\\n    }\\n    return size > 0;\\n  }\\n\\n  function functionCall(\\n    address target,\\n    bytes memory data,\\n    string memory errorMessage\\n  ) internal returns (bytes memory) {\\n    return _functionCallWithValue(target, data, 0, errorMessage);\\n  }\\n\\n  function _functionCallWithValue(\\n    address target,\\n    bytes memory data,\\n    uint256 weiValue,\\n    string memory errorMessage\\n  ) private returns (bytes memory) {\\n    require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n    // solhint-disable-next-line avoid-low-level-calls\\n    (bool success, bytes memory returndata) = target.call{value: weiValue}(\\n      data\\n    );\\n    if (success) {\\n      return returndata;\\n    } else {\\n      if (returndata.length > 0) {\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n          let returndata_size := mload(returndata)\\n          revert(add(32, returndata), returndata_size)\\n        }\\n      } else {\\n        revert(errorMessage);\\n      }\\n    }\\n  }\\n\\n  function _verifyCallResult(\\n    bool success,\\n    bytes memory returndata,\\n    string memory errorMessage\\n  ) private pure returns (bytes memory) {\\n    if (success) {\\n      return returndata;\\n    } else {\\n      if (returndata.length > 0) {\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n          let returndata_size := mload(returndata)\\n          revert(add(32, returndata), returndata_size)\\n        }\\n      } else {\\n        revert(errorMessage);\\n      }\\n    }\\n  }\\n}\\n\\ninterface IOwnable {\\n  function manager() external view returns (address);\\n\\n  function renounceManagement() external;\\n\\n  function pushManagement(address newOwner_) external;\\n\\n  function pullManagement() external;\\n}\\n\\ncontract Ownable is IOwnable {\\n  address internal _owner;\\n  address internal _newOwner;\\n\\n  event OwnershipPushed(\\n    address indexed previousOwner,\\n    address indexed newOwner\\n  );\\n  event OwnershipPulled(\\n    address indexed previousOwner,\\n    address indexed newOwner\\n  );\\n\\n  constructor() {\\n    _owner = msg.sender;\\n    emit OwnershipPushed(address(0), _owner);\\n  }\\n\\n  function manager() public view override returns (address) {\\n    return _owner;\\n  }\\n\\n  modifier onlyManager() {\\n    require(_owner == msg.sender, \\\"Ownable: caller is not the owner\\\");\\n    _;\\n  }\\n\\n  function renounceManagement() public virtual override onlyManager {\\n    emit OwnershipPushed(_owner, address(0));\\n    _owner = address(0);\\n  }\\n\\n  function pushManagement(address newOwner_)\\n    public\\n    virtual\\n    override\\n    onlyManager\\n  {\\n    require(newOwner_ != address(0), \\\"Ownable: new owner is the zero address\\\");\\n    emit OwnershipPushed(_owner, newOwner_);\\n    _newOwner = newOwner_;\\n  }\\n\\n  function pullManagement() public virtual override {\\n    require(msg.sender == _newOwner, \\\"Ownable: must be new owner to pull\\\");\\n    emit OwnershipPulled(_owner, _newOwner);\\n    _owner = _newOwner;\\n  }\\n}\\n\\ninterface IERC20 {\\n  function decimals() external view returns (uint8);\\n\\n  function balanceOf(address account) external view returns (uint256);\\n\\n  function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n  function approve(address spender, uint256 amount) external returns (bool);\\n\\n  function totalSupply() external view returns (uint256);\\n\\n  function transferFrom(\\n    address sender,\\n    address recipient,\\n    uint256 amount\\n  ) external returns (bool);\\n\\n  event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n  event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\\nlibrary SafeERC20 {\\n  using SafeMath for uint256;\\n  using Address for address;\\n\\n  function safeTransfer(\\n    IERC20 token,\\n    address to,\\n    uint256 value\\n  ) internal {\\n    _callOptionalReturn(\\n      token,\\n      abi.encodeWithSelector(token.transfer.selector, to, value)\\n    );\\n  }\\n\\n  function safeTransferFrom(\\n    IERC20 token,\\n    address from,\\n    address to,\\n    uint256 value\\n  ) internal {\\n    _callOptionalReturn(\\n      token,\\n      abi.encodeWithSelector(token.transferFrom.selector, from, to, value)\\n    );\\n  }\\n\\n  function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n    bytes memory returndata = address(token).functionCall(\\n      data,\\n      \\\"SafeERC20: low-level call failed\\\"\\n    );\\n    if (returndata.length > 0) {\\n      // Return data is optional\\n      // solhint-disable-next-line max-line-length\\n      require(\\n        abi.decode(returndata, (bool)),\\n        \\\"SafeERC20: ERC20 operation did not succeed\\\"\\n      );\\n    }\\n  }\\n}\\n\\ninterface IERC20Mintable {\\n  function mint(uint256 amount_) external;\\n\\n  function mint(address account_, uint256 ammount_) external;\\n}\\n\\ninterface IOHMERC20 {\\n  function burnFrom(address account_, uint256 amount_) external;\\n}\\n\\ninterface IBondCalculator {\\n  function valuation(address pair_, uint256 amount_)\\n    external\\n    view\\n    returns (uint256 _value);\\n}\\n\\ncontract MockOlympusTreasury is Ownable {\\n  using SafeMath for uint256;\\n  using SafeERC20 for IERC20;\\n\\n  event Deposit(address indexed token, uint256 amount, uint256 value);\\n  event Withdrawal(address indexed token, uint256 amount, uint256 value);\\n  event CreateDebt(\\n    address indexed debtor,\\n    address indexed token,\\n    uint256 amount,\\n    uint256 value\\n  );\\n  event RepayDebt(\\n    address indexed debtor,\\n    address indexed token,\\n    uint256 amount,\\n    uint256 value\\n  );\\n  event ReservesManaged(address indexed token, uint256 amount);\\n  event ReservesUpdated(uint256 indexed totalReserves);\\n  event ReservesAudited(uint256 indexed totalReserves);\\n  event RewardsMinted(\\n    address indexed caller,\\n    address indexed recipient,\\n    uint256 amount\\n  );\\n  event ChangeQueued(MANAGING indexed managing, address queued);\\n  event ChangeActivated(\\n    MANAGING indexed managing,\\n    address activated,\\n    bool result\\n  );\\n\\n  enum MANAGING {\\n    RESERVEDEPOSITOR,\\n    RESERVESPENDER,\\n    RESERVETOKEN,\\n    RESERVEMANAGER,\\n    LIQUIDITYDEPOSITOR,\\n    LIQUIDITYTOKEN,\\n    LIQUIDITYMANAGER,\\n    DEBTOR,\\n    REWARDMANAGER,\\n    SOHM\\n  }\\n\\n  address public immutable OHM;\\n  uint256 public immutable blocksNeededForQueue;\\n\\n  address[] public reserveTokens; // Push only, beware false-positives.\\n  mapping(address => bool) public isReserveToken;\\n  mapping(address => uint256) public reserveTokenQueue; // Delays changes to mapping.\\n\\n  address[] public reserveDepositors; // Push only, beware false-positives. Only for viewing.\\n  mapping(address => bool) public isReserveDepositor;\\n  mapping(address => uint256) public reserveDepositorQueue; // Delays changes to mapping.\\n\\n  address[] public reserveSpenders; // Push only, beware false-positives. Only for viewing.\\n  mapping(address => bool) public isReserveSpender;\\n  mapping(address => uint256) public reserveSpenderQueue; // Delays changes to mapping.\\n\\n  address[] public liquidityTokens; // Push only, beware false-positives.\\n  mapping(address => bool) public isLiquidityToken;\\n  mapping(address => uint256) public LiquidityTokenQueue; // Delays changes to mapping.\\n\\n  address[] public liquidityDepositors; // Push only, beware false-positives. Only for viewing.\\n  mapping(address => bool) public isLiquidityDepositor;\\n  mapping(address => uint256) public LiquidityDepositorQueue; // Delays changes to mapping.\\n\\n  mapping(address => address) public bondCalculator; // bond calculator for liquidity token\\n\\n  address[] public reserveManagers; // Push only, beware false-positives. Only for viewing.\\n  mapping(address => bool) public isReserveManager;\\n  mapping(address => uint256) public ReserveManagerQueue; // Delays changes to mapping.\\n\\n  address[] public liquidityManagers; // Push only, beware false-positives. Only for viewing.\\n  mapping(address => bool) public isLiquidityManager;\\n  mapping(address => uint256) public LiquidityManagerQueue; // Delays changes to mapping.\\n\\n  address[] public debtors; // Push only, beware false-positives. Only for viewing.\\n  mapping(address => bool) public isDebtor;\\n  mapping(address => uint256) public debtorQueue; // Delays changes to mapping.\\n  mapping(address => uint256) public debtorBalance;\\n\\n  address[] public rewardManagers; // Push only, beware false-positives. Only for viewing.\\n  mapping(address => bool) public isRewardManager;\\n  mapping(address => uint256) public rewardManagerQueue; // Delays changes to mapping.\\n\\n  address public sOHM;\\n  uint256 public sOHMQueue; // Delays change to sOHM address\\n\\n  uint256 public totalReserves; // Risk-free value of all assets\\n  uint256 public totalDebt;\\n\\n  constructor(\\n    address _OHM,\\n    address _DAI,\\n    address _Frax,\\n    //address _OHMDAI,\\n    uint256 _blocksNeededForQueue\\n  ) {\\n    require(_OHM != address(0));\\n    OHM = _OHM;\\n\\n    isReserveToken[_DAI] = true;\\n    reserveTokens.push(_DAI);\\n\\n    isReserveToken[_Frax] = true;\\n    reserveTokens.push(_Frax);\\n\\n    // isLiquidityToken[ _OHMDAI ] = true;\\n    // liquidityTokens.push( _OHMDAI );\\n\\n    blocksNeededForQueue = _blocksNeededForQueue;\\n  }\\n\\n  /**\\n        @notice allow approved address to deposit an asset for OHM\\n        @param _amount uint\\n        @param _token address\\n        @param _profit uint\\n        @return send_ uint\\n     */\\n  function deposit(\\n    uint256 _amount,\\n    address _token,\\n    uint256 _profit\\n  ) external returns (uint256 send_) {\\n    require(isReserveToken[_token] || isLiquidityToken[_token], \\\"Not accepted\\\");\\n    IERC20(_token).safeTransferFrom(msg.sender, address(this), _amount);\\n\\n    if (isReserveToken[_token]) {\\n      require(isReserveDepositor[msg.sender], \\\"Not approved\\\");\\n    } else {\\n      require(isLiquidityDepositor[msg.sender], \\\"Not approved\\\");\\n    }\\n\\n    uint256 value = valueOfToken(_token, _amount);\\n    (_token, _amount);\\n    // mint OHM needed and store amount of rewards for distribution\\n    send_ = value.sub(_profit);\\n    IERC20Mintable(OHM).mint(msg.sender, send_);\\n\\n    totalReserves = totalReserves.add(value);\\n    emit ReservesUpdated(totalReserves);\\n\\n    emit Deposit(_token, _amount, value);\\n  }\\n\\n  /**\\n        @notice allow approved address to burn OHM for reserves\\n        @param _amount uint\\n        @param _token address\\n     */\\n  function withdraw(uint256 _amount, address _token) external {\\n    require(isReserveToken[_token], \\\"Not accepted\\\"); // Only reserves can be used for redemptions\\n    require(isReserveSpender[msg.sender] == true, \\\"Not approved\\\");\\n\\n    uint256 value = valueOfToken(_token, _amount);\\n    IOHMERC20(OHM).burnFrom(msg.sender, value);\\n\\n    totalReserves = totalReserves.sub(value);\\n    emit ReservesUpdated(totalReserves);\\n\\n    IERC20(_token).safeTransfer(msg.sender, _amount);\\n\\n    emit Withdrawal(_token, _amount, value);\\n  }\\n\\n  /**\\n        @notice allow approved address to borrow reserves\\n        @param _amount uint\\n        @param _token address\\n     */\\n  function incurDebt(uint256 _amount, address _token) external {\\n    require(isDebtor[msg.sender], \\\"Not approved\\\");\\n    require(isReserveToken[_token], \\\"Not accepted\\\");\\n\\n    uint256 value = valueOfToken(_token, _amount);\\n\\n    uint256 maximumDebt = IERC20(sOHM).balanceOf(msg.sender); // Can only borrow against sOHM held\\n    uint256 availableDebt = maximumDebt.sub(debtorBalance[msg.sender]);\\n    require(value <= availableDebt, \\\"Exceeds debt limit\\\");\\n\\n    debtorBalance[msg.sender] = debtorBalance[msg.sender].add(value);\\n    totalDebt = totalDebt.add(value);\\n\\n    totalReserves = totalReserves.sub(value);\\n    emit ReservesUpdated(totalReserves);\\n\\n    IERC20(_token).transfer(msg.sender, _amount);\\n\\n    emit CreateDebt(msg.sender, _token, _amount, value);\\n  }\\n\\n  /**\\n        @notice allow approved address to repay borrowed reserves with reserves\\n        @param _amount uint\\n        @param _token address\\n     */\\n  function repayDebtWithReserve(uint256 _amount, address _token) external {\\n    require(isDebtor[msg.sender], \\\"Not approved\\\");\\n    require(isReserveToken[_token], \\\"Not accepted\\\");\\n\\n    IERC20(_token).safeTransferFrom(msg.sender, address(this), _amount);\\n\\n    uint256 value = valueOfToken(_token, _amount);\\n    debtorBalance[msg.sender] = debtorBalance[msg.sender].sub(value);\\n    totalDebt = totalDebt.sub(value);\\n\\n    totalReserves = totalReserves.add(value);\\n    emit ReservesUpdated(totalReserves);\\n\\n    emit RepayDebt(msg.sender, _token, _amount, value);\\n  }\\n\\n  /**\\n        @notice allow approved address to repay borrowed reserves with OHM\\n        @param _amount uint\\n     */\\n  function repayDebtWithOHM(uint256 _amount) external {\\n    require(isDebtor[msg.sender], \\\"Not approved\\\");\\n\\n    IOHMERC20(OHM).burnFrom(msg.sender, _amount);\\n\\n    debtorBalance[msg.sender] = debtorBalance[msg.sender].sub(_amount);\\n    totalDebt = totalDebt.sub(_amount);\\n\\n    emit RepayDebt(msg.sender, OHM, _amount, _amount);\\n  }\\n\\n  /**\\n        @notice allow approved address to withdraw assets\\n        @param _token address\\n        @param _amount uint\\n     */\\n  function manage(address _token, uint256 _amount) external {\\n    if (isLiquidityToken[_token]) {\\n      require(isLiquidityManager[msg.sender], \\\"Not approved\\\");\\n    } else {\\n      require(isReserveManager[msg.sender], \\\"Not approved\\\");\\n    }\\n\\n    uint256 value = valueOfToken(_token, _amount);\\n    (_token, _amount);\\n    require(value <= excessReserves(), \\\"Insufficient reserves\\\");\\n\\n    totalReserves = totalReserves.sub(value);\\n    emit ReservesUpdated(totalReserves);\\n\\n    IERC20(_token).safeTransfer(msg.sender, _amount);\\n\\n    emit ReservesManaged(_token, _amount);\\n  }\\n\\n  /**\\n        @notice send epoch reward to staking contract\\n     */\\n  function mintRewards(address _recipient, uint256 _amount) external {\\n    require(isRewardManager[msg.sender], \\\"Not approved\\\");\\n    require(_amount <= excessReserves(), \\\"Insufficient reserves\\\");\\n\\n    IERC20Mintable(OHM).mint(_recipient, _amount);\\n\\n    emit RewardsMinted(msg.sender, _recipient, _amount);\\n  }\\n\\n  /**\\n        @notice returns excess reserves not backing tokens\\n        @return uint\\n     */\\n  function excessReserves() public view returns (uint256) {\\n    return totalReserves.sub(IERC20(OHM).totalSupply().sub(totalDebt));\\n  }\\n\\n  /**\\n        @notice takes inventory of all tracked assets\\n        @notice always consolidate to recognized reserves before audit\\n     */\\n  function auditReserves() external onlyManager {\\n    uint256 reserves;\\n    for (uint256 i = 0; i < reserveTokens.length; i++) {\\n      reserves = reserves.add(\\n        valueOfToken(\\n          reserveTokens[i],\\n          IERC20(reserveTokens[i]).balanceOf(address(this))\\n        )\\n      );\\n    }\\n    for (uint256 i = 0; i < liquidityTokens.length; i++) {\\n      reserves = reserves.add(\\n        valueOfToken(\\n          liquidityTokens[i],\\n          IERC20(liquidityTokens[i]).balanceOf(address(this))\\n        )\\n      );\\n    }\\n    totalReserves = reserves;\\n    emit ReservesUpdated(reserves);\\n    emit ReservesAudited(reserves);\\n  }\\n\\n  /**\\n        @notice returns OHM valuation of asset\\n        @param _token address\\n        @param _amount uint\\n        @return value_ uint\\n     */\\n  function valueOfToken(address _token, uint256 _amount)\\n    public\\n    view\\n    returns (uint256 value_)\\n  {\\n    if (isReserveToken[_token]) {\\n      // convert amount to match OHM decimals\\n      value_ = _amount.mul(10**IERC20(OHM).decimals()).div(\\n        10**IERC20(_token).decimals()\\n      );\\n    } else if (isLiquidityToken[_token]) {\\n      value_ = IBondCalculator(bondCalculator[_token]).valuation(\\n        _token,\\n        _amount\\n      );\\n    }\\n  }\\n\\n  /**\\n        @notice queue address to change boolean in mapping\\n        @param _managing MANAGING\\n        @param _address address\\n        @return bool\\n     */\\n  function queue(MANAGING _managing, address _address)\\n    external\\n    onlyManager\\n    returns (bool)\\n  {\\n    require(_address != address(0));\\n    if (_managing == MANAGING.RESERVEDEPOSITOR) {\\n      // 0\\n      reserveDepositorQueue[_address] = block.number.add(blocksNeededForQueue);\\n    } else if (_managing == MANAGING.RESERVESPENDER) {\\n      // 1\\n      reserveSpenderQueue[_address] = block.number.add(blocksNeededForQueue);\\n    } else if (_managing == MANAGING.RESERVETOKEN) {\\n      // 2\\n      reserveTokenQueue[_address] = block.number.add(blocksNeededForQueue);\\n    } else if (_managing == MANAGING.RESERVEMANAGER) {\\n      // 3\\n      ReserveManagerQueue[_address] = block.number.add(\\n        blocksNeededForQueue.mul(2)\\n      );\\n    } else if (_managing == MANAGING.LIQUIDITYDEPOSITOR) {\\n      // 4\\n      LiquidityDepositorQueue[_address] = block.number.add(\\n        blocksNeededForQueue\\n      );\\n    } else if (_managing == MANAGING.LIQUIDITYTOKEN) {\\n      // 5\\n      LiquidityTokenQueue[_address] = block.number.add(blocksNeededForQueue);\\n    } else if (_managing == MANAGING.LIQUIDITYMANAGER) {\\n      // 6\\n      LiquidityManagerQueue[_address] = block.number.add(\\n        blocksNeededForQueue.mul(2)\\n      );\\n    } else if (_managing == MANAGING.DEBTOR) {\\n      // 7\\n      debtorQueue[_address] = block.number.add(blocksNeededForQueue);\\n    } else if (_managing == MANAGING.REWARDMANAGER) {\\n      // 8\\n      rewardManagerQueue[_address] = block.number.add(blocksNeededForQueue);\\n    } else if (_managing == MANAGING.SOHM) {\\n      // 9\\n      sOHMQueue = block.number.add(blocksNeededForQueue);\\n    } else return false;\\n\\n    emit ChangeQueued(_managing, _address);\\n    return true;\\n  }\\n\\n  /**\\n        @notice verify queue then set boolean in mapping\\n        @param _managing MANAGING\\n        @param _address address\\n        @param _calculator address\\n        @return bool\\n     */\\n  function toggle(\\n    MANAGING _managing,\\n    address _address,\\n    address _calculator\\n  ) external onlyManager returns (bool) {\\n    require(_address != address(0));\\n    bool result;\\n    if (_managing == MANAGING.RESERVEDEPOSITOR) {\\n      // 0\\n      if (requirements(reserveDepositorQueue, isReserveDepositor, _address)) {\\n        reserveDepositorQueue[_address] = 0;\\n        if (!listContains(reserveDepositors, _address)) {\\n          reserveDepositors.push(_address);\\n        }\\n      }\\n      result = !isReserveDepositor[_address];\\n      isReserveDepositor[_address] = result;\\n    } else if (_managing == MANAGING.RESERVESPENDER) {\\n      // 1\\n      if (requirements(reserveSpenderQueue, isReserveSpender, _address)) {\\n        reserveSpenderQueue[_address] = 0;\\n        if (!listContains(reserveSpenders, _address)) {\\n          reserveSpenders.push(_address);\\n        }\\n      }\\n      result = !isReserveSpender[_address];\\n      isReserveSpender[_address] = result;\\n    } else if (_managing == MANAGING.RESERVETOKEN) {\\n      // 2\\n      if (requirements(reserveTokenQueue, isReserveToken, _address)) {\\n        reserveTokenQueue[_address] = 0;\\n        if (!listContains(reserveTokens, _address)) {\\n          reserveTokens.push(_address);\\n        }\\n      }\\n      result = !isReserveToken[_address];\\n      isReserveToken[_address] = result;\\n    } else if (_managing == MANAGING.RESERVEMANAGER) {\\n      // 3\\n      if (requirements(ReserveManagerQueue, isReserveManager, _address)) {\\n        reserveManagers.push(_address);\\n        ReserveManagerQueue[_address] = 0;\\n        if (!listContains(reserveManagers, _address)) {\\n          reserveManagers.push(_address);\\n        }\\n      }\\n      result = !isReserveManager[_address];\\n      isReserveManager[_address] = result;\\n    } else if (_managing == MANAGING.LIQUIDITYDEPOSITOR) {\\n      // 4\\n      if (\\n        requirements(LiquidityDepositorQueue, isLiquidityDepositor, _address)\\n      ) {\\n        liquidityDepositors.push(_address);\\n        LiquidityDepositorQueue[_address] = 0;\\n        if (!listContains(liquidityDepositors, _address)) {\\n          liquidityDepositors.push(_address);\\n        }\\n      }\\n      result = !isLiquidityDepositor[_address];\\n      isLiquidityDepositor[_address] = result;\\n    } else if (_managing == MANAGING.LIQUIDITYTOKEN) {\\n      // 5\\n      if (requirements(LiquidityTokenQueue, isLiquidityToken, _address)) {\\n        LiquidityTokenQueue[_address] = 0;\\n        if (!listContains(liquidityTokens, _address)) {\\n          liquidityTokens.push(_address);\\n        }\\n      }\\n      result = !isLiquidityToken[_address];\\n      isLiquidityToken[_address] = result;\\n      bondCalculator[_address] = _calculator;\\n    } else if (_managing == MANAGING.LIQUIDITYMANAGER) {\\n      // 6\\n      if (requirements(LiquidityManagerQueue, isLiquidityManager, _address)) {\\n        LiquidityManagerQueue[_address] = 0;\\n        if (!listContains(liquidityManagers, _address)) {\\n          liquidityManagers.push(_address);\\n        }\\n      }\\n      result = !isLiquidityManager[_address];\\n      isLiquidityManager[_address] = result;\\n    } else if (_managing == MANAGING.DEBTOR) {\\n      // 7\\n      if (requirements(debtorQueue, isDebtor, _address)) {\\n        debtorQueue[_address] = 0;\\n        if (!listContains(debtors, _address)) {\\n          debtors.push(_address);\\n        }\\n      }\\n      result = !isDebtor[_address];\\n      isDebtor[_address] = result;\\n    } else if (_managing == MANAGING.REWARDMANAGER) {\\n      // 8\\n      if (requirements(rewardManagerQueue, isRewardManager, _address)) {\\n        rewardManagerQueue[_address] = 0;\\n        if (!listContains(rewardManagers, _address)) {\\n          rewardManagers.push(_address);\\n        }\\n      }\\n      result = !isRewardManager[_address];\\n      isRewardManager[_address] = result;\\n    } else if (_managing == MANAGING.SOHM) {\\n      // 9\\n      sOHMQueue = 0;\\n      sOHM = _address;\\n      result = true;\\n    } else return false;\\n\\n    emit ChangeActivated(_managing, _address, result);\\n    return true;\\n  }\\n\\n  /**\\n        @notice checks requirements and returns altered structs\\n        @param queue_ mapping( address => uint )\\n        @param status_ mapping( address => bool )\\n        @param _address address\\n        @return bool \\n     */\\n  function requirements(\\n    mapping(address => uint256) storage queue_,\\n    mapping(address => bool) storage status_,\\n    address _address\\n  ) internal view returns (bool) {\\n    if (!status_[_address]) {\\n      require(queue_[_address] != 0, \\\"Must queue\\\");\\n      require(queue_[_address] <= block.number, \\\"Queue not expired\\\");\\n      return true;\\n    }\\n    return false;\\n  }\\n\\n  /**\\n        @notice checks array to ensure against duplicate\\n        @param _list address[]\\n        @param _token address\\n        @return bool\\n     */\\n  function listContains(address[] storage _list, address _token)\\n    internal\\n    view\\n    returns (bool)\\n  {\\n    for (uint256 i = 0; i < _list.length; i++) {\\n      if (_list[i] == _token) {\\n        return true;\\n      }\\n    }\\n    return false;\\n  }\\n}\\n\",\"keccak256\":\"0x02db9e69fb4f8c1d1c9dc5c99e26fadc4373cef48acd8949c016aae2a74e45fb\",\"license\":\"MIT\"}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          },
          "userdoc": {
            "kind": "user",
            "methods": {},
            "version": 1
          }
        },
        "IBondCalculator": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "pair_",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount_",
                  "type": "uint256"
                }
              ],
              "name": "valuation",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "_value",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "devdoc": {
            "kind": "dev",
            "methods": {},
            "version": 1
          },
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "gasEstimates": null,
            "methodIdentifiers": {
              "valuation(address,uint256)": "4249719f"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pair_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount_\",\"type\":\"uint256\"}],\"name\":\"valuation\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/mocks/MockTreasury.sol\":\"IBondCalculator\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/mocks/MockTreasury.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.10;\\n\\nlibrary SafeMath {\\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n    uint256 c = a + b;\\n    require(c >= a, \\\"SafeMath: addition overflow\\\");\\n\\n    return c;\\n  }\\n\\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n    return sub(a, b, \\\"SafeMath: subtraction overflow\\\");\\n  }\\n\\n  function sub(\\n    uint256 a,\\n    uint256 b,\\n    string memory errorMessage\\n  ) internal pure returns (uint256) {\\n    require(b <= a, errorMessage);\\n    uint256 c = a - b;\\n\\n    return c;\\n  }\\n\\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n    if (a == 0) {\\n      return 0;\\n    }\\n\\n    uint256 c = a * b;\\n    require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\n\\n    return c;\\n  }\\n\\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n    return div(a, b, \\\"SafeMath: division by zero\\\");\\n  }\\n\\n  function div(\\n    uint256 a,\\n    uint256 b,\\n    string memory errorMessage\\n  ) internal pure returns (uint256) {\\n    require(b > 0, errorMessage);\\n    uint256 c = a / b;\\n    return c;\\n  }\\n}\\n\\nlibrary Address {\\n  function isContract(address account) internal view returns (bool) {\\n    // This method relies in extcodesize, which returns 0 for contracts in\\n    // construction, since the code is only stored at the end of the\\n    // constructor execution.\\n\\n    uint256 size;\\n    // solhint-disable-next-line no-inline-assembly\\n    assembly {\\n      size := extcodesize(account)\\n    }\\n    return size > 0;\\n  }\\n\\n  function functionCall(\\n    address target,\\n    bytes memory data,\\n    string memory errorMessage\\n  ) internal returns (bytes memory) {\\n    return _functionCallWithValue(target, data, 0, errorMessage);\\n  }\\n\\n  function _functionCallWithValue(\\n    address target,\\n    bytes memory data,\\n    uint256 weiValue,\\n    string memory errorMessage\\n  ) private returns (bytes memory) {\\n    require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n    // solhint-disable-next-line avoid-low-level-calls\\n    (bool success, bytes memory returndata) = target.call{value: weiValue}(\\n      data\\n    );\\n    if (success) {\\n      return returndata;\\n    } else {\\n      if (returndata.length > 0) {\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n          let returndata_size := mload(returndata)\\n          revert(add(32, returndata), returndata_size)\\n        }\\n      } else {\\n        revert(errorMessage);\\n      }\\n    }\\n  }\\n\\n  function _verifyCallResult(\\n    bool success,\\n    bytes memory returndata,\\n    string memory errorMessage\\n  ) private pure returns (bytes memory) {\\n    if (success) {\\n      return returndata;\\n    } else {\\n      if (returndata.length > 0) {\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n          let returndata_size := mload(returndata)\\n          revert(add(32, returndata), returndata_size)\\n        }\\n      } else {\\n        revert(errorMessage);\\n      }\\n    }\\n  }\\n}\\n\\ninterface IOwnable {\\n  function manager() external view returns (address);\\n\\n  function renounceManagement() external;\\n\\n  function pushManagement(address newOwner_) external;\\n\\n  function pullManagement() external;\\n}\\n\\ncontract Ownable is IOwnable {\\n  address internal _owner;\\n  address internal _newOwner;\\n\\n  event OwnershipPushed(\\n    address indexed previousOwner,\\n    address indexed newOwner\\n  );\\n  event OwnershipPulled(\\n    address indexed previousOwner,\\n    address indexed newOwner\\n  );\\n\\n  constructor() {\\n    _owner = msg.sender;\\n    emit OwnershipPushed(address(0), _owner);\\n  }\\n\\n  function manager() public view override returns (address) {\\n    return _owner;\\n  }\\n\\n  modifier onlyManager() {\\n    require(_owner == msg.sender, \\\"Ownable: caller is not the owner\\\");\\n    _;\\n  }\\n\\n  function renounceManagement() public virtual override onlyManager {\\n    emit OwnershipPushed(_owner, address(0));\\n    _owner = address(0);\\n  }\\n\\n  function pushManagement(address newOwner_)\\n    public\\n    virtual\\n    override\\n    onlyManager\\n  {\\n    require(newOwner_ != address(0), \\\"Ownable: new owner is the zero address\\\");\\n    emit OwnershipPushed(_owner, newOwner_);\\n    _newOwner = newOwner_;\\n  }\\n\\n  function pullManagement() public virtual override {\\n    require(msg.sender == _newOwner, \\\"Ownable: must be new owner to pull\\\");\\n    emit OwnershipPulled(_owner, _newOwner);\\n    _owner = _newOwner;\\n  }\\n}\\n\\ninterface IERC20 {\\n  function decimals() external view returns (uint8);\\n\\n  function balanceOf(address account) external view returns (uint256);\\n\\n  function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n  function approve(address spender, uint256 amount) external returns (bool);\\n\\n  function totalSupply() external view returns (uint256);\\n\\n  function transferFrom(\\n    address sender,\\n    address recipient,\\n    uint256 amount\\n  ) external returns (bool);\\n\\n  event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n  event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\\nlibrary SafeERC20 {\\n  using SafeMath for uint256;\\n  using Address for address;\\n\\n  function safeTransfer(\\n    IERC20 token,\\n    address to,\\n    uint256 value\\n  ) internal {\\n    _callOptionalReturn(\\n      token,\\n      abi.encodeWithSelector(token.transfer.selector, to, value)\\n    );\\n  }\\n\\n  function safeTransferFrom(\\n    IERC20 token,\\n    address from,\\n    address to,\\n    uint256 value\\n  ) internal {\\n    _callOptionalReturn(\\n      token,\\n      abi.encodeWithSelector(token.transferFrom.selector, from, to, value)\\n    );\\n  }\\n\\n  function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n    bytes memory returndata = address(token).functionCall(\\n      data,\\n      \\\"SafeERC20: low-level call failed\\\"\\n    );\\n    if (returndata.length > 0) {\\n      // Return data is optional\\n      // solhint-disable-next-line max-line-length\\n      require(\\n        abi.decode(returndata, (bool)),\\n        \\\"SafeERC20: ERC20 operation did not succeed\\\"\\n      );\\n    }\\n  }\\n}\\n\\ninterface IERC20Mintable {\\n  function mint(uint256 amount_) external;\\n\\n  function mint(address account_, uint256 ammount_) external;\\n}\\n\\ninterface IOHMERC20 {\\n  function burnFrom(address account_, uint256 amount_) external;\\n}\\n\\ninterface IBondCalculator {\\n  function valuation(address pair_, uint256 amount_)\\n    external\\n    view\\n    returns (uint256 _value);\\n}\\n\\ncontract MockOlympusTreasury is Ownable {\\n  using SafeMath for uint256;\\n  using SafeERC20 for IERC20;\\n\\n  event Deposit(address indexed token, uint256 amount, uint256 value);\\n  event Withdrawal(address indexed token, uint256 amount, uint256 value);\\n  event CreateDebt(\\n    address indexed debtor,\\n    address indexed token,\\n    uint256 amount,\\n    uint256 value\\n  );\\n  event RepayDebt(\\n    address indexed debtor,\\n    address indexed token,\\n    uint256 amount,\\n    uint256 value\\n  );\\n  event ReservesManaged(address indexed token, uint256 amount);\\n  event ReservesUpdated(uint256 indexed totalReserves);\\n  event ReservesAudited(uint256 indexed totalReserves);\\n  event RewardsMinted(\\n    address indexed caller,\\n    address indexed recipient,\\n    uint256 amount\\n  );\\n  event ChangeQueued(MANAGING indexed managing, address queued);\\n  event ChangeActivated(\\n    MANAGING indexed managing,\\n    address activated,\\n    bool result\\n  );\\n\\n  enum MANAGING {\\n    RESERVEDEPOSITOR,\\n    RESERVESPENDER,\\n    RESERVETOKEN,\\n    RESERVEMANAGER,\\n    LIQUIDITYDEPOSITOR,\\n    LIQUIDITYTOKEN,\\n    LIQUIDITYMANAGER,\\n    DEBTOR,\\n    REWARDMANAGER,\\n    SOHM\\n  }\\n\\n  address public immutable OHM;\\n  uint256 public immutable blocksNeededForQueue;\\n\\n  address[] public reserveTokens; // Push only, beware false-positives.\\n  mapping(address => bool) public isReserveToken;\\n  mapping(address => uint256) public reserveTokenQueue; // Delays changes to mapping.\\n\\n  address[] public reserveDepositors; // Push only, beware false-positives. Only for viewing.\\n  mapping(address => bool) public isReserveDepositor;\\n  mapping(address => uint256) public reserveDepositorQueue; // Delays changes to mapping.\\n\\n  address[] public reserveSpenders; // Push only, beware false-positives. Only for viewing.\\n  mapping(address => bool) public isReserveSpender;\\n  mapping(address => uint256) public reserveSpenderQueue; // Delays changes to mapping.\\n\\n  address[] public liquidityTokens; // Push only, beware false-positives.\\n  mapping(address => bool) public isLiquidityToken;\\n  mapping(address => uint256) public LiquidityTokenQueue; // Delays changes to mapping.\\n\\n  address[] public liquidityDepositors; // Push only, beware false-positives. Only for viewing.\\n  mapping(address => bool) public isLiquidityDepositor;\\n  mapping(address => uint256) public LiquidityDepositorQueue; // Delays changes to mapping.\\n\\n  mapping(address => address) public bondCalculator; // bond calculator for liquidity token\\n\\n  address[] public reserveManagers; // Push only, beware false-positives. Only for viewing.\\n  mapping(address => bool) public isReserveManager;\\n  mapping(address => uint256) public ReserveManagerQueue; // Delays changes to mapping.\\n\\n  address[] public liquidityManagers; // Push only, beware false-positives. Only for viewing.\\n  mapping(address => bool) public isLiquidityManager;\\n  mapping(address => uint256) public LiquidityManagerQueue; // Delays changes to mapping.\\n\\n  address[] public debtors; // Push only, beware false-positives. Only for viewing.\\n  mapping(address => bool) public isDebtor;\\n  mapping(address => uint256) public debtorQueue; // Delays changes to mapping.\\n  mapping(address => uint256) public debtorBalance;\\n\\n  address[] public rewardManagers; // Push only, beware false-positives. Only for viewing.\\n  mapping(address => bool) public isRewardManager;\\n  mapping(address => uint256) public rewardManagerQueue; // Delays changes to mapping.\\n\\n  address public sOHM;\\n  uint256 public sOHMQueue; // Delays change to sOHM address\\n\\n  uint256 public totalReserves; // Risk-free value of all assets\\n  uint256 public totalDebt;\\n\\n  constructor(\\n    address _OHM,\\n    address _DAI,\\n    address _Frax,\\n    //address _OHMDAI,\\n    uint256 _blocksNeededForQueue\\n  ) {\\n    require(_OHM != address(0));\\n    OHM = _OHM;\\n\\n    isReserveToken[_DAI] = true;\\n    reserveTokens.push(_DAI);\\n\\n    isReserveToken[_Frax] = true;\\n    reserveTokens.push(_Frax);\\n\\n    // isLiquidityToken[ _OHMDAI ] = true;\\n    // liquidityTokens.push( _OHMDAI );\\n\\n    blocksNeededForQueue = _blocksNeededForQueue;\\n  }\\n\\n  /**\\n        @notice allow approved address to deposit an asset for OHM\\n        @param _amount uint\\n        @param _token address\\n        @param _profit uint\\n        @return send_ uint\\n     */\\n  function deposit(\\n    uint256 _amount,\\n    address _token,\\n    uint256 _profit\\n  ) external returns (uint256 send_) {\\n    require(isReserveToken[_token] || isLiquidityToken[_token], \\\"Not accepted\\\");\\n    IERC20(_token).safeTransferFrom(msg.sender, address(this), _amount);\\n\\n    if (isReserveToken[_token]) {\\n      require(isReserveDepositor[msg.sender], \\\"Not approved\\\");\\n    } else {\\n      require(isLiquidityDepositor[msg.sender], \\\"Not approved\\\");\\n    }\\n\\n    uint256 value = valueOfToken(_token, _amount);\\n    (_token, _amount);\\n    // mint OHM needed and store amount of rewards for distribution\\n    send_ = value.sub(_profit);\\n    IERC20Mintable(OHM).mint(msg.sender, send_);\\n\\n    totalReserves = totalReserves.add(value);\\n    emit ReservesUpdated(totalReserves);\\n\\n    emit Deposit(_token, _amount, value);\\n  }\\n\\n  /**\\n        @notice allow approved address to burn OHM for reserves\\n        @param _amount uint\\n        @param _token address\\n     */\\n  function withdraw(uint256 _amount, address _token) external {\\n    require(isReserveToken[_token], \\\"Not accepted\\\"); // Only reserves can be used for redemptions\\n    require(isReserveSpender[msg.sender] == true, \\\"Not approved\\\");\\n\\n    uint256 value = valueOfToken(_token, _amount);\\n    IOHMERC20(OHM).burnFrom(msg.sender, value);\\n\\n    totalReserves = totalReserves.sub(value);\\n    emit ReservesUpdated(totalReserves);\\n\\n    IERC20(_token).safeTransfer(msg.sender, _amount);\\n\\n    emit Withdrawal(_token, _amount, value);\\n  }\\n\\n  /**\\n        @notice allow approved address to borrow reserves\\n        @param _amount uint\\n        @param _token address\\n     */\\n  function incurDebt(uint256 _amount, address _token) external {\\n    require(isDebtor[msg.sender], \\\"Not approved\\\");\\n    require(isReserveToken[_token], \\\"Not accepted\\\");\\n\\n    uint256 value = valueOfToken(_token, _amount);\\n\\n    uint256 maximumDebt = IERC20(sOHM).balanceOf(msg.sender); // Can only borrow against sOHM held\\n    uint256 availableDebt = maximumDebt.sub(debtorBalance[msg.sender]);\\n    require(value <= availableDebt, \\\"Exceeds debt limit\\\");\\n\\n    debtorBalance[msg.sender] = debtorBalance[msg.sender].add(value);\\n    totalDebt = totalDebt.add(value);\\n\\n    totalReserves = totalReserves.sub(value);\\n    emit ReservesUpdated(totalReserves);\\n\\n    IERC20(_token).transfer(msg.sender, _amount);\\n\\n    emit CreateDebt(msg.sender, _token, _amount, value);\\n  }\\n\\n  /**\\n        @notice allow approved address to repay borrowed reserves with reserves\\n        @param _amount uint\\n        @param _token address\\n     */\\n  function repayDebtWithReserve(uint256 _amount, address _token) external {\\n    require(isDebtor[msg.sender], \\\"Not approved\\\");\\n    require(isReserveToken[_token], \\\"Not accepted\\\");\\n\\n    IERC20(_token).safeTransferFrom(msg.sender, address(this), _amount);\\n\\n    uint256 value = valueOfToken(_token, _amount);\\n    debtorBalance[msg.sender] = debtorBalance[msg.sender].sub(value);\\n    totalDebt = totalDebt.sub(value);\\n\\n    totalReserves = totalReserves.add(value);\\n    emit ReservesUpdated(totalReserves);\\n\\n    emit RepayDebt(msg.sender, _token, _amount, value);\\n  }\\n\\n  /**\\n        @notice allow approved address to repay borrowed reserves with OHM\\n        @param _amount uint\\n     */\\n  function repayDebtWithOHM(uint256 _amount) external {\\n    require(isDebtor[msg.sender], \\\"Not approved\\\");\\n\\n    IOHMERC20(OHM).burnFrom(msg.sender, _amount);\\n\\n    debtorBalance[msg.sender] = debtorBalance[msg.sender].sub(_amount);\\n    totalDebt = totalDebt.sub(_amount);\\n\\n    emit RepayDebt(msg.sender, OHM, _amount, _amount);\\n  }\\n\\n  /**\\n        @notice allow approved address to withdraw assets\\n        @param _token address\\n        @param _amount uint\\n     */\\n  function manage(address _token, uint256 _amount) external {\\n    if (isLiquidityToken[_token]) {\\n      require(isLiquidityManager[msg.sender], \\\"Not approved\\\");\\n    } else {\\n      require(isReserveManager[msg.sender], \\\"Not approved\\\");\\n    }\\n\\n    uint256 value = valueOfToken(_token, _amount);\\n    (_token, _amount);\\n    require(value <= excessReserves(), \\\"Insufficient reserves\\\");\\n\\n    totalReserves = totalReserves.sub(value);\\n    emit ReservesUpdated(totalReserves);\\n\\n    IERC20(_token).safeTransfer(msg.sender, _amount);\\n\\n    emit ReservesManaged(_token, _amount);\\n  }\\n\\n  /**\\n        @notice send epoch reward to staking contract\\n     */\\n  function mintRewards(address _recipient, uint256 _amount) external {\\n    require(isRewardManager[msg.sender], \\\"Not approved\\\");\\n    require(_amount <= excessReserves(), \\\"Insufficient reserves\\\");\\n\\n    IERC20Mintable(OHM).mint(_recipient, _amount);\\n\\n    emit RewardsMinted(msg.sender, _recipient, _amount);\\n  }\\n\\n  /**\\n        @notice returns excess reserves not backing tokens\\n        @return uint\\n     */\\n  function excessReserves() public view returns (uint256) {\\n    return totalReserves.sub(IERC20(OHM).totalSupply().sub(totalDebt));\\n  }\\n\\n  /**\\n        @notice takes inventory of all tracked assets\\n        @notice always consolidate to recognized reserves before audit\\n     */\\n  function auditReserves() external onlyManager {\\n    uint256 reserves;\\n    for (uint256 i = 0; i < reserveTokens.length; i++) {\\n      reserves = reserves.add(\\n        valueOfToken(\\n          reserveTokens[i],\\n          IERC20(reserveTokens[i]).balanceOf(address(this))\\n        )\\n      );\\n    }\\n    for (uint256 i = 0; i < liquidityTokens.length; i++) {\\n      reserves = reserves.add(\\n        valueOfToken(\\n          liquidityTokens[i],\\n          IERC20(liquidityTokens[i]).balanceOf(address(this))\\n        )\\n      );\\n    }\\n    totalReserves = reserves;\\n    emit ReservesUpdated(reserves);\\n    emit ReservesAudited(reserves);\\n  }\\n\\n  /**\\n        @notice returns OHM valuation of asset\\n        @param _token address\\n        @param _amount uint\\n        @return value_ uint\\n     */\\n  function valueOfToken(address _token, uint256 _amount)\\n    public\\n    view\\n    returns (uint256 value_)\\n  {\\n    if (isReserveToken[_token]) {\\n      // convert amount to match OHM decimals\\n      value_ = _amount.mul(10**IERC20(OHM).decimals()).div(\\n        10**IERC20(_token).decimals()\\n      );\\n    } else if (isLiquidityToken[_token]) {\\n      value_ = IBondCalculator(bondCalculator[_token]).valuation(\\n        _token,\\n        _amount\\n      );\\n    }\\n  }\\n\\n  /**\\n        @notice queue address to change boolean in mapping\\n        @param _managing MANAGING\\n        @param _address address\\n        @return bool\\n     */\\n  function queue(MANAGING _managing, address _address)\\n    external\\n    onlyManager\\n    returns (bool)\\n  {\\n    require(_address != address(0));\\n    if (_managing == MANAGING.RESERVEDEPOSITOR) {\\n      // 0\\n      reserveDepositorQueue[_address] = block.number.add(blocksNeededForQueue);\\n    } else if (_managing == MANAGING.RESERVESPENDER) {\\n      // 1\\n      reserveSpenderQueue[_address] = block.number.add(blocksNeededForQueue);\\n    } else if (_managing == MANAGING.RESERVETOKEN) {\\n      // 2\\n      reserveTokenQueue[_address] = block.number.add(blocksNeededForQueue);\\n    } else if (_managing == MANAGING.RESERVEMANAGER) {\\n      // 3\\n      ReserveManagerQueue[_address] = block.number.add(\\n        blocksNeededForQueue.mul(2)\\n      );\\n    } else if (_managing == MANAGING.LIQUIDITYDEPOSITOR) {\\n      // 4\\n      LiquidityDepositorQueue[_address] = block.number.add(\\n        blocksNeededForQueue\\n      );\\n    } else if (_managing == MANAGING.LIQUIDITYTOKEN) {\\n      // 5\\n      LiquidityTokenQueue[_address] = block.number.add(blocksNeededForQueue);\\n    } else if (_managing == MANAGING.LIQUIDITYMANAGER) {\\n      // 6\\n      LiquidityManagerQueue[_address] = block.number.add(\\n        blocksNeededForQueue.mul(2)\\n      );\\n    } else if (_managing == MANAGING.DEBTOR) {\\n      // 7\\n      debtorQueue[_address] = block.number.add(blocksNeededForQueue);\\n    } else if (_managing == MANAGING.REWARDMANAGER) {\\n      // 8\\n      rewardManagerQueue[_address] = block.number.add(blocksNeededForQueue);\\n    } else if (_managing == MANAGING.SOHM) {\\n      // 9\\n      sOHMQueue = block.number.add(blocksNeededForQueue);\\n    } else return false;\\n\\n    emit ChangeQueued(_managing, _address);\\n    return true;\\n  }\\n\\n  /**\\n        @notice verify queue then set boolean in mapping\\n        @param _managing MANAGING\\n        @param _address address\\n        @param _calculator address\\n        @return bool\\n     */\\n  function toggle(\\n    MANAGING _managing,\\n    address _address,\\n    address _calculator\\n  ) external onlyManager returns (bool) {\\n    require(_address != address(0));\\n    bool result;\\n    if (_managing == MANAGING.RESERVEDEPOSITOR) {\\n      // 0\\n      if (requirements(reserveDepositorQueue, isReserveDepositor, _address)) {\\n        reserveDepositorQueue[_address] = 0;\\n        if (!listContains(reserveDepositors, _address)) {\\n          reserveDepositors.push(_address);\\n        }\\n      }\\n      result = !isReserveDepositor[_address];\\n      isReserveDepositor[_address] = result;\\n    } else if (_managing == MANAGING.RESERVESPENDER) {\\n      // 1\\n      if (requirements(reserveSpenderQueue, isReserveSpender, _address)) {\\n        reserveSpenderQueue[_address] = 0;\\n        if (!listContains(reserveSpenders, _address)) {\\n          reserveSpenders.push(_address);\\n        }\\n      }\\n      result = !isReserveSpender[_address];\\n      isReserveSpender[_address] = result;\\n    } else if (_managing == MANAGING.RESERVETOKEN) {\\n      // 2\\n      if (requirements(reserveTokenQueue, isReserveToken, _address)) {\\n        reserveTokenQueue[_address] = 0;\\n        if (!listContains(reserveTokens, _address)) {\\n          reserveTokens.push(_address);\\n        }\\n      }\\n      result = !isReserveToken[_address];\\n      isReserveToken[_address] = result;\\n    } else if (_managing == MANAGING.RESERVEMANAGER) {\\n      // 3\\n      if (requirements(ReserveManagerQueue, isReserveManager, _address)) {\\n        reserveManagers.push(_address);\\n        ReserveManagerQueue[_address] = 0;\\n        if (!listContains(reserveManagers, _address)) {\\n          reserveManagers.push(_address);\\n        }\\n      }\\n      result = !isReserveManager[_address];\\n      isReserveManager[_address] = result;\\n    } else if (_managing == MANAGING.LIQUIDITYDEPOSITOR) {\\n      // 4\\n      if (\\n        requirements(LiquidityDepositorQueue, isLiquidityDepositor, _address)\\n      ) {\\n        liquidityDepositors.push(_address);\\n        LiquidityDepositorQueue[_address] = 0;\\n        if (!listContains(liquidityDepositors, _address)) {\\n          liquidityDepositors.push(_address);\\n        }\\n      }\\n      result = !isLiquidityDepositor[_address];\\n      isLiquidityDepositor[_address] = result;\\n    } else if (_managing == MANAGING.LIQUIDITYTOKEN) {\\n      // 5\\n      if (requirements(LiquidityTokenQueue, isLiquidityToken, _address)) {\\n        LiquidityTokenQueue[_address] = 0;\\n        if (!listContains(liquidityTokens, _address)) {\\n          liquidityTokens.push(_address);\\n        }\\n      }\\n      result = !isLiquidityToken[_address];\\n      isLiquidityToken[_address] = result;\\n      bondCalculator[_address] = _calculator;\\n    } else if (_managing == MANAGING.LIQUIDITYMANAGER) {\\n      // 6\\n      if (requirements(LiquidityManagerQueue, isLiquidityManager, _address)) {\\n        LiquidityManagerQueue[_address] = 0;\\n        if (!listContains(liquidityManagers, _address)) {\\n          liquidityManagers.push(_address);\\n        }\\n      }\\n      result = !isLiquidityManager[_address];\\n      isLiquidityManager[_address] = result;\\n    } else if (_managing == MANAGING.DEBTOR) {\\n      // 7\\n      if (requirements(debtorQueue, isDebtor, _address)) {\\n        debtorQueue[_address] = 0;\\n        if (!listContains(debtors, _address)) {\\n          debtors.push(_address);\\n        }\\n      }\\n      result = !isDebtor[_address];\\n      isDebtor[_address] = result;\\n    } else if (_managing == MANAGING.REWARDMANAGER) {\\n      // 8\\n      if (requirements(rewardManagerQueue, isRewardManager, _address)) {\\n        rewardManagerQueue[_address] = 0;\\n        if (!listContains(rewardManagers, _address)) {\\n          rewardManagers.push(_address);\\n        }\\n      }\\n      result = !isRewardManager[_address];\\n      isRewardManager[_address] = result;\\n    } else if (_managing == MANAGING.SOHM) {\\n      // 9\\n      sOHMQueue = 0;\\n      sOHM = _address;\\n      result = true;\\n    } else return false;\\n\\n    emit ChangeActivated(_managing, _address, result);\\n    return true;\\n  }\\n\\n  /**\\n        @notice checks requirements and returns altered structs\\n        @param queue_ mapping( address => uint )\\n        @param status_ mapping( address => bool )\\n        @param _address address\\n        @return bool \\n     */\\n  function requirements(\\n    mapping(address => uint256) storage queue_,\\n    mapping(address => bool) storage status_,\\n    address _address\\n  ) internal view returns (bool) {\\n    if (!status_[_address]) {\\n      require(queue_[_address] != 0, \\\"Must queue\\\");\\n      require(queue_[_address] <= block.number, \\\"Queue not expired\\\");\\n      return true;\\n    }\\n    return false;\\n  }\\n\\n  /**\\n        @notice checks array to ensure against duplicate\\n        @param _list address[]\\n        @param _token address\\n        @return bool\\n     */\\n  function listContains(address[] storage _list, address _token)\\n    internal\\n    view\\n    returns (bool)\\n  {\\n    for (uint256 i = 0; i < _list.length; i++) {\\n      if (_list[i] == _token) {\\n        return true;\\n      }\\n    }\\n    return false;\\n  }\\n}\\n\",\"keccak256\":\"0x02db9e69fb4f8c1d1c9dc5c99e26fadc4373cef48acd8949c016aae2a74e45fb\",\"license\":\"MIT\"}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          },
          "userdoc": {
            "kind": "user",
            "methods": {},
            "version": 1
          }
        },
        "IERC20": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "decimals",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "devdoc": {
            "kind": "dev",
            "methods": {},
            "version": 1
          },
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "gasEstimates": null,
            "methodIdentifiers": {
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "decimals()": "313ce567",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/mocks/MockTreasury.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/mocks/MockTreasury.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.10;\\n\\nlibrary SafeMath {\\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n    uint256 c = a + b;\\n    require(c >= a, \\\"SafeMath: addition overflow\\\");\\n\\n    return c;\\n  }\\n\\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n    return sub(a, b, \\\"SafeMath: subtraction overflow\\\");\\n  }\\n\\n  function sub(\\n    uint256 a,\\n    uint256 b,\\n    string memory errorMessage\\n  ) internal pure returns (uint256) {\\n    require(b <= a, errorMessage);\\n    uint256 c = a - b;\\n\\n    return c;\\n  }\\n\\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n    if (a == 0) {\\n      return 0;\\n    }\\n\\n    uint256 c = a * b;\\n    require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\n\\n    return c;\\n  }\\n\\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n    return div(a, b, \\\"SafeMath: division by zero\\\");\\n  }\\n\\n  function div(\\n    uint256 a,\\n    uint256 b,\\n    string memory errorMessage\\n  ) internal pure returns (uint256) {\\n    require(b > 0, errorMessage);\\n    uint256 c = a / b;\\n    return c;\\n  }\\n}\\n\\nlibrary Address {\\n  function isContract(address account) internal view returns (bool) {\\n    // This method relies in extcodesize, which returns 0 for contracts in\\n    // construction, since the code is only stored at the end of the\\n    // constructor execution.\\n\\n    uint256 size;\\n    // solhint-disable-next-line no-inline-assembly\\n    assembly {\\n      size := extcodesize(account)\\n    }\\n    return size > 0;\\n  }\\n\\n  function functionCall(\\n    address target,\\n    bytes memory data,\\n    string memory errorMessage\\n  ) internal returns (bytes memory) {\\n    return _functionCallWithValue(target, data, 0, errorMessage);\\n  }\\n\\n  function _functionCallWithValue(\\n    address target,\\n    bytes memory data,\\n    uint256 weiValue,\\n    string memory errorMessage\\n  ) private returns (bytes memory) {\\n    require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n    // solhint-disable-next-line avoid-low-level-calls\\n    (bool success, bytes memory returndata) = target.call{value: weiValue}(\\n      data\\n    );\\n    if (success) {\\n      return returndata;\\n    } else {\\n      if (returndata.length > 0) {\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n          let returndata_size := mload(returndata)\\n          revert(add(32, returndata), returndata_size)\\n        }\\n      } else {\\n        revert(errorMessage);\\n      }\\n    }\\n  }\\n\\n  function _verifyCallResult(\\n    bool success,\\n    bytes memory returndata,\\n    string memory errorMessage\\n  ) private pure returns (bytes memory) {\\n    if (success) {\\n      return returndata;\\n    } else {\\n      if (returndata.length > 0) {\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n          let returndata_size := mload(returndata)\\n          revert(add(32, returndata), returndata_size)\\n        }\\n      } else {\\n        revert(errorMessage);\\n      }\\n    }\\n  }\\n}\\n\\ninterface IOwnable {\\n  function manager() external view returns (address);\\n\\n  function renounceManagement() external;\\n\\n  function pushManagement(address newOwner_) external;\\n\\n  function pullManagement() external;\\n}\\n\\ncontract Ownable is IOwnable {\\n  address internal _owner;\\n  address internal _newOwner;\\n\\n  event OwnershipPushed(\\n    address indexed previousOwner,\\n    address indexed newOwner\\n  );\\n  event OwnershipPulled(\\n    address indexed previousOwner,\\n    address indexed newOwner\\n  );\\n\\n  constructor() {\\n    _owner = msg.sender;\\n    emit OwnershipPushed(address(0), _owner);\\n  }\\n\\n  function manager() public view override returns (address) {\\n    return _owner;\\n  }\\n\\n  modifier onlyManager() {\\n    require(_owner == msg.sender, \\\"Ownable: caller is not the owner\\\");\\n    _;\\n  }\\n\\n  function renounceManagement() public virtual override onlyManager {\\n    emit OwnershipPushed(_owner, address(0));\\n    _owner = address(0);\\n  }\\n\\n  function pushManagement(address newOwner_)\\n    public\\n    virtual\\n    override\\n    onlyManager\\n  {\\n    require(newOwner_ != address(0), \\\"Ownable: new owner is the zero address\\\");\\n    emit OwnershipPushed(_owner, newOwner_);\\n    _newOwner = newOwner_;\\n  }\\n\\n  function pullManagement() public virtual override {\\n    require(msg.sender == _newOwner, \\\"Ownable: must be new owner to pull\\\");\\n    emit OwnershipPulled(_owner, _newOwner);\\n    _owner = _newOwner;\\n  }\\n}\\n\\ninterface IERC20 {\\n  function decimals() external view returns (uint8);\\n\\n  function balanceOf(address account) external view returns (uint256);\\n\\n  function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n  function approve(address spender, uint256 amount) external returns (bool);\\n\\n  function totalSupply() external view returns (uint256);\\n\\n  function transferFrom(\\n    address sender,\\n    address recipient,\\n    uint256 amount\\n  ) external returns (bool);\\n\\n  event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n  event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\\nlibrary SafeERC20 {\\n  using SafeMath for uint256;\\n  using Address for address;\\n\\n  function safeTransfer(\\n    IERC20 token,\\n    address to,\\n    uint256 value\\n  ) internal {\\n    _callOptionalReturn(\\n      token,\\n      abi.encodeWithSelector(token.transfer.selector, to, value)\\n    );\\n  }\\n\\n  function safeTransferFrom(\\n    IERC20 token,\\n    address from,\\n    address to,\\n    uint256 value\\n  ) internal {\\n    _callOptionalReturn(\\n      token,\\n      abi.encodeWithSelector(token.transferFrom.selector, from, to, value)\\n    );\\n  }\\n\\n  function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n    bytes memory returndata = address(token).functionCall(\\n      data,\\n      \\\"SafeERC20: low-level call failed\\\"\\n    );\\n    if (returndata.length > 0) {\\n      // Return data is optional\\n      // solhint-disable-next-line max-line-length\\n      require(\\n        abi.decode(returndata, (bool)),\\n        \\\"SafeERC20: ERC20 operation did not succeed\\\"\\n      );\\n    }\\n  }\\n}\\n\\ninterface IERC20Mintable {\\n  function mint(uint256 amount_) external;\\n\\n  function mint(address account_, uint256 ammount_) external;\\n}\\n\\ninterface IOHMERC20 {\\n  function burnFrom(address account_, uint256 amount_) external;\\n}\\n\\ninterface IBondCalculator {\\n  function valuation(address pair_, uint256 amount_)\\n    external\\n    view\\n    returns (uint256 _value);\\n}\\n\\ncontract MockOlympusTreasury is Ownable {\\n  using SafeMath for uint256;\\n  using SafeERC20 for IERC20;\\n\\n  event Deposit(address indexed token, uint256 amount, uint256 value);\\n  event Withdrawal(address indexed token, uint256 amount, uint256 value);\\n  event CreateDebt(\\n    address indexed debtor,\\n    address indexed token,\\n    uint256 amount,\\n    uint256 value\\n  );\\n  event RepayDebt(\\n    address indexed debtor,\\n    address indexed token,\\n    uint256 amount,\\n    uint256 value\\n  );\\n  event ReservesManaged(address indexed token, uint256 amount);\\n  event ReservesUpdated(uint256 indexed totalReserves);\\n  event ReservesAudited(uint256 indexed totalReserves);\\n  event RewardsMinted(\\n    address indexed caller,\\n    address indexed recipient,\\n    uint256 amount\\n  );\\n  event ChangeQueued(MANAGING indexed managing, address queued);\\n  event ChangeActivated(\\n    MANAGING indexed managing,\\n    address activated,\\n    bool result\\n  );\\n\\n  enum MANAGING {\\n    RESERVEDEPOSITOR,\\n    RESERVESPENDER,\\n    RESERVETOKEN,\\n    RESERVEMANAGER,\\n    LIQUIDITYDEPOSITOR,\\n    LIQUIDITYTOKEN,\\n    LIQUIDITYMANAGER,\\n    DEBTOR,\\n    REWARDMANAGER,\\n    SOHM\\n  }\\n\\n  address public immutable OHM;\\n  uint256 public immutable blocksNeededForQueue;\\n\\n  address[] public reserveTokens; // Push only, beware false-positives.\\n  mapping(address => bool) public isReserveToken;\\n  mapping(address => uint256) public reserveTokenQueue; // Delays changes to mapping.\\n\\n  address[] public reserveDepositors; // Push only, beware false-positives. Only for viewing.\\n  mapping(address => bool) public isReserveDepositor;\\n  mapping(address => uint256) public reserveDepositorQueue; // Delays changes to mapping.\\n\\n  address[] public reserveSpenders; // Push only, beware false-positives. Only for viewing.\\n  mapping(address => bool) public isReserveSpender;\\n  mapping(address => uint256) public reserveSpenderQueue; // Delays changes to mapping.\\n\\n  address[] public liquidityTokens; // Push only, beware false-positives.\\n  mapping(address => bool) public isLiquidityToken;\\n  mapping(address => uint256) public LiquidityTokenQueue; // Delays changes to mapping.\\n\\n  address[] public liquidityDepositors; // Push only, beware false-positives. Only for viewing.\\n  mapping(address => bool) public isLiquidityDepositor;\\n  mapping(address => uint256) public LiquidityDepositorQueue; // Delays changes to mapping.\\n\\n  mapping(address => address) public bondCalculator; // bond calculator for liquidity token\\n\\n  address[] public reserveManagers; // Push only, beware false-positives. Only for viewing.\\n  mapping(address => bool) public isReserveManager;\\n  mapping(address => uint256) public ReserveManagerQueue; // Delays changes to mapping.\\n\\n  address[] public liquidityManagers; // Push only, beware false-positives. Only for viewing.\\n  mapping(address => bool) public isLiquidityManager;\\n  mapping(address => uint256) public LiquidityManagerQueue; // Delays changes to mapping.\\n\\n  address[] public debtors; // Push only, beware false-positives. Only for viewing.\\n  mapping(address => bool) public isDebtor;\\n  mapping(address => uint256) public debtorQueue; // Delays changes to mapping.\\n  mapping(address => uint256) public debtorBalance;\\n\\n  address[] public rewardManagers; // Push only, beware false-positives. Only for viewing.\\n  mapping(address => bool) public isRewardManager;\\n  mapping(address => uint256) public rewardManagerQueue; // Delays changes to mapping.\\n\\n  address public sOHM;\\n  uint256 public sOHMQueue; // Delays change to sOHM address\\n\\n  uint256 public totalReserves; // Risk-free value of all assets\\n  uint256 public totalDebt;\\n\\n  constructor(\\n    address _OHM,\\n    address _DAI,\\n    address _Frax,\\n    //address _OHMDAI,\\n    uint256 _blocksNeededForQueue\\n  ) {\\n    require(_OHM != address(0));\\n    OHM = _OHM;\\n\\n    isReserveToken[_DAI] = true;\\n    reserveTokens.push(_DAI);\\n\\n    isReserveToken[_Frax] = true;\\n    reserveTokens.push(_Frax);\\n\\n    // isLiquidityToken[ _OHMDAI ] = true;\\n    // liquidityTokens.push( _OHMDAI );\\n\\n    blocksNeededForQueue = _blocksNeededForQueue;\\n  }\\n\\n  /**\\n        @notice allow approved address to deposit an asset for OHM\\n        @param _amount uint\\n        @param _token address\\n        @param _profit uint\\n        @return send_ uint\\n     */\\n  function deposit(\\n    uint256 _amount,\\n    address _token,\\n    uint256 _profit\\n  ) external returns (uint256 send_) {\\n    require(isReserveToken[_token] || isLiquidityToken[_token], \\\"Not accepted\\\");\\n    IERC20(_token).safeTransferFrom(msg.sender, address(this), _amount);\\n\\n    if (isReserveToken[_token]) {\\n      require(isReserveDepositor[msg.sender], \\\"Not approved\\\");\\n    } else {\\n      require(isLiquidityDepositor[msg.sender], \\\"Not approved\\\");\\n    }\\n\\n    uint256 value = valueOfToken(_token, _amount);\\n    (_token, _amount);\\n    // mint OHM needed and store amount of rewards for distribution\\n    send_ = value.sub(_profit);\\n    IERC20Mintable(OHM).mint(msg.sender, send_);\\n\\n    totalReserves = totalReserves.add(value);\\n    emit ReservesUpdated(totalReserves);\\n\\n    emit Deposit(_token, _amount, value);\\n  }\\n\\n  /**\\n        @notice allow approved address to burn OHM for reserves\\n        @param _amount uint\\n        @param _token address\\n     */\\n  function withdraw(uint256 _amount, address _token) external {\\n    require(isReserveToken[_token], \\\"Not accepted\\\"); // Only reserves can be used for redemptions\\n    require(isReserveSpender[msg.sender] == true, \\\"Not approved\\\");\\n\\n    uint256 value = valueOfToken(_token, _amount);\\n    IOHMERC20(OHM).burnFrom(msg.sender, value);\\n\\n    totalReserves = totalReserves.sub(value);\\n    emit ReservesUpdated(totalReserves);\\n\\n    IERC20(_token).safeTransfer(msg.sender, _amount);\\n\\n    emit Withdrawal(_token, _amount, value);\\n  }\\n\\n  /**\\n        @notice allow approved address to borrow reserves\\n        @param _amount uint\\n        @param _token address\\n     */\\n  function incurDebt(uint256 _amount, address _token) external {\\n    require(isDebtor[msg.sender], \\\"Not approved\\\");\\n    require(isReserveToken[_token], \\\"Not accepted\\\");\\n\\n    uint256 value = valueOfToken(_token, _amount);\\n\\n    uint256 maximumDebt = IERC20(sOHM).balanceOf(msg.sender); // Can only borrow against sOHM held\\n    uint256 availableDebt = maximumDebt.sub(debtorBalance[msg.sender]);\\n    require(value <= availableDebt, \\\"Exceeds debt limit\\\");\\n\\n    debtorBalance[msg.sender] = debtorBalance[msg.sender].add(value);\\n    totalDebt = totalDebt.add(value);\\n\\n    totalReserves = totalReserves.sub(value);\\n    emit ReservesUpdated(totalReserves);\\n\\n    IERC20(_token).transfer(msg.sender, _amount);\\n\\n    emit CreateDebt(msg.sender, _token, _amount, value);\\n  }\\n\\n  /**\\n        @notice allow approved address to repay borrowed reserves with reserves\\n        @param _amount uint\\n        @param _token address\\n     */\\n  function repayDebtWithReserve(uint256 _amount, address _token) external {\\n    require(isDebtor[msg.sender], \\\"Not approved\\\");\\n    require(isReserveToken[_token], \\\"Not accepted\\\");\\n\\n    IERC20(_token).safeTransferFrom(msg.sender, address(this), _amount);\\n\\n    uint256 value = valueOfToken(_token, _amount);\\n    debtorBalance[msg.sender] = debtorBalance[msg.sender].sub(value);\\n    totalDebt = totalDebt.sub(value);\\n\\n    totalReserves = totalReserves.add(value);\\n    emit ReservesUpdated(totalReserves);\\n\\n    emit RepayDebt(msg.sender, _token, _amount, value);\\n  }\\n\\n  /**\\n        @notice allow approved address to repay borrowed reserves with OHM\\n        @param _amount uint\\n     */\\n  function repayDebtWithOHM(uint256 _amount) external {\\n    require(isDebtor[msg.sender], \\\"Not approved\\\");\\n\\n    IOHMERC20(OHM).burnFrom(msg.sender, _amount);\\n\\n    debtorBalance[msg.sender] = debtorBalance[msg.sender].sub(_amount);\\n    totalDebt = totalDebt.sub(_amount);\\n\\n    emit RepayDebt(msg.sender, OHM, _amount, _amount);\\n  }\\n\\n  /**\\n        @notice allow approved address to withdraw assets\\n        @param _token address\\n        @param _amount uint\\n     */\\n  function manage(address _token, uint256 _amount) external {\\n    if (isLiquidityToken[_token]) {\\n      require(isLiquidityManager[msg.sender], \\\"Not approved\\\");\\n    } else {\\n      require(isReserveManager[msg.sender], \\\"Not approved\\\");\\n    }\\n\\n    uint256 value = valueOfToken(_token, _amount);\\n    (_token, _amount);\\n    require(value <= excessReserves(), \\\"Insufficient reserves\\\");\\n\\n    totalReserves = totalReserves.sub(value);\\n    emit ReservesUpdated(totalReserves);\\n\\n    IERC20(_token).safeTransfer(msg.sender, _amount);\\n\\n    emit ReservesManaged(_token, _amount);\\n  }\\n\\n  /**\\n        @notice send epoch reward to staking contract\\n     */\\n  function mintRewards(address _recipient, uint256 _amount) external {\\n    require(isRewardManager[msg.sender], \\\"Not approved\\\");\\n    require(_amount <= excessReserves(), \\\"Insufficient reserves\\\");\\n\\n    IERC20Mintable(OHM).mint(_recipient, _amount);\\n\\n    emit RewardsMinted(msg.sender, _recipient, _amount);\\n  }\\n\\n  /**\\n        @notice returns excess reserves not backing tokens\\n        @return uint\\n     */\\n  function excessReserves() public view returns (uint256) {\\n    return totalReserves.sub(IERC20(OHM).totalSupply().sub(totalDebt));\\n  }\\n\\n  /**\\n        @notice takes inventory of all tracked assets\\n        @notice always consolidate to recognized reserves before audit\\n     */\\n  function auditReserves() external onlyManager {\\n    uint256 reserves;\\n    for (uint256 i = 0; i < reserveTokens.length; i++) {\\n      reserves = reserves.add(\\n        valueOfToken(\\n          reserveTokens[i],\\n          IERC20(reserveTokens[i]).balanceOf(address(this))\\n        )\\n      );\\n    }\\n    for (uint256 i = 0; i < liquidityTokens.length; i++) {\\n      reserves = reserves.add(\\n        valueOfToken(\\n          liquidityTokens[i],\\n          IERC20(liquidityTokens[i]).balanceOf(address(this))\\n        )\\n      );\\n    }\\n    totalReserves = reserves;\\n    emit ReservesUpdated(reserves);\\n    emit ReservesAudited(reserves);\\n  }\\n\\n  /**\\n        @notice returns OHM valuation of asset\\n        @param _token address\\n        @param _amount uint\\n        @return value_ uint\\n     */\\n  function valueOfToken(address _token, uint256 _amount)\\n    public\\n    view\\n    returns (uint256 value_)\\n  {\\n    if (isReserveToken[_token]) {\\n      // convert amount to match OHM decimals\\n      value_ = _amount.mul(10**IERC20(OHM).decimals()).div(\\n        10**IERC20(_token).decimals()\\n      );\\n    } else if (isLiquidityToken[_token]) {\\n      value_ = IBondCalculator(bondCalculator[_token]).valuation(\\n        _token,\\n        _amount\\n      );\\n    }\\n  }\\n\\n  /**\\n        @notice queue address to change boolean in mapping\\n        @param _managing MANAGING\\n        @param _address address\\n        @return bool\\n     */\\n  function queue(MANAGING _managing, address _address)\\n    external\\n    onlyManager\\n    returns (bool)\\n  {\\n    require(_address != address(0));\\n    if (_managing == MANAGING.RESERVEDEPOSITOR) {\\n      // 0\\n      reserveDepositorQueue[_address] = block.number.add(blocksNeededForQueue);\\n    } else if (_managing == MANAGING.RESERVESPENDER) {\\n      // 1\\n      reserveSpenderQueue[_address] = block.number.add(blocksNeededForQueue);\\n    } else if (_managing == MANAGING.RESERVETOKEN) {\\n      // 2\\n      reserveTokenQueue[_address] = block.number.add(blocksNeededForQueue);\\n    } else if (_managing == MANAGING.RESERVEMANAGER) {\\n      // 3\\n      ReserveManagerQueue[_address] = block.number.add(\\n        blocksNeededForQueue.mul(2)\\n      );\\n    } else if (_managing == MANAGING.LIQUIDITYDEPOSITOR) {\\n      // 4\\n      LiquidityDepositorQueue[_address] = block.number.add(\\n        blocksNeededForQueue\\n      );\\n    } else if (_managing == MANAGING.LIQUIDITYTOKEN) {\\n      // 5\\n      LiquidityTokenQueue[_address] = block.number.add(blocksNeededForQueue);\\n    } else if (_managing == MANAGING.LIQUIDITYMANAGER) {\\n      // 6\\n      LiquidityManagerQueue[_address] = block.number.add(\\n        blocksNeededForQueue.mul(2)\\n      );\\n    } else if (_managing == MANAGING.DEBTOR) {\\n      // 7\\n      debtorQueue[_address] = block.number.add(blocksNeededForQueue);\\n    } else if (_managing == MANAGING.REWARDMANAGER) {\\n      // 8\\n      rewardManagerQueue[_address] = block.number.add(blocksNeededForQueue);\\n    } else if (_managing == MANAGING.SOHM) {\\n      // 9\\n      sOHMQueue = block.number.add(blocksNeededForQueue);\\n    } else return false;\\n\\n    emit ChangeQueued(_managing, _address);\\n    return true;\\n  }\\n\\n  /**\\n        @notice verify queue then set boolean in mapping\\n        @param _managing MANAGING\\n        @param _address address\\n        @param _calculator address\\n        @return bool\\n     */\\n  function toggle(\\n    MANAGING _managing,\\n    address _address,\\n    address _calculator\\n  ) external onlyManager returns (bool) {\\n    require(_address != address(0));\\n    bool result;\\n    if (_managing == MANAGING.RESERVEDEPOSITOR) {\\n      // 0\\n      if (requirements(reserveDepositorQueue, isReserveDepositor, _address)) {\\n        reserveDepositorQueue[_address] = 0;\\n        if (!listContains(reserveDepositors, _address)) {\\n          reserveDepositors.push(_address);\\n        }\\n      }\\n      result = !isReserveDepositor[_address];\\n      isReserveDepositor[_address] = result;\\n    } else if (_managing == MANAGING.RESERVESPENDER) {\\n      // 1\\n      if (requirements(reserveSpenderQueue, isReserveSpender, _address)) {\\n        reserveSpenderQueue[_address] = 0;\\n        if (!listContains(reserveSpenders, _address)) {\\n          reserveSpenders.push(_address);\\n        }\\n      }\\n      result = !isReserveSpender[_address];\\n      isReserveSpender[_address] = result;\\n    } else if (_managing == MANAGING.RESERVETOKEN) {\\n      // 2\\n      if (requirements(reserveTokenQueue, isReserveToken, _address)) {\\n        reserveTokenQueue[_address] = 0;\\n        if (!listContains(reserveTokens, _address)) {\\n          reserveTokens.push(_address);\\n        }\\n      }\\n      result = !isReserveToken[_address];\\n      isReserveToken[_address] = result;\\n    } else if (_managing == MANAGING.RESERVEMANAGER) {\\n      // 3\\n      if (requirements(ReserveManagerQueue, isReserveManager, _address)) {\\n        reserveManagers.push(_address);\\n        ReserveManagerQueue[_address] = 0;\\n        if (!listContains(reserveManagers, _address)) {\\n          reserveManagers.push(_address);\\n        }\\n      }\\n      result = !isReserveManager[_address];\\n      isReserveManager[_address] = result;\\n    } else if (_managing == MANAGING.LIQUIDITYDEPOSITOR) {\\n      // 4\\n      if (\\n        requirements(LiquidityDepositorQueue, isLiquidityDepositor, _address)\\n      ) {\\n        liquidityDepositors.push(_address);\\n        LiquidityDepositorQueue[_address] = 0;\\n        if (!listContains(liquidityDepositors, _address)) {\\n          liquidityDepositors.push(_address);\\n        }\\n      }\\n      result = !isLiquidityDepositor[_address];\\n      isLiquidityDepositor[_address] = result;\\n    } else if (_managing == MANAGING.LIQUIDITYTOKEN) {\\n      // 5\\n      if (requirements(LiquidityTokenQueue, isLiquidityToken, _address)) {\\n        LiquidityTokenQueue[_address] = 0;\\n        if (!listContains(liquidityTokens, _address)) {\\n          liquidityTokens.push(_address);\\n        }\\n      }\\n      result = !isLiquidityToken[_address];\\n      isLiquidityToken[_address] = result;\\n      bondCalculator[_address] = _calculator;\\n    } else if (_managing == MANAGING.LIQUIDITYMANAGER) {\\n      // 6\\n      if (requirements(LiquidityManagerQueue, isLiquidityManager, _address)) {\\n        LiquidityManagerQueue[_address] = 0;\\n        if (!listContains(liquidityManagers, _address)) {\\n          liquidityManagers.push(_address);\\n        }\\n      }\\n      result = !isLiquidityManager[_address];\\n      isLiquidityManager[_address] = result;\\n    } else if (_managing == MANAGING.DEBTOR) {\\n      // 7\\n      if (requirements(debtorQueue, isDebtor, _address)) {\\n        debtorQueue[_address] = 0;\\n        if (!listContains(debtors, _address)) {\\n          debtors.push(_address);\\n        }\\n      }\\n      result = !isDebtor[_address];\\n      isDebtor[_address] = result;\\n    } else if (_managing == MANAGING.REWARDMANAGER) {\\n      // 8\\n      if (requirements(rewardManagerQueue, isRewardManager, _address)) {\\n        rewardManagerQueue[_address] = 0;\\n        if (!listContains(rewardManagers, _address)) {\\n          rewardManagers.push(_address);\\n        }\\n      }\\n      result = !isRewardManager[_address];\\n      isRewardManager[_address] = result;\\n    } else if (_managing == MANAGING.SOHM) {\\n      // 9\\n      sOHMQueue = 0;\\n      sOHM = _address;\\n      result = true;\\n    } else return false;\\n\\n    emit ChangeActivated(_managing, _address, result);\\n    return true;\\n  }\\n\\n  /**\\n        @notice checks requirements and returns altered structs\\n        @param queue_ mapping( address => uint )\\n        @param status_ mapping( address => bool )\\n        @param _address address\\n        @return bool \\n     */\\n  function requirements(\\n    mapping(address => uint256) storage queue_,\\n    mapping(address => bool) storage status_,\\n    address _address\\n  ) internal view returns (bool) {\\n    if (!status_[_address]) {\\n      require(queue_[_address] != 0, \\\"Must queue\\\");\\n      require(queue_[_address] <= block.number, \\\"Queue not expired\\\");\\n      return true;\\n    }\\n    return false;\\n  }\\n\\n  /**\\n        @notice checks array to ensure against duplicate\\n        @param _list address[]\\n        @param _token address\\n        @return bool\\n     */\\n  function listContains(address[] storage _list, address _token)\\n    internal\\n    view\\n    returns (bool)\\n  {\\n    for (uint256 i = 0; i < _list.length; i++) {\\n      if (_list[i] == _token) {\\n        return true;\\n      }\\n    }\\n    return false;\\n  }\\n}\\n\",\"keccak256\":\"0x02db9e69fb4f8c1d1c9dc5c99e26fadc4373cef48acd8949c016aae2a74e45fb\",\"license\":\"MIT\"}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          },
          "userdoc": {
            "kind": "user",
            "methods": {},
            "version": 1
          }
        },
        "IERC20Mintable": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account_",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "ammount_",
                  "type": "uint256"
                }
              ],
              "name": "mint",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amount_",
                  "type": "uint256"
                }
              ],
              "name": "mint",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "devdoc": {
            "kind": "dev",
            "methods": {},
            "version": 1
          },
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "gasEstimates": null,
            "methodIdentifiers": {
              "mint(address,uint256)": "40c10f19",
              "mint(uint256)": "a0712d68"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"ammount_\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount_\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/mocks/MockTreasury.sol\":\"IERC20Mintable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/mocks/MockTreasury.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.10;\\n\\nlibrary SafeMath {\\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n    uint256 c = a + b;\\n    require(c >= a, \\\"SafeMath: addition overflow\\\");\\n\\n    return c;\\n  }\\n\\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n    return sub(a, b, \\\"SafeMath: subtraction overflow\\\");\\n  }\\n\\n  function sub(\\n    uint256 a,\\n    uint256 b,\\n    string memory errorMessage\\n  ) internal pure returns (uint256) {\\n    require(b <= a, errorMessage);\\n    uint256 c = a - b;\\n\\n    return c;\\n  }\\n\\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n    if (a == 0) {\\n      return 0;\\n    }\\n\\n    uint256 c = a * b;\\n    require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\n\\n    return c;\\n  }\\n\\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n    return div(a, b, \\\"SafeMath: division by zero\\\");\\n  }\\n\\n  function div(\\n    uint256 a,\\n    uint256 b,\\n    string memory errorMessage\\n  ) internal pure returns (uint256) {\\n    require(b > 0, errorMessage);\\n    uint256 c = a / b;\\n    return c;\\n  }\\n}\\n\\nlibrary Address {\\n  function isContract(address account) internal view returns (bool) {\\n    // This method relies in extcodesize, which returns 0 for contracts in\\n    // construction, since the code is only stored at the end of the\\n    // constructor execution.\\n\\n    uint256 size;\\n    // solhint-disable-next-line no-inline-assembly\\n    assembly {\\n      size := extcodesize(account)\\n    }\\n    return size > 0;\\n  }\\n\\n  function functionCall(\\n    address target,\\n    bytes memory data,\\n    string memory errorMessage\\n  ) internal returns (bytes memory) {\\n    return _functionCallWithValue(target, data, 0, errorMessage);\\n  }\\n\\n  function _functionCallWithValue(\\n    address target,\\n    bytes memory data,\\n    uint256 weiValue,\\n    string memory errorMessage\\n  ) private returns (bytes memory) {\\n    require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n    // solhint-disable-next-line avoid-low-level-calls\\n    (bool success, bytes memory returndata) = target.call{value: weiValue}(\\n      data\\n    );\\n    if (success) {\\n      return returndata;\\n    } else {\\n      if (returndata.length > 0) {\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n          let returndata_size := mload(returndata)\\n          revert(add(32, returndata), returndata_size)\\n        }\\n      } else {\\n        revert(errorMessage);\\n      }\\n    }\\n  }\\n\\n  function _verifyCallResult(\\n    bool success,\\n    bytes memory returndata,\\n    string memory errorMessage\\n  ) private pure returns (bytes memory) {\\n    if (success) {\\n      return returndata;\\n    } else {\\n      if (returndata.length > 0) {\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n          let returndata_size := mload(returndata)\\n          revert(add(32, returndata), returndata_size)\\n        }\\n      } else {\\n        revert(errorMessage);\\n      }\\n    }\\n  }\\n}\\n\\ninterface IOwnable {\\n  function manager() external view returns (address);\\n\\n  function renounceManagement() external;\\n\\n  function pushManagement(address newOwner_) external;\\n\\n  function pullManagement() external;\\n}\\n\\ncontract Ownable is IOwnable {\\n  address internal _owner;\\n  address internal _newOwner;\\n\\n  event OwnershipPushed(\\n    address indexed previousOwner,\\n    address indexed newOwner\\n  );\\n  event OwnershipPulled(\\n    address indexed previousOwner,\\n    address indexed newOwner\\n  );\\n\\n  constructor() {\\n    _owner = msg.sender;\\n    emit OwnershipPushed(address(0), _owner);\\n  }\\n\\n  function manager() public view override returns (address) {\\n    return _owner;\\n  }\\n\\n  modifier onlyManager() {\\n    require(_owner == msg.sender, \\\"Ownable: caller is not the owner\\\");\\n    _;\\n  }\\n\\n  function renounceManagement() public virtual override onlyManager {\\n    emit OwnershipPushed(_owner, address(0));\\n    _owner = address(0);\\n  }\\n\\n  function pushManagement(address newOwner_)\\n    public\\n    virtual\\n    override\\n    onlyManager\\n  {\\n    require(newOwner_ != address(0), \\\"Ownable: new owner is the zero address\\\");\\n    emit OwnershipPushed(_owner, newOwner_);\\n    _newOwner = newOwner_;\\n  }\\n\\n  function pullManagement() public virtual override {\\n    require(msg.sender == _newOwner, \\\"Ownable: must be new owner to pull\\\");\\n    emit OwnershipPulled(_owner, _newOwner);\\n    _owner = _newOwner;\\n  }\\n}\\n\\ninterface IERC20 {\\n  function decimals() external view returns (uint8);\\n\\n  function balanceOf(address account) external view returns (uint256);\\n\\n  function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n  function approve(address spender, uint256 amount) external returns (bool);\\n\\n  function totalSupply() external view returns (uint256);\\n\\n  function transferFrom(\\n    address sender,\\n    address recipient,\\n    uint256 amount\\n  ) external returns (bool);\\n\\n  event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n  event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\\nlibrary SafeERC20 {\\n  using SafeMath for uint256;\\n  using Address for address;\\n\\n  function safeTransfer(\\n    IERC20 token,\\n    address to,\\n    uint256 value\\n  ) internal {\\n    _callOptionalReturn(\\n      token,\\n      abi.encodeWithSelector(token.transfer.selector, to, value)\\n    );\\n  }\\n\\n  function safeTransferFrom(\\n    IERC20 token,\\n    address from,\\n    address to,\\n    uint256 value\\n  ) internal {\\n    _callOptionalReturn(\\n      token,\\n      abi.encodeWithSelector(token.transferFrom.selector, from, to, value)\\n    );\\n  }\\n\\n  function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n    bytes memory returndata = address(token).functionCall(\\n      data,\\n      \\\"SafeERC20: low-level call failed\\\"\\n    );\\n    if (returndata.length > 0) {\\n      // Return data is optional\\n      // solhint-disable-next-line max-line-length\\n      require(\\n        abi.decode(returndata, (bool)),\\n        \\\"SafeERC20: ERC20 operation did not succeed\\\"\\n      );\\n    }\\n  }\\n}\\n\\ninterface IERC20Mintable {\\n  function mint(uint256 amount_) external;\\n\\n  function mint(address account_, uint256 ammount_) external;\\n}\\n\\ninterface IOHMERC20 {\\n  function burnFrom(address account_, uint256 amount_) external;\\n}\\n\\ninterface IBondCalculator {\\n  function valuation(address pair_, uint256 amount_)\\n    external\\n    view\\n    returns (uint256 _value);\\n}\\n\\ncontract MockOlympusTreasury is Ownable {\\n  using SafeMath for uint256;\\n  using SafeERC20 for IERC20;\\n\\n  event Deposit(address indexed token, uint256 amount, uint256 value);\\n  event Withdrawal(address indexed token, uint256 amount, uint256 value);\\n  event CreateDebt(\\n    address indexed debtor,\\n    address indexed token,\\n    uint256 amount,\\n    uint256 value\\n  );\\n  event RepayDebt(\\n    address indexed debtor,\\n    address indexed token,\\n    uint256 amount,\\n    uint256 value\\n  );\\n  event ReservesManaged(address indexed token, uint256 amount);\\n  event ReservesUpdated(uint256 indexed totalReserves);\\n  event ReservesAudited(uint256 indexed totalReserves);\\n  event RewardsMinted(\\n    address indexed caller,\\n    address indexed recipient,\\n    uint256 amount\\n  );\\n  event ChangeQueued(MANAGING indexed managing, address queued);\\n  event ChangeActivated(\\n    MANAGING indexed managing,\\n    address activated,\\n    bool result\\n  );\\n\\n  enum MANAGING {\\n    RESERVEDEPOSITOR,\\n    RESERVESPENDER,\\n    RESERVETOKEN,\\n    RESERVEMANAGER,\\n    LIQUIDITYDEPOSITOR,\\n    LIQUIDITYTOKEN,\\n    LIQUIDITYMANAGER,\\n    DEBTOR,\\n    REWARDMANAGER,\\n    SOHM\\n  }\\n\\n  address public immutable OHM;\\n  uint256 public immutable blocksNeededForQueue;\\n\\n  address[] public reserveTokens; // Push only, beware false-positives.\\n  mapping(address => bool) public isReserveToken;\\n  mapping(address => uint256) public reserveTokenQueue; // Delays changes to mapping.\\n\\n  address[] public reserveDepositors; // Push only, beware false-positives. Only for viewing.\\n  mapping(address => bool) public isReserveDepositor;\\n  mapping(address => uint256) public reserveDepositorQueue; // Delays changes to mapping.\\n\\n  address[] public reserveSpenders; // Push only, beware false-positives. Only for viewing.\\n  mapping(address => bool) public isReserveSpender;\\n  mapping(address => uint256) public reserveSpenderQueue; // Delays changes to mapping.\\n\\n  address[] public liquidityTokens; // Push only, beware false-positives.\\n  mapping(address => bool) public isLiquidityToken;\\n  mapping(address => uint256) public LiquidityTokenQueue; // Delays changes to mapping.\\n\\n  address[] public liquidityDepositors; // Push only, beware false-positives. Only for viewing.\\n  mapping(address => bool) public isLiquidityDepositor;\\n  mapping(address => uint256) public LiquidityDepositorQueue; // Delays changes to mapping.\\n\\n  mapping(address => address) public bondCalculator; // bond calculator for liquidity token\\n\\n  address[] public reserveManagers; // Push only, beware false-positives. Only for viewing.\\n  mapping(address => bool) public isReserveManager;\\n  mapping(address => uint256) public ReserveManagerQueue; // Delays changes to mapping.\\n\\n  address[] public liquidityManagers; // Push only, beware false-positives. Only for viewing.\\n  mapping(address => bool) public isLiquidityManager;\\n  mapping(address => uint256) public LiquidityManagerQueue; // Delays changes to mapping.\\n\\n  address[] public debtors; // Push only, beware false-positives. Only for viewing.\\n  mapping(address => bool) public isDebtor;\\n  mapping(address => uint256) public debtorQueue; // Delays changes to mapping.\\n  mapping(address => uint256) public debtorBalance;\\n\\n  address[] public rewardManagers; // Push only, beware false-positives. Only for viewing.\\n  mapping(address => bool) public isRewardManager;\\n  mapping(address => uint256) public rewardManagerQueue; // Delays changes to mapping.\\n\\n  address public sOHM;\\n  uint256 public sOHMQueue; // Delays change to sOHM address\\n\\n  uint256 public totalReserves; // Risk-free value of all assets\\n  uint256 public totalDebt;\\n\\n  constructor(\\n    address _OHM,\\n    address _DAI,\\n    address _Frax,\\n    //address _OHMDAI,\\n    uint256 _blocksNeededForQueue\\n  ) {\\n    require(_OHM != address(0));\\n    OHM = _OHM;\\n\\n    isReserveToken[_DAI] = true;\\n    reserveTokens.push(_DAI);\\n\\n    isReserveToken[_Frax] = true;\\n    reserveTokens.push(_Frax);\\n\\n    // isLiquidityToken[ _OHMDAI ] = true;\\n    // liquidityTokens.push( _OHMDAI );\\n\\n    blocksNeededForQueue = _blocksNeededForQueue;\\n  }\\n\\n  /**\\n        @notice allow approved address to deposit an asset for OHM\\n        @param _amount uint\\n        @param _token address\\n        @param _profit uint\\n        @return send_ uint\\n     */\\n  function deposit(\\n    uint256 _amount,\\n    address _token,\\n    uint256 _profit\\n  ) external returns (uint256 send_) {\\n    require(isReserveToken[_token] || isLiquidityToken[_token], \\\"Not accepted\\\");\\n    IERC20(_token).safeTransferFrom(msg.sender, address(this), _amount);\\n\\n    if (isReserveToken[_token]) {\\n      require(isReserveDepositor[msg.sender], \\\"Not approved\\\");\\n    } else {\\n      require(isLiquidityDepositor[msg.sender], \\\"Not approved\\\");\\n    }\\n\\n    uint256 value = valueOfToken(_token, _amount);\\n    (_token, _amount);\\n    // mint OHM needed and store amount of rewards for distribution\\n    send_ = value.sub(_profit);\\n    IERC20Mintable(OHM).mint(msg.sender, send_);\\n\\n    totalReserves = totalReserves.add(value);\\n    emit ReservesUpdated(totalReserves);\\n\\n    emit Deposit(_token, _amount, value);\\n  }\\n\\n  /**\\n        @notice allow approved address to burn OHM for reserves\\n        @param _amount uint\\n        @param _token address\\n     */\\n  function withdraw(uint256 _amount, address _token) external {\\n    require(isReserveToken[_token], \\\"Not accepted\\\"); // Only reserves can be used for redemptions\\n    require(isReserveSpender[msg.sender] == true, \\\"Not approved\\\");\\n\\n    uint256 value = valueOfToken(_token, _amount);\\n    IOHMERC20(OHM).burnFrom(msg.sender, value);\\n\\n    totalReserves = totalReserves.sub(value);\\n    emit ReservesUpdated(totalReserves);\\n\\n    IERC20(_token).safeTransfer(msg.sender, _amount);\\n\\n    emit Withdrawal(_token, _amount, value);\\n  }\\n\\n  /**\\n        @notice allow approved address to borrow reserves\\n        @param _amount uint\\n        @param _token address\\n     */\\n  function incurDebt(uint256 _amount, address _token) external {\\n    require(isDebtor[msg.sender], \\\"Not approved\\\");\\n    require(isReserveToken[_token], \\\"Not accepted\\\");\\n\\n    uint256 value = valueOfToken(_token, _amount);\\n\\n    uint256 maximumDebt = IERC20(sOHM).balanceOf(msg.sender); // Can only borrow against sOHM held\\n    uint256 availableDebt = maximumDebt.sub(debtorBalance[msg.sender]);\\n    require(value <= availableDebt, \\\"Exceeds debt limit\\\");\\n\\n    debtorBalance[msg.sender] = debtorBalance[msg.sender].add(value);\\n    totalDebt = totalDebt.add(value);\\n\\n    totalReserves = totalReserves.sub(value);\\n    emit ReservesUpdated(totalReserves);\\n\\n    IERC20(_token).transfer(msg.sender, _amount);\\n\\n    emit CreateDebt(msg.sender, _token, _amount, value);\\n  }\\n\\n  /**\\n        @notice allow approved address to repay borrowed reserves with reserves\\n        @param _amount uint\\n        @param _token address\\n     */\\n  function repayDebtWithReserve(uint256 _amount, address _token) external {\\n    require(isDebtor[msg.sender], \\\"Not approved\\\");\\n    require(isReserveToken[_token], \\\"Not accepted\\\");\\n\\n    IERC20(_token).safeTransferFrom(msg.sender, address(this), _amount);\\n\\n    uint256 value = valueOfToken(_token, _amount);\\n    debtorBalance[msg.sender] = debtorBalance[msg.sender].sub(value);\\n    totalDebt = totalDebt.sub(value);\\n\\n    totalReserves = totalReserves.add(value);\\n    emit ReservesUpdated(totalReserves);\\n\\n    emit RepayDebt(msg.sender, _token, _amount, value);\\n  }\\n\\n  /**\\n        @notice allow approved address to repay borrowed reserves with OHM\\n        @param _amount uint\\n     */\\n  function repayDebtWithOHM(uint256 _amount) external {\\n    require(isDebtor[msg.sender], \\\"Not approved\\\");\\n\\n    IOHMERC20(OHM).burnFrom(msg.sender, _amount);\\n\\n    debtorBalance[msg.sender] = debtorBalance[msg.sender].sub(_amount);\\n    totalDebt = totalDebt.sub(_amount);\\n\\n    emit RepayDebt(msg.sender, OHM, _amount, _amount);\\n  }\\n\\n  /**\\n        @notice allow approved address to withdraw assets\\n        @param _token address\\n        @param _amount uint\\n     */\\n  function manage(address _token, uint256 _amount) external {\\n    if (isLiquidityToken[_token]) {\\n      require(isLiquidityManager[msg.sender], \\\"Not approved\\\");\\n    } else {\\n      require(isReserveManager[msg.sender], \\\"Not approved\\\");\\n    }\\n\\n    uint256 value = valueOfToken(_token, _amount);\\n    (_token, _amount);\\n    require(value <= excessReserves(), \\\"Insufficient reserves\\\");\\n\\n    totalReserves = totalReserves.sub(value);\\n    emit ReservesUpdated(totalReserves);\\n\\n    IERC20(_token).safeTransfer(msg.sender, _amount);\\n\\n    emit ReservesManaged(_token, _amount);\\n  }\\n\\n  /**\\n        @notice send epoch reward to staking contract\\n     */\\n  function mintRewards(address _recipient, uint256 _amount) external {\\n    require(isRewardManager[msg.sender], \\\"Not approved\\\");\\n    require(_amount <= excessReserves(), \\\"Insufficient reserves\\\");\\n\\n    IERC20Mintable(OHM).mint(_recipient, _amount);\\n\\n    emit RewardsMinted(msg.sender, _recipient, _amount);\\n  }\\n\\n  /**\\n        @notice returns excess reserves not backing tokens\\n        @return uint\\n     */\\n  function excessReserves() public view returns (uint256) {\\n    return totalReserves.sub(IERC20(OHM).totalSupply().sub(totalDebt));\\n  }\\n\\n  /**\\n        @notice takes inventory of all tracked assets\\n        @notice always consolidate to recognized reserves before audit\\n     */\\n  function auditReserves() external onlyManager {\\n    uint256 reserves;\\n    for (uint256 i = 0; i < reserveTokens.length; i++) {\\n      reserves = reserves.add(\\n        valueOfToken(\\n          reserveTokens[i],\\n          IERC20(reserveTokens[i]).balanceOf(address(this))\\n        )\\n      );\\n    }\\n    for (uint256 i = 0; i < liquidityTokens.length; i++) {\\n      reserves = reserves.add(\\n        valueOfToken(\\n          liquidityTokens[i],\\n          IERC20(liquidityTokens[i]).balanceOf(address(this))\\n        )\\n      );\\n    }\\n    totalReserves = reserves;\\n    emit ReservesUpdated(reserves);\\n    emit ReservesAudited(reserves);\\n  }\\n\\n  /**\\n        @notice returns OHM valuation of asset\\n        @param _token address\\n        @param _amount uint\\n        @return value_ uint\\n     */\\n  function valueOfToken(address _token, uint256 _amount)\\n    public\\n    view\\n    returns (uint256 value_)\\n  {\\n    if (isReserveToken[_token]) {\\n      // convert amount to match OHM decimals\\n      value_ = _amount.mul(10**IERC20(OHM).decimals()).div(\\n        10**IERC20(_token).decimals()\\n      );\\n    } else if (isLiquidityToken[_token]) {\\n      value_ = IBondCalculator(bondCalculator[_token]).valuation(\\n        _token,\\n        _amount\\n      );\\n    }\\n  }\\n\\n  /**\\n        @notice queue address to change boolean in mapping\\n        @param _managing MANAGING\\n        @param _address address\\n        @return bool\\n     */\\n  function queue(MANAGING _managing, address _address)\\n    external\\n    onlyManager\\n    returns (bool)\\n  {\\n    require(_address != address(0));\\n    if (_managing == MANAGING.RESERVEDEPOSITOR) {\\n      // 0\\n      reserveDepositorQueue[_address] = block.number.add(blocksNeededForQueue);\\n    } else if (_managing == MANAGING.RESERVESPENDER) {\\n      // 1\\n      reserveSpenderQueue[_address] = block.number.add(blocksNeededForQueue);\\n    } else if (_managing == MANAGING.RESERVETOKEN) {\\n      // 2\\n      reserveTokenQueue[_address] = block.number.add(blocksNeededForQueue);\\n    } else if (_managing == MANAGING.RESERVEMANAGER) {\\n      // 3\\n      ReserveManagerQueue[_address] = block.number.add(\\n        blocksNeededForQueue.mul(2)\\n      );\\n    } else if (_managing == MANAGING.LIQUIDITYDEPOSITOR) {\\n      // 4\\n      LiquidityDepositorQueue[_address] = block.number.add(\\n        blocksNeededForQueue\\n      );\\n    } else if (_managing == MANAGING.LIQUIDITYTOKEN) {\\n      // 5\\n      LiquidityTokenQueue[_address] = block.number.add(blocksNeededForQueue);\\n    } else if (_managing == MANAGING.LIQUIDITYMANAGER) {\\n      // 6\\n      LiquidityManagerQueue[_address] = block.number.add(\\n        blocksNeededForQueue.mul(2)\\n      );\\n    } else if (_managing == MANAGING.DEBTOR) {\\n      // 7\\n      debtorQueue[_address] = block.number.add(blocksNeededForQueue);\\n    } else if (_managing == MANAGING.REWARDMANAGER) {\\n      // 8\\n      rewardManagerQueue[_address] = block.number.add(blocksNeededForQueue);\\n    } else if (_managing == MANAGING.SOHM) {\\n      // 9\\n      sOHMQueue = block.number.add(blocksNeededForQueue);\\n    } else return false;\\n\\n    emit ChangeQueued(_managing, _address);\\n    return true;\\n  }\\n\\n  /**\\n        @notice verify queue then set boolean in mapping\\n        @param _managing MANAGING\\n        @param _address address\\n        @param _calculator address\\n        @return bool\\n     */\\n  function toggle(\\n    MANAGING _managing,\\n    address _address,\\n    address _calculator\\n  ) external onlyManager returns (bool) {\\n    require(_address != address(0));\\n    bool result;\\n    if (_managing == MANAGING.RESERVEDEPOSITOR) {\\n      // 0\\n      if (requirements(reserveDepositorQueue, isReserveDepositor, _address)) {\\n        reserveDepositorQueue[_address] = 0;\\n        if (!listContains(reserveDepositors, _address)) {\\n          reserveDepositors.push(_address);\\n        }\\n      }\\n      result = !isReserveDepositor[_address];\\n      isReserveDepositor[_address] = result;\\n    } else if (_managing == MANAGING.RESERVESPENDER) {\\n      // 1\\n      if (requirements(reserveSpenderQueue, isReserveSpender, _address)) {\\n        reserveSpenderQueue[_address] = 0;\\n        if (!listContains(reserveSpenders, _address)) {\\n          reserveSpenders.push(_address);\\n        }\\n      }\\n      result = !isReserveSpender[_address];\\n      isReserveSpender[_address] = result;\\n    } else if (_managing == MANAGING.RESERVETOKEN) {\\n      // 2\\n      if (requirements(reserveTokenQueue, isReserveToken, _address)) {\\n        reserveTokenQueue[_address] = 0;\\n        if (!listContains(reserveTokens, _address)) {\\n          reserveTokens.push(_address);\\n        }\\n      }\\n      result = !isReserveToken[_address];\\n      isReserveToken[_address] = result;\\n    } else if (_managing == MANAGING.RESERVEMANAGER) {\\n      // 3\\n      if (requirements(ReserveManagerQueue, isReserveManager, _address)) {\\n        reserveManagers.push(_address);\\n        ReserveManagerQueue[_address] = 0;\\n        if (!listContains(reserveManagers, _address)) {\\n          reserveManagers.push(_address);\\n        }\\n      }\\n      result = !isReserveManager[_address];\\n      isReserveManager[_address] = result;\\n    } else if (_managing == MANAGING.LIQUIDITYDEPOSITOR) {\\n      // 4\\n      if (\\n        requirements(LiquidityDepositorQueue, isLiquidityDepositor, _address)\\n      ) {\\n        liquidityDepositors.push(_address);\\n        LiquidityDepositorQueue[_address] = 0;\\n        if (!listContains(liquidityDepositors, _address)) {\\n          liquidityDepositors.push(_address);\\n        }\\n      }\\n      result = !isLiquidityDepositor[_address];\\n      isLiquidityDepositor[_address] = result;\\n    } else if (_managing == MANAGING.LIQUIDITYTOKEN) {\\n      // 5\\n      if (requirements(LiquidityTokenQueue, isLiquidityToken, _address)) {\\n        LiquidityTokenQueue[_address] = 0;\\n        if (!listContains(liquidityTokens, _address)) {\\n          liquidityTokens.push(_address);\\n        }\\n      }\\n      result = !isLiquidityToken[_address];\\n      isLiquidityToken[_address] = result;\\n      bondCalculator[_address] = _calculator;\\n    } else if (_managing == MANAGING.LIQUIDITYMANAGER) {\\n      // 6\\n      if (requirements(LiquidityManagerQueue, isLiquidityManager, _address)) {\\n        LiquidityManagerQueue[_address] = 0;\\n        if (!listContains(liquidityManagers, _address)) {\\n          liquidityManagers.push(_address);\\n        }\\n      }\\n      result = !isLiquidityManager[_address];\\n      isLiquidityManager[_address] = result;\\n    } else if (_managing == MANAGING.DEBTOR) {\\n      // 7\\n      if (requirements(debtorQueue, isDebtor, _address)) {\\n        debtorQueue[_address] = 0;\\n        if (!listContains(debtors, _address)) {\\n          debtors.push(_address);\\n        }\\n      }\\n      result = !isDebtor[_address];\\n      isDebtor[_address] = result;\\n    } else if (_managing == MANAGING.REWARDMANAGER) {\\n      // 8\\n      if (requirements(rewardManagerQueue, isRewardManager, _address)) {\\n        rewardManagerQueue[_address] = 0;\\n        if (!listContains(rewardManagers, _address)) {\\n          rewardManagers.push(_address);\\n        }\\n      }\\n      result = !isRewardManager[_address];\\n      isRewardManager[_address] = result;\\n    } else if (_managing == MANAGING.SOHM) {\\n      // 9\\n      sOHMQueue = 0;\\n      sOHM = _address;\\n      result = true;\\n    } else return false;\\n\\n    emit ChangeActivated(_managing, _address, result);\\n    return true;\\n  }\\n\\n  /**\\n        @notice checks requirements and returns altered structs\\n        @param queue_ mapping( address => uint )\\n        @param status_ mapping( address => bool )\\n        @param _address address\\n        @return bool \\n     */\\n  function requirements(\\n    mapping(address => uint256) storage queue_,\\n    mapping(address => bool) storage status_,\\n    address _address\\n  ) internal view returns (bool) {\\n    if (!status_[_address]) {\\n      require(queue_[_address] != 0, \\\"Must queue\\\");\\n      require(queue_[_address] <= block.number, \\\"Queue not expired\\\");\\n      return true;\\n    }\\n    return false;\\n  }\\n\\n  /**\\n        @notice checks array to ensure against duplicate\\n        @param _list address[]\\n        @param _token address\\n        @return bool\\n     */\\n  function listContains(address[] storage _list, address _token)\\n    internal\\n    view\\n    returns (bool)\\n  {\\n    for (uint256 i = 0; i < _list.length; i++) {\\n      if (_list[i] == _token) {\\n        return true;\\n      }\\n    }\\n    return false;\\n  }\\n}\\n\",\"keccak256\":\"0x02db9e69fb4f8c1d1c9dc5c99e26fadc4373cef48acd8949c016aae2a74e45fb\",\"license\":\"MIT\"}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          },
          "userdoc": {
            "kind": "user",
            "methods": {},
            "version": 1
          }
        },
        "IOHMERC20": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account_",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount_",
                  "type": "uint256"
                }
              ],
              "name": "burnFrom",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "devdoc": {
            "kind": "dev",
            "methods": {},
            "version": 1
          },
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "gasEstimates": null,
            "methodIdentifiers": {
              "burnFrom(address,uint256)": "79cc6790"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount_\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/mocks/MockTreasury.sol\":\"IOHMERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/mocks/MockTreasury.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.10;\\n\\nlibrary SafeMath {\\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n    uint256 c = a + b;\\n    require(c >= a, \\\"SafeMath: addition overflow\\\");\\n\\n    return c;\\n  }\\n\\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n    return sub(a, b, \\\"SafeMath: subtraction overflow\\\");\\n  }\\n\\n  function sub(\\n    uint256 a,\\n    uint256 b,\\n    string memory errorMessage\\n  ) internal pure returns (uint256) {\\n    require(b <= a, errorMessage);\\n    uint256 c = a - b;\\n\\n    return c;\\n  }\\n\\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n    if (a == 0) {\\n      return 0;\\n    }\\n\\n    uint256 c = a * b;\\n    require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\n\\n    return c;\\n  }\\n\\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n    return div(a, b, \\\"SafeMath: division by zero\\\");\\n  }\\n\\n  function div(\\n    uint256 a,\\n    uint256 b,\\n    string memory errorMessage\\n  ) internal pure returns (uint256) {\\n    require(b > 0, errorMessage);\\n    uint256 c = a / b;\\n    return c;\\n  }\\n}\\n\\nlibrary Address {\\n  function isContract(address account) internal view returns (bool) {\\n    // This method relies in extcodesize, which returns 0 for contracts in\\n    // construction, since the code is only stored at the end of the\\n    // constructor execution.\\n\\n    uint256 size;\\n    // solhint-disable-next-line no-inline-assembly\\n    assembly {\\n      size := extcodesize(account)\\n    }\\n    return size > 0;\\n  }\\n\\n  function functionCall(\\n    address target,\\n    bytes memory data,\\n    string memory errorMessage\\n  ) internal returns (bytes memory) {\\n    return _functionCallWithValue(target, data, 0, errorMessage);\\n  }\\n\\n  function _functionCallWithValue(\\n    address target,\\n    bytes memory data,\\n    uint256 weiValue,\\n    string memory errorMessage\\n  ) private returns (bytes memory) {\\n    require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n    // solhint-disable-next-line avoid-low-level-calls\\n    (bool success, bytes memory returndata) = target.call{value: weiValue}(\\n      data\\n    );\\n    if (success) {\\n      return returndata;\\n    } else {\\n      if (returndata.length > 0) {\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n          let returndata_size := mload(returndata)\\n          revert(add(32, returndata), returndata_size)\\n        }\\n      } else {\\n        revert(errorMessage);\\n      }\\n    }\\n  }\\n\\n  function _verifyCallResult(\\n    bool success,\\n    bytes memory returndata,\\n    string memory errorMessage\\n  ) private pure returns (bytes memory) {\\n    if (success) {\\n      return returndata;\\n    } else {\\n      if (returndata.length > 0) {\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n          let returndata_size := mload(returndata)\\n          revert(add(32, returndata), returndata_size)\\n        }\\n      } else {\\n        revert(errorMessage);\\n      }\\n    }\\n  }\\n}\\n\\ninterface IOwnable {\\n  function manager() external view returns (address);\\n\\n  function renounceManagement() external;\\n\\n  function pushManagement(address newOwner_) external;\\n\\n  function pullManagement() external;\\n}\\n\\ncontract Ownable is IOwnable {\\n  address internal _owner;\\n  address internal _newOwner;\\n\\n  event OwnershipPushed(\\n    address indexed previousOwner,\\n    address indexed newOwner\\n  );\\n  event OwnershipPulled(\\n    address indexed previousOwner,\\n    address indexed newOwner\\n  );\\n\\n  constructor() {\\n    _owner = msg.sender;\\n    emit OwnershipPushed(address(0), _owner);\\n  }\\n\\n  function manager() public view override returns (address) {\\n    return _owner;\\n  }\\n\\n  modifier onlyManager() {\\n    require(_owner == msg.sender, \\\"Ownable: caller is not the owner\\\");\\n    _;\\n  }\\n\\n  function renounceManagement() public virtual override onlyManager {\\n    emit OwnershipPushed(_owner, address(0));\\n    _owner = address(0);\\n  }\\n\\n  function pushManagement(address newOwner_)\\n    public\\n    virtual\\n    override\\n    onlyManager\\n  {\\n    require(newOwner_ != address(0), \\\"Ownable: new owner is the zero address\\\");\\n    emit OwnershipPushed(_owner, newOwner_);\\n    _newOwner = newOwner_;\\n  }\\n\\n  function pullManagement() public virtual override {\\n    require(msg.sender == _newOwner, \\\"Ownable: must be new owner to pull\\\");\\n    emit OwnershipPulled(_owner, _newOwner);\\n    _owner = _newOwner;\\n  }\\n}\\n\\ninterface IERC20 {\\n  function decimals() external view returns (uint8);\\n\\n  function balanceOf(address account) external view returns (uint256);\\n\\n  function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n  function approve(address spender, uint256 amount) external returns (bool);\\n\\n  function totalSupply() external view returns (uint256);\\n\\n  function transferFrom(\\n    address sender,\\n    address recipient,\\n    uint256 amount\\n  ) external returns (bool);\\n\\n  event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n  event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\\nlibrary SafeERC20 {\\n  using SafeMath for uint256;\\n  using Address for address;\\n\\n  function safeTransfer(\\n    IERC20 token,\\n    address to,\\n    uint256 value\\n  ) internal {\\n    _callOptionalReturn(\\n      token,\\n      abi.encodeWithSelector(token.transfer.selector, to, value)\\n    );\\n  }\\n\\n  function safeTransferFrom(\\n    IERC20 token,\\n    address from,\\n    address to,\\n    uint256 value\\n  ) internal {\\n    _callOptionalReturn(\\n      token,\\n      abi.encodeWithSelector(token.transferFrom.selector, from, to, value)\\n    );\\n  }\\n\\n  function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n    bytes memory returndata = address(token).functionCall(\\n      data,\\n      \\\"SafeERC20: low-level call failed\\\"\\n    );\\n    if (returndata.length > 0) {\\n      // Return data is optional\\n      // solhint-disable-next-line max-line-length\\n      require(\\n        abi.decode(returndata, (bool)),\\n        \\\"SafeERC20: ERC20 operation did not succeed\\\"\\n      );\\n    }\\n  }\\n}\\n\\ninterface IERC20Mintable {\\n  function mint(uint256 amount_) external;\\n\\n  function mint(address account_, uint256 ammount_) external;\\n}\\n\\ninterface IOHMERC20 {\\n  function burnFrom(address account_, uint256 amount_) external;\\n}\\n\\ninterface IBondCalculator {\\n  function valuation(address pair_, uint256 amount_)\\n    external\\n    view\\n    returns (uint256 _value);\\n}\\n\\ncontract MockOlympusTreasury is Ownable {\\n  using SafeMath for uint256;\\n  using SafeERC20 for IERC20;\\n\\n  event Deposit(address indexed token, uint256 amount, uint256 value);\\n  event Withdrawal(address indexed token, uint256 amount, uint256 value);\\n  event CreateDebt(\\n    address indexed debtor,\\n    address indexed token,\\n    uint256 amount,\\n    uint256 value\\n  );\\n  event RepayDebt(\\n    address indexed debtor,\\n    address indexed token,\\n    uint256 amount,\\n    uint256 value\\n  );\\n  event ReservesManaged(address indexed token, uint256 amount);\\n  event ReservesUpdated(uint256 indexed totalReserves);\\n  event ReservesAudited(uint256 indexed totalReserves);\\n  event RewardsMinted(\\n    address indexed caller,\\n    address indexed recipient,\\n    uint256 amount\\n  );\\n  event ChangeQueued(MANAGING indexed managing, address queued);\\n  event ChangeActivated(\\n    MANAGING indexed managing,\\n    address activated,\\n    bool result\\n  );\\n\\n  enum MANAGING {\\n    RESERVEDEPOSITOR,\\n    RESERVESPENDER,\\n    RESERVETOKEN,\\n    RESERVEMANAGER,\\n    LIQUIDITYDEPOSITOR,\\n    LIQUIDITYTOKEN,\\n    LIQUIDITYMANAGER,\\n    DEBTOR,\\n    REWARDMANAGER,\\n    SOHM\\n  }\\n\\n  address public immutable OHM;\\n  uint256 public immutable blocksNeededForQueue;\\n\\n  address[] public reserveTokens; // Push only, beware false-positives.\\n  mapping(address => bool) public isReserveToken;\\n  mapping(address => uint256) public reserveTokenQueue; // Delays changes to mapping.\\n\\n  address[] public reserveDepositors; // Push only, beware false-positives. Only for viewing.\\n  mapping(address => bool) public isReserveDepositor;\\n  mapping(address => uint256) public reserveDepositorQueue; // Delays changes to mapping.\\n\\n  address[] public reserveSpenders; // Push only, beware false-positives. Only for viewing.\\n  mapping(address => bool) public isReserveSpender;\\n  mapping(address => uint256) public reserveSpenderQueue; // Delays changes to mapping.\\n\\n  address[] public liquidityTokens; // Push only, beware false-positives.\\n  mapping(address => bool) public isLiquidityToken;\\n  mapping(address => uint256) public LiquidityTokenQueue; // Delays changes to mapping.\\n\\n  address[] public liquidityDepositors; // Push only, beware false-positives. Only for viewing.\\n  mapping(address => bool) public isLiquidityDepositor;\\n  mapping(address => uint256) public LiquidityDepositorQueue; // Delays changes to mapping.\\n\\n  mapping(address => address) public bondCalculator; // bond calculator for liquidity token\\n\\n  address[] public reserveManagers; // Push only, beware false-positives. Only for viewing.\\n  mapping(address => bool) public isReserveManager;\\n  mapping(address => uint256) public ReserveManagerQueue; // Delays changes to mapping.\\n\\n  address[] public liquidityManagers; // Push only, beware false-positives. Only for viewing.\\n  mapping(address => bool) public isLiquidityManager;\\n  mapping(address => uint256) public LiquidityManagerQueue; // Delays changes to mapping.\\n\\n  address[] public debtors; // Push only, beware false-positives. Only for viewing.\\n  mapping(address => bool) public isDebtor;\\n  mapping(address => uint256) public debtorQueue; // Delays changes to mapping.\\n  mapping(address => uint256) public debtorBalance;\\n\\n  address[] public rewardManagers; // Push only, beware false-positives. Only for viewing.\\n  mapping(address => bool) public isRewardManager;\\n  mapping(address => uint256) public rewardManagerQueue; // Delays changes to mapping.\\n\\n  address public sOHM;\\n  uint256 public sOHMQueue; // Delays change to sOHM address\\n\\n  uint256 public totalReserves; // Risk-free value of all assets\\n  uint256 public totalDebt;\\n\\n  constructor(\\n    address _OHM,\\n    address _DAI,\\n    address _Frax,\\n    //address _OHMDAI,\\n    uint256 _blocksNeededForQueue\\n  ) {\\n    require(_OHM != address(0));\\n    OHM = _OHM;\\n\\n    isReserveToken[_DAI] = true;\\n    reserveTokens.push(_DAI);\\n\\n    isReserveToken[_Frax] = true;\\n    reserveTokens.push(_Frax);\\n\\n    // isLiquidityToken[ _OHMDAI ] = true;\\n    // liquidityTokens.push( _OHMDAI );\\n\\n    blocksNeededForQueue = _blocksNeededForQueue;\\n  }\\n\\n  /**\\n        @notice allow approved address to deposit an asset for OHM\\n        @param _amount uint\\n        @param _token address\\n        @param _profit uint\\n        @return send_ uint\\n     */\\n  function deposit(\\n    uint256 _amount,\\n    address _token,\\n    uint256 _profit\\n  ) external returns (uint256 send_) {\\n    require(isReserveToken[_token] || isLiquidityToken[_token], \\\"Not accepted\\\");\\n    IERC20(_token).safeTransferFrom(msg.sender, address(this), _amount);\\n\\n    if (isReserveToken[_token]) {\\n      require(isReserveDepositor[msg.sender], \\\"Not approved\\\");\\n    } else {\\n      require(isLiquidityDepositor[msg.sender], \\\"Not approved\\\");\\n    }\\n\\n    uint256 value = valueOfToken(_token, _amount);\\n    (_token, _amount);\\n    // mint OHM needed and store amount of rewards for distribution\\n    send_ = value.sub(_profit);\\n    IERC20Mintable(OHM).mint(msg.sender, send_);\\n\\n    totalReserves = totalReserves.add(value);\\n    emit ReservesUpdated(totalReserves);\\n\\n    emit Deposit(_token, _amount, value);\\n  }\\n\\n  /**\\n        @notice allow approved address to burn OHM for reserves\\n        @param _amount uint\\n        @param _token address\\n     */\\n  function withdraw(uint256 _amount, address _token) external {\\n    require(isReserveToken[_token], \\\"Not accepted\\\"); // Only reserves can be used for redemptions\\n    require(isReserveSpender[msg.sender] == true, \\\"Not approved\\\");\\n\\n    uint256 value = valueOfToken(_token, _amount);\\n    IOHMERC20(OHM).burnFrom(msg.sender, value);\\n\\n    totalReserves = totalReserves.sub(value);\\n    emit ReservesUpdated(totalReserves);\\n\\n    IERC20(_token).safeTransfer(msg.sender, _amount);\\n\\n    emit Withdrawal(_token, _amount, value);\\n  }\\n\\n  /**\\n        @notice allow approved address to borrow reserves\\n        @param _amount uint\\n        @param _token address\\n     */\\n  function incurDebt(uint256 _amount, address _token) external {\\n    require(isDebtor[msg.sender], \\\"Not approved\\\");\\n    require(isReserveToken[_token], \\\"Not accepted\\\");\\n\\n    uint256 value = valueOfToken(_token, _amount);\\n\\n    uint256 maximumDebt = IERC20(sOHM).balanceOf(msg.sender); // Can only borrow against sOHM held\\n    uint256 availableDebt = maximumDebt.sub(debtorBalance[msg.sender]);\\n    require(value <= availableDebt, \\\"Exceeds debt limit\\\");\\n\\n    debtorBalance[msg.sender] = debtorBalance[msg.sender].add(value);\\n    totalDebt = totalDebt.add(value);\\n\\n    totalReserves = totalReserves.sub(value);\\n    emit ReservesUpdated(totalReserves);\\n\\n    IERC20(_token).transfer(msg.sender, _amount);\\n\\n    emit CreateDebt(msg.sender, _token, _amount, value);\\n  }\\n\\n  /**\\n        @notice allow approved address to repay borrowed reserves with reserves\\n        @param _amount uint\\n        @param _token address\\n     */\\n  function repayDebtWithReserve(uint256 _amount, address _token) external {\\n    require(isDebtor[msg.sender], \\\"Not approved\\\");\\n    require(isReserveToken[_token], \\\"Not accepted\\\");\\n\\n    IERC20(_token).safeTransferFrom(msg.sender, address(this), _amount);\\n\\n    uint256 value = valueOfToken(_token, _amount);\\n    debtorBalance[msg.sender] = debtorBalance[msg.sender].sub(value);\\n    totalDebt = totalDebt.sub(value);\\n\\n    totalReserves = totalReserves.add(value);\\n    emit ReservesUpdated(totalReserves);\\n\\n    emit RepayDebt(msg.sender, _token, _amount, value);\\n  }\\n\\n  /**\\n        @notice allow approved address to repay borrowed reserves with OHM\\n        @param _amount uint\\n     */\\n  function repayDebtWithOHM(uint256 _amount) external {\\n    require(isDebtor[msg.sender], \\\"Not approved\\\");\\n\\n    IOHMERC20(OHM).burnFrom(msg.sender, _amount);\\n\\n    debtorBalance[msg.sender] = debtorBalance[msg.sender].sub(_amount);\\n    totalDebt = totalDebt.sub(_amount);\\n\\n    emit RepayDebt(msg.sender, OHM, _amount, _amount);\\n  }\\n\\n  /**\\n        @notice allow approved address to withdraw assets\\n        @param _token address\\n        @param _amount uint\\n     */\\n  function manage(address _token, uint256 _amount) external {\\n    if (isLiquidityToken[_token]) {\\n      require(isLiquidityManager[msg.sender], \\\"Not approved\\\");\\n    } else {\\n      require(isReserveManager[msg.sender], \\\"Not approved\\\");\\n    }\\n\\n    uint256 value = valueOfToken(_token, _amount);\\n    (_token, _amount);\\n    require(value <= excessReserves(), \\\"Insufficient reserves\\\");\\n\\n    totalReserves = totalReserves.sub(value);\\n    emit ReservesUpdated(totalReserves);\\n\\n    IERC20(_token).safeTransfer(msg.sender, _amount);\\n\\n    emit ReservesManaged(_token, _amount);\\n  }\\n\\n  /**\\n        @notice send epoch reward to staking contract\\n     */\\n  function mintRewards(address _recipient, uint256 _amount) external {\\n    require(isRewardManager[msg.sender], \\\"Not approved\\\");\\n    require(_amount <= excessReserves(), \\\"Insufficient reserves\\\");\\n\\n    IERC20Mintable(OHM).mint(_recipient, _amount);\\n\\n    emit RewardsMinted(msg.sender, _recipient, _amount);\\n  }\\n\\n  /**\\n        @notice returns excess reserves not backing tokens\\n        @return uint\\n     */\\n  function excessReserves() public view returns (uint256) {\\n    return totalReserves.sub(IERC20(OHM).totalSupply().sub(totalDebt));\\n  }\\n\\n  /**\\n        @notice takes inventory of all tracked assets\\n        @notice always consolidate to recognized reserves before audit\\n     */\\n  function auditReserves() external onlyManager {\\n    uint256 reserves;\\n    for (uint256 i = 0; i < reserveTokens.length; i++) {\\n      reserves = reserves.add(\\n        valueOfToken(\\n          reserveTokens[i],\\n          IERC20(reserveTokens[i]).balanceOf(address(this))\\n        )\\n      );\\n    }\\n    for (uint256 i = 0; i < liquidityTokens.length; i++) {\\n      reserves = reserves.add(\\n        valueOfToken(\\n          liquidityTokens[i],\\n          IERC20(liquidityTokens[i]).balanceOf(address(this))\\n        )\\n      );\\n    }\\n    totalReserves = reserves;\\n    emit ReservesUpdated(reserves);\\n    emit ReservesAudited(reserves);\\n  }\\n\\n  /**\\n        @notice returns OHM valuation of asset\\n        @param _token address\\n        @param _amount uint\\n        @return value_ uint\\n     */\\n  function valueOfToken(address _token, uint256 _amount)\\n    public\\n    view\\n    returns (uint256 value_)\\n  {\\n    if (isReserveToken[_token]) {\\n      // convert amount to match OHM decimals\\n      value_ = _amount.mul(10**IERC20(OHM).decimals()).div(\\n        10**IERC20(_token).decimals()\\n      );\\n    } else if (isLiquidityToken[_token]) {\\n      value_ = IBondCalculator(bondCalculator[_token]).valuation(\\n        _token,\\n        _amount\\n      );\\n    }\\n  }\\n\\n  /**\\n        @notice queue address to change boolean in mapping\\n        @param _managing MANAGING\\n        @param _address address\\n        @return bool\\n     */\\n  function queue(MANAGING _managing, address _address)\\n    external\\n    onlyManager\\n    returns (bool)\\n  {\\n    require(_address != address(0));\\n    if (_managing == MANAGING.RESERVEDEPOSITOR) {\\n      // 0\\n      reserveDepositorQueue[_address] = block.number.add(blocksNeededForQueue);\\n    } else if (_managing == MANAGING.RESERVESPENDER) {\\n      // 1\\n      reserveSpenderQueue[_address] = block.number.add(blocksNeededForQueue);\\n    } else if (_managing == MANAGING.RESERVETOKEN) {\\n      // 2\\n      reserveTokenQueue[_address] = block.number.add(blocksNeededForQueue);\\n    } else if (_managing == MANAGING.RESERVEMANAGER) {\\n      // 3\\n      ReserveManagerQueue[_address] = block.number.add(\\n        blocksNeededForQueue.mul(2)\\n      );\\n    } else if (_managing == MANAGING.LIQUIDITYDEPOSITOR) {\\n      // 4\\n      LiquidityDepositorQueue[_address] = block.number.add(\\n        blocksNeededForQueue\\n      );\\n    } else if (_managing == MANAGING.LIQUIDITYTOKEN) {\\n      // 5\\n      LiquidityTokenQueue[_address] = block.number.add(blocksNeededForQueue);\\n    } else if (_managing == MANAGING.LIQUIDITYMANAGER) {\\n      // 6\\n      LiquidityManagerQueue[_address] = block.number.add(\\n        blocksNeededForQueue.mul(2)\\n      );\\n    } else if (_managing == MANAGING.DEBTOR) {\\n      // 7\\n      debtorQueue[_address] = block.number.add(blocksNeededForQueue);\\n    } else if (_managing == MANAGING.REWARDMANAGER) {\\n      // 8\\n      rewardManagerQueue[_address] = block.number.add(blocksNeededForQueue);\\n    } else if (_managing == MANAGING.SOHM) {\\n      // 9\\n      sOHMQueue = block.number.add(blocksNeededForQueue);\\n    } else return false;\\n\\n    emit ChangeQueued(_managing, _address);\\n    return true;\\n  }\\n\\n  /**\\n        @notice verify queue then set boolean in mapping\\n        @param _managing MANAGING\\n        @param _address address\\n        @param _calculator address\\n        @return bool\\n     */\\n  function toggle(\\n    MANAGING _managing,\\n    address _address,\\n    address _calculator\\n  ) external onlyManager returns (bool) {\\n    require(_address != address(0));\\n    bool result;\\n    if (_managing == MANAGING.RESERVEDEPOSITOR) {\\n      // 0\\n      if (requirements(reserveDepositorQueue, isReserveDepositor, _address)) {\\n        reserveDepositorQueue[_address] = 0;\\n        if (!listContains(reserveDepositors, _address)) {\\n          reserveDepositors.push(_address);\\n        }\\n      }\\n      result = !isReserveDepositor[_address];\\n      isReserveDepositor[_address] = result;\\n    } else if (_managing == MANAGING.RESERVESPENDER) {\\n      // 1\\n      if (requirements(reserveSpenderQueue, isReserveSpender, _address)) {\\n        reserveSpenderQueue[_address] = 0;\\n        if (!listContains(reserveSpenders, _address)) {\\n          reserveSpenders.push(_address);\\n        }\\n      }\\n      result = !isReserveSpender[_address];\\n      isReserveSpender[_address] = result;\\n    } else if (_managing == MANAGING.RESERVETOKEN) {\\n      // 2\\n      if (requirements(reserveTokenQueue, isReserveToken, _address)) {\\n        reserveTokenQueue[_address] = 0;\\n        if (!listContains(reserveTokens, _address)) {\\n          reserveTokens.push(_address);\\n        }\\n      }\\n      result = !isReserveToken[_address];\\n      isReserveToken[_address] = result;\\n    } else if (_managing == MANAGING.RESERVEMANAGER) {\\n      // 3\\n      if (requirements(ReserveManagerQueue, isReserveManager, _address)) {\\n        reserveManagers.push(_address);\\n        ReserveManagerQueue[_address] = 0;\\n        if (!listContains(reserveManagers, _address)) {\\n          reserveManagers.push(_address);\\n        }\\n      }\\n      result = !isReserveManager[_address];\\n      isReserveManager[_address] = result;\\n    } else if (_managing == MANAGING.LIQUIDITYDEPOSITOR) {\\n      // 4\\n      if (\\n        requirements(LiquidityDepositorQueue, isLiquidityDepositor, _address)\\n      ) {\\n        liquidityDepositors.push(_address);\\n        LiquidityDepositorQueue[_address] = 0;\\n        if (!listContains(liquidityDepositors, _address)) {\\n          liquidityDepositors.push(_address);\\n        }\\n      }\\n      result = !isLiquidityDepositor[_address];\\n      isLiquidityDepositor[_address] = result;\\n    } else if (_managing == MANAGING.LIQUIDITYTOKEN) {\\n      // 5\\n      if (requirements(LiquidityTokenQueue, isLiquidityToken, _address)) {\\n        LiquidityTokenQueue[_address] = 0;\\n        if (!listContains(liquidityTokens, _address)) {\\n          liquidityTokens.push(_address);\\n        }\\n      }\\n      result = !isLiquidityToken[_address];\\n      isLiquidityToken[_address] = result;\\n      bondCalculator[_address] = _calculator;\\n    } else if (_managing == MANAGING.LIQUIDITYMANAGER) {\\n      // 6\\n      if (requirements(LiquidityManagerQueue, isLiquidityManager, _address)) {\\n        LiquidityManagerQueue[_address] = 0;\\n        if (!listContains(liquidityManagers, _address)) {\\n          liquidityManagers.push(_address);\\n        }\\n      }\\n      result = !isLiquidityManager[_address];\\n      isLiquidityManager[_address] = result;\\n    } else if (_managing == MANAGING.DEBTOR) {\\n      // 7\\n      if (requirements(debtorQueue, isDebtor, _address)) {\\n        debtorQueue[_address] = 0;\\n        if (!listContains(debtors, _address)) {\\n          debtors.push(_address);\\n        }\\n      }\\n      result = !isDebtor[_address];\\n      isDebtor[_address] = result;\\n    } else if (_managing == MANAGING.REWARDMANAGER) {\\n      // 8\\n      if (requirements(rewardManagerQueue, isRewardManager, _address)) {\\n        rewardManagerQueue[_address] = 0;\\n        if (!listContains(rewardManagers, _address)) {\\n          rewardManagers.push(_address);\\n        }\\n      }\\n      result = !isRewardManager[_address];\\n      isRewardManager[_address] = result;\\n    } else if (_managing == MANAGING.SOHM) {\\n      // 9\\n      sOHMQueue = 0;\\n      sOHM = _address;\\n      result = true;\\n    } else return false;\\n\\n    emit ChangeActivated(_managing, _address, result);\\n    return true;\\n  }\\n\\n  /**\\n        @notice checks requirements and returns altered structs\\n        @param queue_ mapping( address => uint )\\n        @param status_ mapping( address => bool )\\n        @param _address address\\n        @return bool \\n     */\\n  function requirements(\\n    mapping(address => uint256) storage queue_,\\n    mapping(address => bool) storage status_,\\n    address _address\\n  ) internal view returns (bool) {\\n    if (!status_[_address]) {\\n      require(queue_[_address] != 0, \\\"Must queue\\\");\\n      require(queue_[_address] <= block.number, \\\"Queue not expired\\\");\\n      return true;\\n    }\\n    return false;\\n  }\\n\\n  /**\\n        @notice checks array to ensure against duplicate\\n        @param _list address[]\\n        @param _token address\\n        @return bool\\n     */\\n  function listContains(address[] storage _list, address _token)\\n    internal\\n    view\\n    returns (bool)\\n  {\\n    for (uint256 i = 0; i < _list.length; i++) {\\n      if (_list[i] == _token) {\\n        return true;\\n      }\\n    }\\n    return false;\\n  }\\n}\\n\",\"keccak256\":\"0x02db9e69fb4f8c1d1c9dc5c99e26fadc4373cef48acd8949c016aae2a74e45fb\",\"license\":\"MIT\"}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          },
          "userdoc": {
            "kind": "user",
            "methods": {},
            "version": 1
          }
        },
        "IOwnable": {
          "abi": [
            {
              "inputs": [],
              "name": "manager",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "pullManagement",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner_",
                  "type": "address"
                }
              ],
              "name": "pushManagement",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceManagement",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "devdoc": {
            "kind": "dev",
            "methods": {},
            "version": 1
          },
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "gasEstimates": null,
            "methodIdentifiers": {
              "manager()": "481c6a75",
              "pullManagement()": "5a96ac0a",
              "pushManagement(address)": "46f68ee9",
              "renounceManagement()": "089208d8"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"manager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pullManagement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner_\",\"type\":\"address\"}],\"name\":\"pushManagement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceManagement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/mocks/MockTreasury.sol\":\"IOwnable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/mocks/MockTreasury.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.10;\\n\\nlibrary SafeMath {\\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n    uint256 c = a + b;\\n    require(c >= a, \\\"SafeMath: addition overflow\\\");\\n\\n    return c;\\n  }\\n\\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n    return sub(a, b, \\\"SafeMath: subtraction overflow\\\");\\n  }\\n\\n  function sub(\\n    uint256 a,\\n    uint256 b,\\n    string memory errorMessage\\n  ) internal pure returns (uint256) {\\n    require(b <= a, errorMessage);\\n    uint256 c = a - b;\\n\\n    return c;\\n  }\\n\\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n    if (a == 0) {\\n      return 0;\\n    }\\n\\n    uint256 c = a * b;\\n    require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\n\\n    return c;\\n  }\\n\\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n    return div(a, b, \\\"SafeMath: division by zero\\\");\\n  }\\n\\n  function div(\\n    uint256 a,\\n    uint256 b,\\n    string memory errorMessage\\n  ) internal pure returns (uint256) {\\n    require(b > 0, errorMessage);\\n    uint256 c = a / b;\\n    return c;\\n  }\\n}\\n\\nlibrary Address {\\n  function isContract(address account) internal view returns (bool) {\\n    // This method relies in extcodesize, which returns 0 for contracts in\\n    // construction, since the code is only stored at the end of the\\n    // constructor execution.\\n\\n    uint256 size;\\n    // solhint-disable-next-line no-inline-assembly\\n    assembly {\\n      size := extcodesize(account)\\n    }\\n    return size > 0;\\n  }\\n\\n  function functionCall(\\n    address target,\\n    bytes memory data,\\n    string memory errorMessage\\n  ) internal returns (bytes memory) {\\n    return _functionCallWithValue(target, data, 0, errorMessage);\\n  }\\n\\n  function _functionCallWithValue(\\n    address target,\\n    bytes memory data,\\n    uint256 weiValue,\\n    string memory errorMessage\\n  ) private returns (bytes memory) {\\n    require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n    // solhint-disable-next-line avoid-low-level-calls\\n    (bool success, bytes memory returndata) = target.call{value: weiValue}(\\n      data\\n    );\\n    if (success) {\\n      return returndata;\\n    } else {\\n      if (returndata.length > 0) {\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n          let returndata_size := mload(returndata)\\n          revert(add(32, returndata), returndata_size)\\n        }\\n      } else {\\n        revert(errorMessage);\\n      }\\n    }\\n  }\\n\\n  function _verifyCallResult(\\n    bool success,\\n    bytes memory returndata,\\n    string memory errorMessage\\n  ) private pure returns (bytes memory) {\\n    if (success) {\\n      return returndata;\\n    } else {\\n      if (returndata.length > 0) {\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n          let returndata_size := mload(returndata)\\n          revert(add(32, returndata), returndata_size)\\n        }\\n      } else {\\n        revert(errorMessage);\\n      }\\n    }\\n  }\\n}\\n\\ninterface IOwnable {\\n  function manager() external view returns (address);\\n\\n  function renounceManagement() external;\\n\\n  function pushManagement(address newOwner_) external;\\n\\n  function pullManagement() external;\\n}\\n\\ncontract Ownable is IOwnable {\\n  address internal _owner;\\n  address internal _newOwner;\\n\\n  event OwnershipPushed(\\n    address indexed previousOwner,\\n    address indexed newOwner\\n  );\\n  event OwnershipPulled(\\n    address indexed previousOwner,\\n    address indexed newOwner\\n  );\\n\\n  constructor() {\\n    _owner = msg.sender;\\n    emit OwnershipPushed(address(0), _owner);\\n  }\\n\\n  function manager() public view override returns (address) {\\n    return _owner;\\n  }\\n\\n  modifier onlyManager() {\\n    require(_owner == msg.sender, \\\"Ownable: caller is not the owner\\\");\\n    _;\\n  }\\n\\n  function renounceManagement() public virtual override onlyManager {\\n    emit OwnershipPushed(_owner, address(0));\\n    _owner = address(0);\\n  }\\n\\n  function pushManagement(address newOwner_)\\n    public\\n    virtual\\n    override\\n    onlyManager\\n  {\\n    require(newOwner_ != address(0), \\\"Ownable: new owner is the zero address\\\");\\n    emit OwnershipPushed(_owner, newOwner_);\\n    _newOwner = newOwner_;\\n  }\\n\\n  function pullManagement() public virtual override {\\n    require(msg.sender == _newOwner, \\\"Ownable: must be new owner to pull\\\");\\n    emit OwnershipPulled(_owner, _newOwner);\\n    _owner = _newOwner;\\n  }\\n}\\n\\ninterface IERC20 {\\n  function decimals() external view returns (uint8);\\n\\n  function balanceOf(address account) external view returns (uint256);\\n\\n  function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n  function approve(address spender, uint256 amount) external returns (bool);\\n\\n  function totalSupply() external view returns (uint256);\\n\\n  function transferFrom(\\n    address sender,\\n    address recipient,\\n    uint256 amount\\n  ) external returns (bool);\\n\\n  event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n  event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\\nlibrary SafeERC20 {\\n  using SafeMath for uint256;\\n  using Address for address;\\n\\n  function safeTransfer(\\n    IERC20 token,\\n    address to,\\n    uint256 value\\n  ) internal {\\n    _callOptionalReturn(\\n      token,\\n      abi.encodeWithSelector(token.transfer.selector, to, value)\\n    );\\n  }\\n\\n  function safeTransferFrom(\\n    IERC20 token,\\n    address from,\\n    address to,\\n    uint256 value\\n  ) internal {\\n    _callOptionalReturn(\\n      token,\\n      abi.encodeWithSelector(token.transferFrom.selector, from, to, value)\\n    );\\n  }\\n\\n  function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n    bytes memory returndata = address(token).functionCall(\\n      data,\\n      \\\"SafeERC20: low-level call failed\\\"\\n    );\\n    if (returndata.length > 0) {\\n      // Return data is optional\\n      // solhint-disable-next-line max-line-length\\n      require(\\n        abi.decode(returndata, (bool)),\\n        \\\"SafeERC20: ERC20 operation did not succeed\\\"\\n      );\\n    }\\n  }\\n}\\n\\ninterface IERC20Mintable {\\n  function mint(uint256 amount_) external;\\n\\n  function mint(address account_, uint256 ammount_) external;\\n}\\n\\ninterface IOHMERC20 {\\n  function burnFrom(address account_, uint256 amount_) external;\\n}\\n\\ninterface IBondCalculator {\\n  function valuation(address pair_, uint256 amount_)\\n    external\\n    view\\n    returns (uint256 _value);\\n}\\n\\ncontract MockOlympusTreasury is Ownable {\\n  using SafeMath for uint256;\\n  using SafeERC20 for IERC20;\\n\\n  event Deposit(address indexed token, uint256 amount, uint256 value);\\n  event Withdrawal(address indexed token, uint256 amount, uint256 value);\\n  event CreateDebt(\\n    address indexed debtor,\\n    address indexed token,\\n    uint256 amount,\\n    uint256 value\\n  );\\n  event RepayDebt(\\n    address indexed debtor,\\n    address indexed token,\\n    uint256 amount,\\n    uint256 value\\n  );\\n  event ReservesManaged(address indexed token, uint256 amount);\\n  event ReservesUpdated(uint256 indexed totalReserves);\\n  event ReservesAudited(uint256 indexed totalReserves);\\n  event RewardsMinted(\\n    address indexed caller,\\n    address indexed recipient,\\n    uint256 amount\\n  );\\n  event ChangeQueued(MANAGING indexed managing, address queued);\\n  event ChangeActivated(\\n    MANAGING indexed managing,\\n    address activated,\\n    bool result\\n  );\\n\\n  enum MANAGING {\\n    RESERVEDEPOSITOR,\\n    RESERVESPENDER,\\n    RESERVETOKEN,\\n    RESERVEMANAGER,\\n    LIQUIDITYDEPOSITOR,\\n    LIQUIDITYTOKEN,\\n    LIQUIDITYMANAGER,\\n    DEBTOR,\\n    REWARDMANAGER,\\n    SOHM\\n  }\\n\\n  address public immutable OHM;\\n  uint256 public immutable blocksNeededForQueue;\\n\\n  address[] public reserveTokens; // Push only, beware false-positives.\\n  mapping(address => bool) public isReserveToken;\\n  mapping(address => uint256) public reserveTokenQueue; // Delays changes to mapping.\\n\\n  address[] public reserveDepositors; // Push only, beware false-positives. Only for viewing.\\n  mapping(address => bool) public isReserveDepositor;\\n  mapping(address => uint256) public reserveDepositorQueue; // Delays changes to mapping.\\n\\n  address[] public reserveSpenders; // Push only, beware false-positives. Only for viewing.\\n  mapping(address => bool) public isReserveSpender;\\n  mapping(address => uint256) public reserveSpenderQueue; // Delays changes to mapping.\\n\\n  address[] public liquidityTokens; // Push only, beware false-positives.\\n  mapping(address => bool) public isLiquidityToken;\\n  mapping(address => uint256) public LiquidityTokenQueue; // Delays changes to mapping.\\n\\n  address[] public liquidityDepositors; // Push only, beware false-positives. Only for viewing.\\n  mapping(address => bool) public isLiquidityDepositor;\\n  mapping(address => uint256) public LiquidityDepositorQueue; // Delays changes to mapping.\\n\\n  mapping(address => address) public bondCalculator; // bond calculator for liquidity token\\n\\n  address[] public reserveManagers; // Push only, beware false-positives. Only for viewing.\\n  mapping(address => bool) public isReserveManager;\\n  mapping(address => uint256) public ReserveManagerQueue; // Delays changes to mapping.\\n\\n  address[] public liquidityManagers; // Push only, beware false-positives. Only for viewing.\\n  mapping(address => bool) public isLiquidityManager;\\n  mapping(address => uint256) public LiquidityManagerQueue; // Delays changes to mapping.\\n\\n  address[] public debtors; // Push only, beware false-positives. Only for viewing.\\n  mapping(address => bool) public isDebtor;\\n  mapping(address => uint256) public debtorQueue; // Delays changes to mapping.\\n  mapping(address => uint256) public debtorBalance;\\n\\n  address[] public rewardManagers; // Push only, beware false-positives. Only for viewing.\\n  mapping(address => bool) public isRewardManager;\\n  mapping(address => uint256) public rewardManagerQueue; // Delays changes to mapping.\\n\\n  address public sOHM;\\n  uint256 public sOHMQueue; // Delays change to sOHM address\\n\\n  uint256 public totalReserves; // Risk-free value of all assets\\n  uint256 public totalDebt;\\n\\n  constructor(\\n    address _OHM,\\n    address _DAI,\\n    address _Frax,\\n    //address _OHMDAI,\\n    uint256 _blocksNeededForQueue\\n  ) {\\n    require(_OHM != address(0));\\n    OHM = _OHM;\\n\\n    isReserveToken[_DAI] = true;\\n    reserveTokens.push(_DAI);\\n\\n    isReserveToken[_Frax] = true;\\n    reserveTokens.push(_Frax);\\n\\n    // isLiquidityToken[ _OHMDAI ] = true;\\n    // liquidityTokens.push( _OHMDAI );\\n\\n    blocksNeededForQueue = _blocksNeededForQueue;\\n  }\\n\\n  /**\\n        @notice allow approved address to deposit an asset for OHM\\n        @param _amount uint\\n        @param _token address\\n        @param _profit uint\\n        @return send_ uint\\n     */\\n  function deposit(\\n    uint256 _amount,\\n    address _token,\\n    uint256 _profit\\n  ) external returns (uint256 send_) {\\n    require(isReserveToken[_token] || isLiquidityToken[_token], \\\"Not accepted\\\");\\n    IERC20(_token).safeTransferFrom(msg.sender, address(this), _amount);\\n\\n    if (isReserveToken[_token]) {\\n      require(isReserveDepositor[msg.sender], \\\"Not approved\\\");\\n    } else {\\n      require(isLiquidityDepositor[msg.sender], \\\"Not approved\\\");\\n    }\\n\\n    uint256 value = valueOfToken(_token, _amount);\\n    (_token, _amount);\\n    // mint OHM needed and store amount of rewards for distribution\\n    send_ = value.sub(_profit);\\n    IERC20Mintable(OHM).mint(msg.sender, send_);\\n\\n    totalReserves = totalReserves.add(value);\\n    emit ReservesUpdated(totalReserves);\\n\\n    emit Deposit(_token, _amount, value);\\n  }\\n\\n  /**\\n        @notice allow approved address to burn OHM for reserves\\n        @param _amount uint\\n        @param _token address\\n     */\\n  function withdraw(uint256 _amount, address _token) external {\\n    require(isReserveToken[_token], \\\"Not accepted\\\"); // Only reserves can be used for redemptions\\n    require(isReserveSpender[msg.sender] == true, \\\"Not approved\\\");\\n\\n    uint256 value = valueOfToken(_token, _amount);\\n    IOHMERC20(OHM).burnFrom(msg.sender, value);\\n\\n    totalReserves = totalReserves.sub(value);\\n    emit ReservesUpdated(totalReserves);\\n\\n    IERC20(_token).safeTransfer(msg.sender, _amount);\\n\\n    emit Withdrawal(_token, _amount, value);\\n  }\\n\\n  /**\\n        @notice allow approved address to borrow reserves\\n        @param _amount uint\\n        @param _token address\\n     */\\n  function incurDebt(uint256 _amount, address _token) external {\\n    require(isDebtor[msg.sender], \\\"Not approved\\\");\\n    require(isReserveToken[_token], \\\"Not accepted\\\");\\n\\n    uint256 value = valueOfToken(_token, _amount);\\n\\n    uint256 maximumDebt = IERC20(sOHM).balanceOf(msg.sender); // Can only borrow against sOHM held\\n    uint256 availableDebt = maximumDebt.sub(debtorBalance[msg.sender]);\\n    require(value <= availableDebt, \\\"Exceeds debt limit\\\");\\n\\n    debtorBalance[msg.sender] = debtorBalance[msg.sender].add(value);\\n    totalDebt = totalDebt.add(value);\\n\\n    totalReserves = totalReserves.sub(value);\\n    emit ReservesUpdated(totalReserves);\\n\\n    IERC20(_token).transfer(msg.sender, _amount);\\n\\n    emit CreateDebt(msg.sender, _token, _amount, value);\\n  }\\n\\n  /**\\n        @notice allow approved address to repay borrowed reserves with reserves\\n        @param _amount uint\\n        @param _token address\\n     */\\n  function repayDebtWithReserve(uint256 _amount, address _token) external {\\n    require(isDebtor[msg.sender], \\\"Not approved\\\");\\n    require(isReserveToken[_token], \\\"Not accepted\\\");\\n\\n    IERC20(_token).safeTransferFrom(msg.sender, address(this), _amount);\\n\\n    uint256 value = valueOfToken(_token, _amount);\\n    debtorBalance[msg.sender] = debtorBalance[msg.sender].sub(value);\\n    totalDebt = totalDebt.sub(value);\\n\\n    totalReserves = totalReserves.add(value);\\n    emit ReservesUpdated(totalReserves);\\n\\n    emit RepayDebt(msg.sender, _token, _amount, value);\\n  }\\n\\n  /**\\n        @notice allow approved address to repay borrowed reserves with OHM\\n        @param _amount uint\\n     */\\n  function repayDebtWithOHM(uint256 _amount) external {\\n    require(isDebtor[msg.sender], \\\"Not approved\\\");\\n\\n    IOHMERC20(OHM).burnFrom(msg.sender, _amount);\\n\\n    debtorBalance[msg.sender] = debtorBalance[msg.sender].sub(_amount);\\n    totalDebt = totalDebt.sub(_amount);\\n\\n    emit RepayDebt(msg.sender, OHM, _amount, _amount);\\n  }\\n\\n  /**\\n        @notice allow approved address to withdraw assets\\n        @param _token address\\n        @param _amount uint\\n     */\\n  function manage(address _token, uint256 _amount) external {\\n    if (isLiquidityToken[_token]) {\\n      require(isLiquidityManager[msg.sender], \\\"Not approved\\\");\\n    } else {\\n      require(isReserveManager[msg.sender], \\\"Not approved\\\");\\n    }\\n\\n    uint256 value = valueOfToken(_token, _amount);\\n    (_token, _amount);\\n    require(value <= excessReserves(), \\\"Insufficient reserves\\\");\\n\\n    totalReserves = totalReserves.sub(value);\\n    emit ReservesUpdated(totalReserves);\\n\\n    IERC20(_token).safeTransfer(msg.sender, _amount);\\n\\n    emit ReservesManaged(_token, _amount);\\n  }\\n\\n  /**\\n        @notice send epoch reward to staking contract\\n     */\\n  function mintRewards(address _recipient, uint256 _amount) external {\\n    require(isRewardManager[msg.sender], \\\"Not approved\\\");\\n    require(_amount <= excessReserves(), \\\"Insufficient reserves\\\");\\n\\n    IERC20Mintable(OHM).mint(_recipient, _amount);\\n\\n    emit RewardsMinted(msg.sender, _recipient, _amount);\\n  }\\n\\n  /**\\n        @notice returns excess reserves not backing tokens\\n        @return uint\\n     */\\n  function excessReserves() public view returns (uint256) {\\n    return totalReserves.sub(IERC20(OHM).totalSupply().sub(totalDebt));\\n  }\\n\\n  /**\\n        @notice takes inventory of all tracked assets\\n        @notice always consolidate to recognized reserves before audit\\n     */\\n  function auditReserves() external onlyManager {\\n    uint256 reserves;\\n    for (uint256 i = 0; i < reserveTokens.length; i++) {\\n      reserves = reserves.add(\\n        valueOfToken(\\n          reserveTokens[i],\\n          IERC20(reserveTokens[i]).balanceOf(address(this))\\n        )\\n      );\\n    }\\n    for (uint256 i = 0; i < liquidityTokens.length; i++) {\\n      reserves = reserves.add(\\n        valueOfToken(\\n          liquidityTokens[i],\\n          IERC20(liquidityTokens[i]).balanceOf(address(this))\\n        )\\n      );\\n    }\\n    totalReserves = reserves;\\n    emit ReservesUpdated(reserves);\\n    emit ReservesAudited(reserves);\\n  }\\n\\n  /**\\n        @notice returns OHM valuation of asset\\n        @param _token address\\n        @param _amount uint\\n        @return value_ uint\\n     */\\n  function valueOfToken(address _token, uint256 _amount)\\n    public\\n    view\\n    returns (uint256 value_)\\n  {\\n    if (isReserveToken[_token]) {\\n      // convert amount to match OHM decimals\\n      value_ = _amount.mul(10**IERC20(OHM).decimals()).div(\\n        10**IERC20(_token).decimals()\\n      );\\n    } else if (isLiquidityToken[_token]) {\\n      value_ = IBondCalculator(bondCalculator[_token]).valuation(\\n        _token,\\n        _amount\\n      );\\n    }\\n  }\\n\\n  /**\\n        @notice queue address to change boolean in mapping\\n        @param _managing MANAGING\\n        @param _address address\\n        @return bool\\n     */\\n  function queue(MANAGING _managing, address _address)\\n    external\\n    onlyManager\\n    returns (bool)\\n  {\\n    require(_address != address(0));\\n    if (_managing == MANAGING.RESERVEDEPOSITOR) {\\n      // 0\\n      reserveDepositorQueue[_address] = block.number.add(blocksNeededForQueue);\\n    } else if (_managing == MANAGING.RESERVESPENDER) {\\n      // 1\\n      reserveSpenderQueue[_address] = block.number.add(blocksNeededForQueue);\\n    } else if (_managing == MANAGING.RESERVETOKEN) {\\n      // 2\\n      reserveTokenQueue[_address] = block.number.add(blocksNeededForQueue);\\n    } else if (_managing == MANAGING.RESERVEMANAGER) {\\n      // 3\\n      ReserveManagerQueue[_address] = block.number.add(\\n        blocksNeededForQueue.mul(2)\\n      );\\n    } else if (_managing == MANAGING.LIQUIDITYDEPOSITOR) {\\n      // 4\\n      LiquidityDepositorQueue[_address] = block.number.add(\\n        blocksNeededForQueue\\n      );\\n    } else if (_managing == MANAGING.LIQUIDITYTOKEN) {\\n      // 5\\n      LiquidityTokenQueue[_address] = block.number.add(blocksNeededForQueue);\\n    } else if (_managing == MANAGING.LIQUIDITYMANAGER) {\\n      // 6\\n      LiquidityManagerQueue[_address] = block.number.add(\\n        blocksNeededForQueue.mul(2)\\n      );\\n    } else if (_managing == MANAGING.DEBTOR) {\\n      // 7\\n      debtorQueue[_address] = block.number.add(blocksNeededForQueue);\\n    } else if (_managing == MANAGING.REWARDMANAGER) {\\n      // 8\\n      rewardManagerQueue[_address] = block.number.add(blocksNeededForQueue);\\n    } else if (_managing == MANAGING.SOHM) {\\n      // 9\\n      sOHMQueue = block.number.add(blocksNeededForQueue);\\n    } else return false;\\n\\n    emit ChangeQueued(_managing, _address);\\n    return true;\\n  }\\n\\n  /**\\n        @notice verify queue then set boolean in mapping\\n        @param _managing MANAGING\\n        @param _address address\\n        @param _calculator address\\n        @return bool\\n     */\\n  function toggle(\\n    MANAGING _managing,\\n    address _address,\\n    address _calculator\\n  ) external onlyManager returns (bool) {\\n    require(_address != address(0));\\n    bool result;\\n    if (_managing == MANAGING.RESERVEDEPOSITOR) {\\n      // 0\\n      if (requirements(reserveDepositorQueue, isReserveDepositor, _address)) {\\n        reserveDepositorQueue[_address] = 0;\\n        if (!listContains(reserveDepositors, _address)) {\\n          reserveDepositors.push(_address);\\n        }\\n      }\\n      result = !isReserveDepositor[_address];\\n      isReserveDepositor[_address] = result;\\n    } else if (_managing == MANAGING.RESERVESPENDER) {\\n      // 1\\n      if (requirements(reserveSpenderQueue, isReserveSpender, _address)) {\\n        reserveSpenderQueue[_address] = 0;\\n        if (!listContains(reserveSpenders, _address)) {\\n          reserveSpenders.push(_address);\\n        }\\n      }\\n      result = !isReserveSpender[_address];\\n      isReserveSpender[_address] = result;\\n    } else if (_managing == MANAGING.RESERVETOKEN) {\\n      // 2\\n      if (requirements(reserveTokenQueue, isReserveToken, _address)) {\\n        reserveTokenQueue[_address] = 0;\\n        if (!listContains(reserveTokens, _address)) {\\n          reserveTokens.push(_address);\\n        }\\n      }\\n      result = !isReserveToken[_address];\\n      isReserveToken[_address] = result;\\n    } else if (_managing == MANAGING.RESERVEMANAGER) {\\n      // 3\\n      if (requirements(ReserveManagerQueue, isReserveManager, _address)) {\\n        reserveManagers.push(_address);\\n        ReserveManagerQueue[_address] = 0;\\n        if (!listContains(reserveManagers, _address)) {\\n          reserveManagers.push(_address);\\n        }\\n      }\\n      result = !isReserveManager[_address];\\n      isReserveManager[_address] = result;\\n    } else if (_managing == MANAGING.LIQUIDITYDEPOSITOR) {\\n      // 4\\n      if (\\n        requirements(LiquidityDepositorQueue, isLiquidityDepositor, _address)\\n      ) {\\n        liquidityDepositors.push(_address);\\n        LiquidityDepositorQueue[_address] = 0;\\n        if (!listContains(liquidityDepositors, _address)) {\\n          liquidityDepositors.push(_address);\\n        }\\n      }\\n      result = !isLiquidityDepositor[_address];\\n      isLiquidityDepositor[_address] = result;\\n    } else if (_managing == MANAGING.LIQUIDITYTOKEN) {\\n      // 5\\n      if (requirements(LiquidityTokenQueue, isLiquidityToken, _address)) {\\n        LiquidityTokenQueue[_address] = 0;\\n        if (!listContains(liquidityTokens, _address)) {\\n          liquidityTokens.push(_address);\\n        }\\n      }\\n      result = !isLiquidityToken[_address];\\n      isLiquidityToken[_address] = result;\\n      bondCalculator[_address] = _calculator;\\n    } else if (_managing == MANAGING.LIQUIDITYMANAGER) {\\n      // 6\\n      if (requirements(LiquidityManagerQueue, isLiquidityManager, _address)) {\\n        LiquidityManagerQueue[_address] = 0;\\n        if (!listContains(liquidityManagers, _address)) {\\n          liquidityManagers.push(_address);\\n        }\\n      }\\n      result = !isLiquidityManager[_address];\\n      isLiquidityManager[_address] = result;\\n    } else if (_managing == MANAGING.DEBTOR) {\\n      // 7\\n      if (requirements(debtorQueue, isDebtor, _address)) {\\n        debtorQueue[_address] = 0;\\n        if (!listContains(debtors, _address)) {\\n          debtors.push(_address);\\n        }\\n      }\\n      result = !isDebtor[_address];\\n      isDebtor[_address] = result;\\n    } else if (_managing == MANAGING.REWARDMANAGER) {\\n      // 8\\n      if (requirements(rewardManagerQueue, isRewardManager, _address)) {\\n        rewardManagerQueue[_address] = 0;\\n        if (!listContains(rewardManagers, _address)) {\\n          rewardManagers.push(_address);\\n        }\\n      }\\n      result = !isRewardManager[_address];\\n      isRewardManager[_address] = result;\\n    } else if (_managing == MANAGING.SOHM) {\\n      // 9\\n      sOHMQueue = 0;\\n      sOHM = _address;\\n      result = true;\\n    } else return false;\\n\\n    emit ChangeActivated(_managing, _address, result);\\n    return true;\\n  }\\n\\n  /**\\n        @notice checks requirements and returns altered structs\\n        @param queue_ mapping( address => uint )\\n        @param status_ mapping( address => bool )\\n        @param _address address\\n        @return bool \\n     */\\n  function requirements(\\n    mapping(address => uint256) storage queue_,\\n    mapping(address => bool) storage status_,\\n    address _address\\n  ) internal view returns (bool) {\\n    if (!status_[_address]) {\\n      require(queue_[_address] != 0, \\\"Must queue\\\");\\n      require(queue_[_address] <= block.number, \\\"Queue not expired\\\");\\n      return true;\\n    }\\n    return false;\\n  }\\n\\n  /**\\n        @notice checks array to ensure against duplicate\\n        @param _list address[]\\n        @param _token address\\n        @return bool\\n     */\\n  function listContains(address[] storage _list, address _token)\\n    internal\\n    view\\n    returns (bool)\\n  {\\n    for (uint256 i = 0; i < _list.length; i++) {\\n      if (_list[i] == _token) {\\n        return true;\\n      }\\n    }\\n    return false;\\n  }\\n}\\n\",\"keccak256\":\"0x02db9e69fb4f8c1d1c9dc5c99e26fadc4373cef48acd8949c016aae2a74e45fb\",\"license\":\"MIT\"}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          },
          "userdoc": {
            "kind": "user",
            "methods": {},
            "version": 1
          }
        },
        "MockOlympusTreasury": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_OHM",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "_DAI",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "_Frax",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "_blocksNeededForQueue",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "enum MockOlympusTreasury.MANAGING",
                  "name": "managing",
                  "type": "uint8"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "activated",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "bool",
                  "name": "result",
                  "type": "bool"
                }
              ],
              "name": "ChangeActivated",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "enum MockOlympusTreasury.MANAGING",
                  "name": "managing",
                  "type": "uint8"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "queued",
                  "type": "address"
                }
              ],
              "name": "ChangeQueued",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "debtor",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "CreateDebt",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Deposit",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipPulled",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipPushed",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "debtor",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "RepayDebt",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "totalReserves",
                  "type": "uint256"
                }
              ],
              "name": "ReservesAudited",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "ReservesManaged",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "totalReserves",
                  "type": "uint256"
                }
              ],
              "name": "ReservesUpdated",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "caller",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "RewardsMinted",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Withdrawal",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "LiquidityDepositorQueue",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "LiquidityManagerQueue",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "LiquidityTokenQueue",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "OHM",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "ReserveManagerQueue",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "auditReserves",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "blocksNeededForQueue",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "bondCalculator",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "debtorBalance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "debtorQueue",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "name": "debtors",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "_token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "_profit",
                  "type": "uint256"
                }
              ],
              "name": "deposit",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "send_",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "excessReserves",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "_token",
                  "type": "address"
                }
              ],
              "name": "incurDebt",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "isDebtor",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "isLiquidityDepositor",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "isLiquidityManager",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "isLiquidityToken",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "isReserveDepositor",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "isReserveManager",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "isReserveSpender",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "isReserveToken",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "isRewardManager",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "name": "liquidityDepositors",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "name": "liquidityManagers",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "name": "liquidityTokens",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "_amount",
                  "type": "uint256"
                }
              ],
              "name": "manage",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "manager",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "_amount",
                  "type": "uint256"
                }
              ],
              "name": "mintRewards",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "pullManagement",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner_",
                  "type": "address"
                }
              ],
              "name": "pushManagement",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "enum MockOlympusTreasury.MANAGING",
                  "name": "_managing",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "_address",
                  "type": "address"
                }
              ],
              "name": "queue",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceManagement",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_amount",
                  "type": "uint256"
                }
              ],
              "name": "repayDebtWithOHM",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "_token",
                  "type": "address"
                }
              ],
              "name": "repayDebtWithReserve",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "reserveDepositorQueue",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "name": "reserveDepositors",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "name": "reserveManagers",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "reserveSpenderQueue",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "name": "reserveSpenders",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "reserveTokenQueue",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "name": "reserveTokens",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "rewardManagerQueue",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "name": "rewardManagers",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "sOHM",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "sOHMQueue",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "enum MockOlympusTreasury.MANAGING",
                  "name": "_managing",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "_address",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "_calculator",
                  "type": "address"
                }
              ],
              "name": "toggle",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalDebt",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalReserves",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "_amount",
                  "type": "uint256"
                }
              ],
              "name": "valueOfToken",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "value_",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "_token",
                  "type": "address"
                }
              ],
              "name": "withdraw",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "devdoc": {
            "kind": "dev",
            "methods": {
              "deposit(uint256,address,uint256)": {
                "params": {
                  "_amount": "uint",
                  "_profit": "uint",
                  "_token": "address"
                },
                "returns": {
                  "send_": "uint"
                }
              },
              "excessReserves()": {
                "returns": {
                  "_0": "uint"
                }
              },
              "incurDebt(uint256,address)": {
                "params": {
                  "_amount": "uint",
                  "_token": "address"
                }
              },
              "manage(address,uint256)": {
                "params": {
                  "_amount": "uint",
                  "_token": "address"
                }
              },
              "queue(uint8,address)": {
                "params": {
                  "_address": "address",
                  "_managing": "MANAGING"
                },
                "returns": {
                  "_0": "bool"
                }
              },
              "repayDebtWithOHM(uint256)": {
                "params": {
                  "_amount": "uint"
                }
              },
              "repayDebtWithReserve(uint256,address)": {
                "params": {
                  "_amount": "uint",
                  "_token": "address"
                }
              },
              "toggle(uint8,address,address)": {
                "params": {
                  "_address": "address",
                  "_calculator": "address",
                  "_managing": "MANAGING"
                },
                "returns": {
                  "_0": "bool"
                }
              },
              "valueOfToken(address,uint256)": {
                "params": {
                  "_amount": "uint",
                  "_token": "address"
                },
                "returns": {
                  "value_": "uint"
                }
              },
              "withdraw(uint256,address)": {
                "params": {
                  "_amount": "uint",
                  "_token": "address"
                }
              }
            },
            "version": 1
          },
          "evm": {
            "bytecode": {
              "functionDebugData": {
                "@_315": {
                  "entryPoint": null,
                  "id": 315,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@_862": {
                  "entryPoint": null,
                  "id": 862,
                  "parameterSlots": 4,
                  "returnSlots": 0
                },
                "abi_decode_address_fromMemory": {
                  "entryPoint": 300,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_addresst_addresst_addresst_uint256_fromMemory": {
                  "entryPoint": 329,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 4
                }
              },
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:638:1",
                    "statements": [
                      {
                        "nodeType": "YulBlock",
                        "src": "6:3:1",
                        "statements": []
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "74:117:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "84:22:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "99:6:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "93:5:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "93:13:1"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "84:5:1"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "169:16:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "178:1:1",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "181:1:1",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "171:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "171:12:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "171:12:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "128:5:1"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "139:5:1"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "154:3:1",
                                                    "type": "",
                                                    "value": "160"
                                                  },
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "159:1:1",
                                                    "type": "",
                                                    "value": "1"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "shl",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "150:3:1"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "150:11:1"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "163:1:1",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "sub",
                                              "nodeType": "YulIdentifier",
                                              "src": "146:3:1"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "146:19:1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "135:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "135:31:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "125:2:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "125:42:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "118:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "118:50:1"
                              },
                              "nodeType": "YulIf",
                              "src": "115:70:1"
                            }
                          ]
                        },
                        "name": "abi_decode_address_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "53:6:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "64:5:1",
                            "type": ""
                          }
                        ],
                        "src": "14:177:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "328:308:1",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "375:16:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "384:1:1",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "387:1:1",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "377:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "377:12:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "377:12:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "349:7:1"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "358:9:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "345:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "345:23:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "370:3:1",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "341:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "341:33:1"
                              },
                              "nodeType": "YulIf",
                              "src": "338:53:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "400:50:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "440:9:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_address_fromMemory",
                                  "nodeType": "YulIdentifier",
                                  "src": "410:29:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "410:40:1"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "400:6:1"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "459:59:1",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "503:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "514:2:1",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "499:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "499:18:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_address_fromMemory",
                                  "nodeType": "YulIdentifier",
                                  "src": "469:29:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "469:49:1"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "459:6:1"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "527:59:1",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "571:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "582:2:1",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "567:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "567:18:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_address_fromMemory",
                                  "nodeType": "YulIdentifier",
                                  "src": "537:29:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "537:49:1"
                              },
                              "variableNames": [
                                {
                                  "name": "value2",
                                  "nodeType": "YulIdentifier",
                                  "src": "527:6:1"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "595:35:1",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "615:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "626:2:1",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "611:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "611:18:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "605:5:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "605:25:1"
                              },
                              "variableNames": [
                                {
                                  "name": "value3",
                                  "nodeType": "YulIdentifier",
                                  "src": "595:6:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_addresst_addresst_addresst_uint256_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "270:9:1",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "281:7:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "293:6:1",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "301:6:1",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "309:6:1",
                            "type": ""
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulTypedName",
                            "src": "317:6:1",
                            "type": ""
                          }
                        ],
                        "src": "196:440:1"
                      }
                    ]
                  },
                  "contents": "{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_addresst_addresst_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        value1 := abi_decode_address_fromMemory(add(headStart, 32))\n        value2 := abi_decode_address_fromMemory(add(headStart, 64))\n        value3 := mload(add(headStart, 96))\n    }\n}",
                  "id": 1,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "linkReferences": {},
              "object": "60c06040523480156200001157600080fd5b506040516200340138038062003401833981016040819052620000349162000149565b600080546001600160a01b0319163390811782556040519091907fea8258f2d9ddb679928cf34b78cf645b7feda9acc828e4dd82d014eaae270eba908290a36001600160a01b0384166200008757600080fd5b6001600160a01b039384166080529183166000818152600360205260408082208054600160ff1991821681179092556002805480840182557f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace90810180546001600160a01b0319908116909817905596909816808552928420805490911682179055865490810187559590915293909101805490911690921790915560a0526200019b565b80516001600160a01b03811681146200014457600080fd5b919050565b600080600080608085870312156200016057600080fd5b6200016b856200012c565b93506200017b602086016200012c565b92506200018b604086016200012c565b6060959095015193969295505050565b60805160a0516131c962000238600039600081816106cc01528181611a8801528181611aea01528181611b4c01528181611bb001528181611c1b01528181611c7d01528181611ce101528181611d4501528181611da70152611e090152600081816105ec0152818161089f01528181610b8f01528181610c6e01528181610d1d015281816114080152818161162301526117a301526131c96000f3fe608060405234801561001057600080fd5b50600436106102f05760003560e01c80638f59c7271161019d578063d031370b116100e9578063ebd83cd8116100a2578063fbfd393b1161007c578063fbfd393b146107b0578063fc7b9c18146107c3578063fd1ec010146107cc578063fff9ee87146107df57600080fd5b8063ebd83cd81461074a578063ee4e19a11461076d578063fb9395881461079057600080fd5b8063d031370b146106b4578063d07f390f146106c7578063d1b317e5146106ee578063d796ffb814610701578063df89b34414610714578063e83afee31461073757600080fd5b8063a6c41fec11610156578063b5b1d56011610130578063b5b1d5601461064e578063bc157ac114610661578063c24ad43e14610674578063cd85641a1461069457600080fd5b8063a6c41fec146105e7578063ab319c9a1461060e578063b1bd38b01461062e57600080fd5b80638f59c727146105455780638f6a7b57146105655780638f840ddd14610578578063932cc8c314610581578063a1210a2d146105a1578063a569e571146105c457600080fd5b80632b7ce5001161025c57806368c31dd51161021557806370a0502a116101ef57806370a0502a146104dc578063788c6c01146104ef578063869871bf1461050f57806387d67dff1461052257600080fd5b806368c31dd5146104935780636a20de92146104b65780636b5e40a7146104c957600080fd5b80632b7ce50014610429578063437f79121461043157806346f68ee914610444578063481c6a75146104575780634e83423c146104685780635a96ac0a1461048b57600080fd5b80630f70431f116102ae5780630f70431f1461038b578063124154ca1461039e57806312422d23146103d157806315079925146103e45780631af4da70146103f75780632789de371461042057600080fd5b8062f714ce146102f55780630619aff11461030a578063089208d81461033a578063094a8651146103425780630b0eee30146103705780630c3513a814610383575b600080fd5b610308610303366004612d1e565b6107ff565b005b61031d610318366004612d4a565b61098b565b6040516001600160a01b0390911681526020015b60405180910390f35b6103086109b5565b610362610350366004612d63565b601b6020526000908152604090205481565b604051908152602001610331565b61030861037e366004612d7e565b610a29565b610362610b82565b610308610399366004612d4a565b610c23565b6103c16103ac366004612d63565b60066020526000908152604090205460ff1681565b6040519015158152602001610331565b6103086103df366004612d1e565b610d76565b601f5461031d906001600160a01b031681565b61031d610405366004612d63565b6011602052600090815260409020546001600160a01b031681565b61036260205481565b610308610fe3565b61031d61043f366004612d4a565b6111a4565b610308610452366004612d63565b6111b4565b6000546001600160a01b031661031d565b6103c1610476366004612d63565b601d6020526000908152604090205460ff1681565b61030861129e565b6103c16104a1366004612d63565b60036020526000908152604090205460ff1681565b6103086104c4366004612d7e565b611364565b61031d6104d7366004612d4a565b6114a8565b61031d6104ea366004612d4a565b6114b8565b6103626104fd366004612d63565b60046020526000908152604090205481565b61031d61051d366004612d4a565b6114c8565b6103c1610530366004612d63565b60096020526000908152604090205460ff1681565b610362610553366004612d63565b600d6020526000908152604090205481565b61031d610573366004612d4a565b6114d8565b61036260215481565b61036261058f366004612d63565b60076020526000908152604090205481565b6103c16105af366004612d63565b600f6020526000908152604090205460ff1681565b6103c16105d2366004612d63565b600c6020526000908152604090205460ff1681565b61031d7f000000000000000000000000000000000000000000000000000000000000000081565b61036261061c366004612d63565b60176020526000908152604090205481565b61036261063c366004612d63565b60146020526000908152604090205481565b61031d61065c366004612d4a565b6114e8565b61036261066f366004612da8565b6114f8565b610362610682366004612d63565b600a6020526000908152604090205481565b6103626106a2366004612d63565b601a6020526000908152604090205481565b61031d6106c2366004612d4a565b6116fd565b6103627f000000000000000000000000000000000000000000000000000000000000000081565b6103626106fc366004612d7e565b61170d565b61030861070f366004612d1e565b6118f1565b6103c1610722366004612d63565b60166020526000908152604090205460ff1681565b6103c1610745366004612dec565b611a2a565b6103c1610758366004612d63565b60136020526000908152604090205460ff1681565b6103c161077b366004612d63565b60196020526000908152604090205460ff1681565b61036261079e366004612d63565b601e6020526000908152604090205481565b6103c16107be366004612e16565b611e94565b61036260225481565b61031d6107da366004612d4a565b61276d565b6103626107ed366004612d63565b60106020526000908152604090205481565b6001600160a01b03811660009081526003602052604090205460ff166108405760405162461bcd60e51b815260040161083790612e59565b60405180910390fd5b3360009081526009602052604090205460ff1615156001146108745760405162461bcd60e51b815260040161083790612e7f565b6000610880828461170d565b60405163079cc67960e41b8152336004820152602481018290529091507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906379cc679090604401600060405180830381600087803b1580156108eb57600080fd5b505af11580156108ff573d6000803e3d6000fd5b5050602154610911925090508261277d565b602181905560405160008051602061317483398151915290600090a26109416001600160a01b03831633856127bf565b60408051848152602081018390526001600160a01b038416917fdf273cb619d95419a9cd0ec88123a0538c85064229baa6363788f743fff90deb91015b60405180910390a2505050565b6012818154811061099b57600080fd5b6000918252602090912001546001600160a01b0316905081565b6000546001600160a01b031633146109df5760405162461bcd60e51b815260040161083790612ea5565b600080546040516001600160a01b03909116907fea8258f2d9ddb679928cf34b78cf645b7feda9acc828e4dd82d014eaae270eba908390a3600080546001600160a01b0319169055565b6001600160a01b0382166000908152600c602052604090205460ff1615610a7e573360009081526016602052604090205460ff16610a795760405162461bcd60e51b815260040161083790612e7f565b610aad565b3360009081526013602052604090205460ff16610aad5760405162461bcd60e51b815260040161083790612e7f565b6000610ab9838361170d565b9050610ac3610b82565b811115610b0a5760405162461bcd60e51b8152602060048201526015602482015274496e73756666696369656e7420726573657276657360581b6044820152606401610837565b602154610b17908261277d565b602181905560405160008051602061317483398151915290600090a2610b476001600160a01b03841633846127bf565b826001600160a01b03167f2bb2640731848fe9820ba48dbc978c1fc9bbd5f11b948bfab05b7dee3378fd808360405161097e91815260200190565b6000610c1e610c156022547f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610beb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c0f9190612eda565b9061277d565b6021549061277d565b905090565b3360009081526019602052604090205460ff16610c525760405162461bcd60e51b815260040161083790612e7f565b60405163079cc67960e41b8152336004820152602481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906379cc679090604401600060405180830381600087803b158015610cba57600080fd5b505af1158015610cce573d6000803e3d6000fd5b5050336000908152601b6020526040902054610ced925090508261277d565b336000908152601b6020526040902055602254610d0a908261277d565b60225560408051828152602081018390527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169133917fc6d98eecfc9c78ab62c89a82950079b54874749f1f6f24090f7acc758bc2f309910160405180910390a350565b3360009081526019602052604090205460ff16610da55760405162461bcd60e51b815260040161083790612e7f565b6001600160a01b03811660009081526003602052604090205460ff16610ddd5760405162461bcd60e51b815260040161083790612e59565b6000610de9828461170d565b601f546040516370a0823160e01b81523360048201529192506000916001600160a01b03909116906370a0823190602401602060405180830381865afa158015610e37573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e5b9190612eda565b336000908152601b602052604081205491925090610e7a90839061277d565b905080831115610ec15760405162461bcd60e51b8152602060048201526012602482015271115e18d959591cc81919589d081b1a5b5a5d60721b6044820152606401610837565b336000908152601b6020526040902054610edb9084612827565b336000908152601b6020526040902055602254610ef89084612827565b602255602154610f08908461277d565b602181905560405160008051602061317483398151915290600090a260405163a9059cbb60e01b8152336004820152602481018690526001600160a01b0385169063a9059cbb906044016020604051808303816000875af1158015610f71573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f959190612ef3565b5060408051868152602081018590526001600160a01b0386169133917f7e1a939bed137a819b5d2979822c67f877689f7a863d5e4cb57cdca97b2977d6910160405180910390a35050505050565b6000546001600160a01b0316331461100d5760405162461bcd60e51b815260040161083790612ea5565b6000805b6002548110156110f0576110dc6110d56002838154811061103457611034612f15565b600091825260209091200154600280546001600160a01b03909216918590811061106057611060612f15565b6000918252602090912001546040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa1580156110b1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106fc9190612eda565b8390612827565b9150806110e881612f41565b915050611011565b5060005b600b54811015611157576111436110d5600b838154811061111757611117612f15565b600091825260209091200154600b80546001600160a01b03909216918590811061106057611060612f15565b91508061114f81612f41565b9150506110f4565b506021819055604051819060008051602061317483398151915290600090a260405181907fec691f09f6924b27932253f85caf99bacc30360cc0e50a1cc4d2acc24601446690600090a250565b6008818154811061099b57600080fd5b6000546001600160a01b031633146111de5760405162461bcd60e51b815260040161083790612ea5565b6001600160a01b0381166112435760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610837565b600080546040516001600160a01b03808516939216917fea8258f2d9ddb679928cf34b78cf645b7feda9acc828e4dd82d014eaae270eba91a3600180546001600160a01b0319166001600160a01b0392909216919091179055565b6001546001600160a01b031633146113035760405162461bcd60e51b815260206004820152602260248201527f4f776e61626c653a206d757374206265206e6577206f776e657220746f2070756044820152611b1b60f21b6064820152608401610837565b600154600080546040516001600160a01b0393841693909116917faa151555690c956fc3ea32f106bb9f119b5237a061eaa8557cff3e51e3792c8d91a3600154600080546001600160a01b0319166001600160a01b03909216919091179055565b336000908152601d602052604090205460ff166113935760405162461bcd60e51b815260040161083790612e7f565b61139b610b82565b8111156113e25760405162461bcd60e51b8152602060048201526015602482015274496e73756666696369656e7420726573657276657360581b6044820152606401610837565b6040516340c10f1960e01b81526001600160a01b038381166004830152602482018390527f000000000000000000000000000000000000000000000000000000000000000016906340c10f1990604401600060405180830381600087803b15801561144c57600080fd5b505af1158015611460573d6000803e3d6000fd5b50506040518381526001600160a01b03851692503391507ffa8ccab40e7da8146c2304cd0950334fd30a6ba093abe86261aa13911fed849c9060200160405180910390a35050565b6005818154811061099b57600080fd5b6015818154811061099b57600080fd5b6018818154811061099b57600080fd5b600e818154811061099b57600080fd5b601c818154811061099b57600080fd5b6001600160a01b03821660009081526003602052604081205460ff168061153757506001600160a01b0383166000908152600c602052604090205460ff165b6115535760405162461bcd60e51b815260040161083790612e59565b6115686001600160a01b038416333087612886565b6001600160a01b03831660009081526003602052604090205460ff16156115bd573360009081526006602052604090205460ff166115b85760405162461bcd60e51b815260040161083790612e7f565b6115ec565b336000908152600f602052604090205460ff166115ec5760405162461bcd60e51b815260040161083790612e7f565b60006115f8848661170d565b9050611604818461277d565b6040516340c10f1960e01b8152336004820152602481018290529092507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906340c10f1990604401600060405180830381600087803b15801561166f57600080fd5b505af1158015611683573d6000803e3d6000fd5b50506021546116959250905082612827565b602181905560405160008051602061317483398151915290600090a260408051868152602081018390526001600160a01b038616917f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a15910160405180910390a2509392505050565b6002818154811061099b57600080fd5b6001600160a01b03821660009081526003602052604081205460ff16156118425761183b836001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa15801561176f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117939190612f5c565b61179e90600a613063565b6118357f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156117ff573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118239190612f5c565b61182e90600a613063565b85906128c4565b90612943565b90506118eb565b6001600160a01b0383166000908152600c602052604090205460ff16156118eb576001600160a01b0383811660008181526011602052604090819020549051634249719f60e01b815260048101929092526024820185905290911690634249719f90604401602060405180830381865afa1580156118c4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118e89190612eda565b90505b92915050565b3360009081526019602052604090205460ff166119205760405162461bcd60e51b815260040161083790612e7f565b6001600160a01b03811660009081526003602052604090205460ff166119585760405162461bcd60e51b815260040161083790612e59565b61196d6001600160a01b038216333085612886565b6000611979828461170d565b336000908152601b6020526040902054909150611996908261277d565b336000908152601b60205260409020556022546119b3908261277d565b6022556021546119c39082612827565b602181905560405160008051602061317483398151915290600090a260408051848152602081018390526001600160a01b0384169133917fc6d98eecfc9c78ab62c89a82950079b54874749f1f6f24090f7acc758bc2f309910160405180910390a3505050565b600080546001600160a01b03163314611a555760405162461bcd60e51b815260040161083790612ea5565b6001600160a01b038216611a6857600080fd5b6000836009811115611a7c57611a7c613072565b1415611aca57611aac437f0000000000000000000000000000000000000000000000000000000000000000612827565b6001600160a01b038316600090815260076020526040902055611e3d565b6001836009811115611ade57611ade613072565b1415611b2c57611b0e437f0000000000000000000000000000000000000000000000000000000000000000612827565b6001600160a01b0383166000908152600a6020526040902055611e3d565b6002836009811115611b4057611b40613072565b1415611b8e57611b70437f0000000000000000000000000000000000000000000000000000000000000000612827565b6001600160a01b038316600090815260046020526040902055611e3d565b6003836009811115611ba257611ba2613072565b1415611bfb57611bdd611bd67f000000000000000000000000000000000000000000000000000000000000000060026128c4565b4390612827565b6001600160a01b038316600090815260146020526040902055611e3d565b6004836009811115611c0f57611c0f613072565b1415611c5d57611c3f437f0000000000000000000000000000000000000000000000000000000000000000612827565b6001600160a01b038316600090815260106020526040902055611e3d565b6005836009811115611c7157611c71613072565b1415611cbf57611ca1437f0000000000000000000000000000000000000000000000000000000000000000612827565b6001600160a01b0383166000908152600d6020526040902055611e3d565b6006836009811115611cd357611cd3613072565b1415611d2557611d07611bd67f000000000000000000000000000000000000000000000000000000000000000060026128c4565b6001600160a01b038316600090815260176020526040902055611e3d565b6007836009811115611d3957611d39613072565b1415611d8757611d69437f0000000000000000000000000000000000000000000000000000000000000000612827565b6001600160a01b0383166000908152601a6020526040902055611e3d565b6008836009811115611d9b57611d9b613072565b1415611de957611dcb437f0000000000000000000000000000000000000000000000000000000000000000612827565b6001600160a01b0383166000908152601e6020526040902055611e3d565b6009836009811115611dfd57611dfd613072565b1415611e3557611e2d437f0000000000000000000000000000000000000000000000000000000000000000612827565b602055611e3d565b5060006118eb565b826009811115611e4f57611e4f613072565b6040516001600160a01b03841681527f0e4f2c4b5bc209d509bc3d49348c787fefadc66a79351b470599ac0f5be52eaf9060200160405180910390a250600192915050565b600080546001600160a01b03163314611ebf5760405162461bcd60e51b815260040161083790612ea5565b6001600160a01b038316611ed257600080fd5b600080856009811115611ee757611ee7613072565b1415611fa357611efa6007600686612985565b15611f73576001600160a01b038416600090815260076020526040812055611f23600585612a65565b611f7357600580546001810182556000919091527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db00180546001600160a01b0319166001600160a01b0386161790555b506001600160a01b0383166000908152600660205260409020805460ff81161560ff19909116811790915561270b565b6001856009811115611fb757611fb7613072565b141561207357611fca600a600986612985565b15612043576001600160a01b0384166000908152600a6020526040812055611ff3600885612a65565b61204357600880546001810182556000919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30180546001600160a01b0319166001600160a01b0386161790555b506001600160a01b0383166000908152600960205260409020805460ff81161560ff19909116811790915561270b565b600285600981111561208757612087613072565b14156121435761209a6004600386612985565b15612113576001600160a01b0384166000908152600460205260408120556120c3600285612a65565b61211357600280546001810182556000919091527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace0180546001600160a01b0319166001600160a01b0386161790555b506001600160a01b0383166000908152600360205260409020805460ff81161560ff19909116811790915561270b565b600385600981111561215757612157613072565b14156122505761216a6014601386612985565b1561222057601280546001810182557fbb8a6a4669ba250d26cd7a459eca9d215f8307e33aebe50379bc5a3617ec34440180546001600160a01b0319166001600160a01b0387169081179091556000908152601460205260408120556121d09085612a65565b61222057601280546001810182556000919091527fbb8a6a4669ba250d26cd7a459eca9d215f8307e33aebe50379bc5a3617ec34440180546001600160a01b0319166001600160a01b0386161790555b506001600160a01b0383166000908152601360205260409020805460ff81161560ff19909116811790915561270b565b600485600981111561226457612264613072565b141561235d576122776010600f86612985565b1561232d57600e80546001810182557fbb7b4a454dc3493923482f07822329ed19e8244eff582cc204f8554c3620c3fd0180546001600160a01b0319166001600160a01b0387169081179091556000908152601060205260408120556122dd9085612a65565b61232d57600e80546001810182556000919091527fbb7b4a454dc3493923482f07822329ed19e8244eff582cc204f8554c3620c3fd0180546001600160a01b0319166001600160a01b0386161790555b506001600160a01b0383166000908152600f60205260409020805460ff81161560ff19909116811790915561270b565b600585600981111561237157612371613072565b141561244f57612384600d600c86612985565b156123fd576001600160a01b0384166000908152600d60205260408120556123ad600b85612a65565b6123fd57600b80546001810182556000919091527f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db90180546001600160a01b0319166001600160a01b0386161790555b506001600160a01b038381166000908152600c60209081526040808320805460ff81161560ff199091168117909155601190925290912080546001600160a01b0319169285169290921790915561270b565b600685600981111561246357612463613072565b141561251f576124766017601686612985565b156124ef576001600160a01b03841660009081526017602052604081205561249f601585612a65565b6124ef57601580546001810182556000919091527f55f448fdea98c4d29eb340757ef0a66cd03dbb9538908a6a81d96026b71ec4750180546001600160a01b0319166001600160a01b0386161790555b506001600160a01b0383166000908152601660205260409020805460ff81161560ff19909116811790915561270b565b600785600981111561253357612533613072565b14156125ef57612546601a601986612985565b156125bf576001600160a01b0384166000908152601a602052604081205561256f601885612a65565b6125bf57601880546001810182556000919091527fb13d2d76d1f4b7be834882e410b3e3a8afaf69f83600ae24db354391d2378d2e0180546001600160a01b0319166001600160a01b0386161790555b506001600160a01b0383166000908152601960205260409020805460ff81161560ff19909116811790915561270b565b600885600981111561260357612603613072565b14156126bf57612616601e601d86612985565b1561268f576001600160a01b0384166000908152601e602052604081205561263f601c85612a65565b61268f57601c80546001810182556000919091527f0e4562a10381dec21b205ed72637e6b1b523bdd0e4d4d50af5cd23dd4500a2110180546001600160a01b0319166001600160a01b0386161790555b506001600160a01b0383166000908152601d60205260409020805460ff81161560ff19909116811790915561270b565b60098560098111156126d3576126d3613072565b141561270157506000602055601f80546001600160a01b0319166001600160a01b038516179055600161270b565b6000915050612766565b84600981111561271d5761271d613072565b604080516001600160a01b038716815283151560208201527f0dcacb7e392f3d6a216ed2660e3dcfd40b7793d33591db2ba185a6b8e44fc477910160405180910390a260019150505b9392505050565b600b818154811061099b57600080fd5b60006118e883836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250612ac5565b6040516001600160a01b03831660248201526044810182905261282290849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152612aff565b505050565b6000806128348385613088565b9050838110156118e85760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f7700000000006044820152606401610837565b6040516001600160a01b03808516602483015283166044820152606481018290526128be9085906323b872dd60e01b906084016127eb565b50505050565b6000826128d3575060006118eb565b60006128df83856130a0565b9050826128ec85836130bf565b146118e85760405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6044820152607760f81b6064820152608401610837565b60006118e883836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250612bd1565b6001600160a01b03811660009081526020839052604081205460ff16612a5b576001600160a01b0382166000908152602085905260409020546129f75760405162461bcd60e51b815260206004820152600a6024820152694d75737420717565756560b01b6044820152606401610837565b6001600160a01b038216600090815260208590526040902054431015612a535760405162461bcd60e51b8152602060048201526011602482015270145d595d59481b9bdd08195e1c1a5c9959607a1b6044820152606401610837565b506001612766565b5060009392505050565b6000805b8354811015612a5b57826001600160a01b0316848281548110612a8e57612a8e612f15565b6000918252602090912001546001600160a01b03161415612ab35760019150506118eb565b80612abd81612f41565b915050612a69565b60008184841115612ae95760405162461bcd60e51b8152600401610837919061310d565b506000612af68486613140565b95945050505050565b6000612b54826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316612bff9092919063ffffffff16565b8051909150156128225780806020019051810190612b729190612ef3565b6128225760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610837565b60008183612bf25760405162461bcd60e51b8152600401610837919061310d565b506000612af684866130bf565b6060612c0e8484600085612c16565b949350505050565b6060843b612c665760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610837565b600080866001600160a01b03168587604051612c829190613157565b60006040518083038185875af1925050503d8060008114612cbf576040519150601f19603f3d011682016040523d82523d6000602084013e612cc4565b606091505b50915091508115612cd8579150612c0e9050565b805115612ce85780518082602001fd5b8360405162461bcd60e51b8152600401610837919061310d565b80356001600160a01b0381168114612d1957600080fd5b919050565b60008060408385031215612d3157600080fd5b82359150612d4160208401612d02565b90509250929050565b600060208284031215612d5c57600080fd5b5035919050565b600060208284031215612d7557600080fd5b6118e882612d02565b60008060408385031215612d9157600080fd5b612d9a83612d02565b946020939093013593505050565b600080600060608486031215612dbd57600080fd5b83359250612dcd60208501612d02565b9150604084013590509250925092565b8035600a8110612d1957600080fd5b60008060408385031215612dff57600080fd5b612e0883612ddd565b9150612d4160208401612d02565b600080600060608486031215612e2b57600080fd5b612e3484612ddd565b9250612e4260208501612d02565b9150612e5060408501612d02565b90509250925092565b6020808252600c908201526b139bdd081858d8d95c1d195960a21b604082015260600190565b6020808252600c908201526b139bdd08185c1c1c9bdd995960a21b604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600060208284031215612eec57600080fd5b5051919050565b600060208284031215612f0557600080fd5b815180151581146118e857600080fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600019821415612f5557612f55612f2b565b5060010190565b600060208284031215612f6e57600080fd5b815160ff811681146118e857600080fd5b600181815b80851115612fba578160001904821115612fa057612fa0612f2b565b80851615612fad57918102915b93841c9390800290612f84565b509250929050565b600082612fd1575060016118eb565b81612fde575060006118eb565b8160018114612ff45760028114612ffe5761301a565b60019150506118eb565b60ff84111561300f5761300f612f2b565b50506001821b6118eb565b5060208310610133831016604e8410600b841016171561303d575081810a6118eb565b6130478383612f7f565b806000190482111561305b5761305b612f2b565b029392505050565b60006118e860ff841683612fc2565b634e487b7160e01b600052602160045260246000fd5b6000821982111561309b5761309b612f2b565b500190565b60008160001904831182151516156130ba576130ba612f2b565b500290565b6000826130dc57634e487b7160e01b600052601260045260246000fd5b500490565b60005b838110156130fc5781810151838201526020016130e4565b838111156128be5750506000910152565b602081526000825180602084015261312c8160408501602087016130e1565b601f01601f19169190910160400192915050565b60008282101561315257613152612f2b565b500390565b600082516131698184602087016130e1565b919091019291505056fe93bb8edd35984706eee1b92541281f7f62d33c01c5b2ec0929a113603bd21d66a2646970667358221220573b48eac61884a9f04927fe7c713ad6ac7427ee097f20fe3395b65c2570c2b264736f6c634300080a0033",
              "opcodes": "PUSH1 0xC0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x3401 CODESIZE SUB DUP1 PUSH3 0x3401 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x149 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER SWAP1 DUP2 OR DUP3 SSTORE PUSH1 0x40 MLOAD SWAP1 SWAP2 SWAP1 PUSH32 0xEA8258F2D9DDB679928CF34B78CF645B7FEDA9ACC828E4DD82D014EAAE270EBA SWAP1 DUP3 SWAP1 LOG3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH3 0x87 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x80 MSTORE SWAP2 DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0xFF NOT SWAP2 DUP3 AND DUP2 OR SWAP1 SWAP3 SSTORE PUSH1 0x2 DUP1 SLOAD DUP1 DUP5 ADD DUP3 SSTORE PUSH32 0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5ACE SWAP1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND SWAP1 SWAP9 OR SWAP1 SSTORE SWAP7 SWAP1 SWAP9 AND DUP1 DUP6 MSTORE SWAP3 DUP5 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 AND DUP3 OR SWAP1 SSTORE DUP7 SLOAD SWAP1 DUP2 ADD DUP8 SSTORE SWAP6 SWAP1 SWAP2 MSTORE SWAP4 SWAP1 SWAP2 ADD DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH1 0xA0 MSTORE PUSH3 0x19B JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x144 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH3 0x160 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x16B DUP6 PUSH3 0x12C JUMP JUMPDEST SWAP4 POP PUSH3 0x17B PUSH1 0x20 DUP7 ADD PUSH3 0x12C JUMP JUMPDEST SWAP3 POP PUSH3 0x18B PUSH1 0x40 DUP7 ADD PUSH3 0x12C JUMP JUMPDEST PUSH1 0x60 SWAP6 SWAP1 SWAP6 ADD MLOAD SWAP4 SWAP7 SWAP3 SWAP6 POP POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH2 0x31C9 PUSH3 0x238 PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x6CC ADD MSTORE DUP2 DUP2 PUSH2 0x1A88 ADD MSTORE DUP2 DUP2 PUSH2 0x1AEA ADD MSTORE DUP2 DUP2 PUSH2 0x1B4C ADD MSTORE DUP2 DUP2 PUSH2 0x1BB0 ADD MSTORE DUP2 DUP2 PUSH2 0x1C1B ADD MSTORE DUP2 DUP2 PUSH2 0x1C7D ADD MSTORE DUP2 DUP2 PUSH2 0x1CE1 ADD MSTORE DUP2 DUP2 PUSH2 0x1D45 ADD MSTORE DUP2 DUP2 PUSH2 0x1DA7 ADD MSTORE PUSH2 0x1E09 ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x5EC ADD MSTORE DUP2 DUP2 PUSH2 0x89F ADD MSTORE DUP2 DUP2 PUSH2 0xB8F ADD MSTORE DUP2 DUP2 PUSH2 0xC6E ADD MSTORE DUP2 DUP2 PUSH2 0xD1D ADD MSTORE DUP2 DUP2 PUSH2 0x1408 ADD MSTORE DUP2 DUP2 PUSH2 0x1623 ADD MSTORE PUSH2 0x17A3 ADD MSTORE PUSH2 0x31C9 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2F0 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8F59C727 GT PUSH2 0x19D JUMPI DUP1 PUSH4 0xD031370B GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0xEBD83CD8 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xFBFD393B GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xFBFD393B EQ PUSH2 0x7B0 JUMPI DUP1 PUSH4 0xFC7B9C18 EQ PUSH2 0x7C3 JUMPI DUP1 PUSH4 0xFD1EC010 EQ PUSH2 0x7CC JUMPI DUP1 PUSH4 0xFFF9EE87 EQ PUSH2 0x7DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xEBD83CD8 EQ PUSH2 0x74A JUMPI DUP1 PUSH4 0xEE4E19A1 EQ PUSH2 0x76D JUMPI DUP1 PUSH4 0xFB939588 EQ PUSH2 0x790 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xD031370B EQ PUSH2 0x6B4 JUMPI DUP1 PUSH4 0xD07F390F EQ PUSH2 0x6C7 JUMPI DUP1 PUSH4 0xD1B317E5 EQ PUSH2 0x6EE JUMPI DUP1 PUSH4 0xD796FFB8 EQ PUSH2 0x701 JUMPI DUP1 PUSH4 0xDF89B344 EQ PUSH2 0x714 JUMPI DUP1 PUSH4 0xE83AFEE3 EQ PUSH2 0x737 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA6C41FEC GT PUSH2 0x156 JUMPI DUP1 PUSH4 0xB5B1D560 GT PUSH2 0x130 JUMPI DUP1 PUSH4 0xB5B1D560 EQ PUSH2 0x64E JUMPI DUP1 PUSH4 0xBC157AC1 EQ PUSH2 0x661 JUMPI DUP1 PUSH4 0xC24AD43E EQ PUSH2 0x674 JUMPI DUP1 PUSH4 0xCD85641A EQ PUSH2 0x694 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA6C41FEC EQ PUSH2 0x5E7 JUMPI DUP1 PUSH4 0xAB319C9A EQ PUSH2 0x60E JUMPI DUP1 PUSH4 0xB1BD38B0 EQ PUSH2 0x62E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8F59C727 EQ PUSH2 0x545 JUMPI DUP1 PUSH4 0x8F6A7B57 EQ PUSH2 0x565 JUMPI DUP1 PUSH4 0x8F840DDD EQ PUSH2 0x578 JUMPI DUP1 PUSH4 0x932CC8C3 EQ PUSH2 0x581 JUMPI DUP1 PUSH4 0xA1210A2D EQ PUSH2 0x5A1 JUMPI DUP1 PUSH4 0xA569E571 EQ PUSH2 0x5C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2B7CE500 GT PUSH2 0x25C JUMPI DUP1 PUSH4 0x68C31DD5 GT PUSH2 0x215 JUMPI DUP1 PUSH4 0x70A0502A GT PUSH2 0x1EF JUMPI DUP1 PUSH4 0x70A0502A EQ PUSH2 0x4DC JUMPI DUP1 PUSH4 0x788C6C01 EQ PUSH2 0x4EF JUMPI DUP1 PUSH4 0x869871BF EQ PUSH2 0x50F JUMPI DUP1 PUSH4 0x87D67DFF EQ PUSH2 0x522 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x68C31DD5 EQ PUSH2 0x493 JUMPI DUP1 PUSH4 0x6A20DE92 EQ PUSH2 0x4B6 JUMPI DUP1 PUSH4 0x6B5E40A7 EQ PUSH2 0x4C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2B7CE500 EQ PUSH2 0x429 JUMPI DUP1 PUSH4 0x437F7912 EQ PUSH2 0x431 JUMPI DUP1 PUSH4 0x46F68EE9 EQ PUSH2 0x444 JUMPI DUP1 PUSH4 0x481C6A75 EQ PUSH2 0x457 JUMPI DUP1 PUSH4 0x4E83423C EQ PUSH2 0x468 JUMPI DUP1 PUSH4 0x5A96AC0A EQ PUSH2 0x48B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xF70431F GT PUSH2 0x2AE JUMPI DUP1 PUSH4 0xF70431F EQ PUSH2 0x38B JUMPI DUP1 PUSH4 0x124154CA EQ PUSH2 0x39E JUMPI DUP1 PUSH4 0x12422D23 EQ PUSH2 0x3D1 JUMPI DUP1 PUSH4 0x15079925 EQ PUSH2 0x3E4 JUMPI DUP1 PUSH4 0x1AF4DA70 EQ PUSH2 0x3F7 JUMPI DUP1 PUSH4 0x2789DE37 EQ PUSH2 0x420 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0xF714CE EQ PUSH2 0x2F5 JUMPI DUP1 PUSH4 0x619AFF1 EQ PUSH2 0x30A JUMPI DUP1 PUSH4 0x89208D8 EQ PUSH2 0x33A JUMPI DUP1 PUSH4 0x94A8651 EQ PUSH2 0x342 JUMPI DUP1 PUSH4 0xB0EEE30 EQ PUSH2 0x370 JUMPI DUP1 PUSH4 0xC3513A8 EQ PUSH2 0x383 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x308 PUSH2 0x303 CALLDATASIZE PUSH1 0x4 PUSH2 0x2D1E JUMP JUMPDEST PUSH2 0x7FF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x31D PUSH2 0x318 CALLDATASIZE PUSH1 0x4 PUSH2 0x2D4A JUMP JUMPDEST PUSH2 0x98B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x308 PUSH2 0x9B5 JUMP JUMPDEST PUSH2 0x362 PUSH2 0x350 CALLDATASIZE PUSH1 0x4 PUSH2 0x2D63 JUMP JUMPDEST PUSH1 0x1B PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x331 JUMP JUMPDEST PUSH2 0x308 PUSH2 0x37E CALLDATASIZE PUSH1 0x4 PUSH2 0x2D7E JUMP JUMPDEST PUSH2 0xA29 JUMP JUMPDEST PUSH2 0x362 PUSH2 0xB82 JUMP JUMPDEST PUSH2 0x308 PUSH2 0x399 CALLDATASIZE PUSH1 0x4 PUSH2 0x2D4A JUMP JUMPDEST PUSH2 0xC23 JUMP JUMPDEST PUSH2 0x3C1 PUSH2 0x3AC CALLDATASIZE PUSH1 0x4 PUSH2 0x2D63 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x331 JUMP JUMPDEST PUSH2 0x308 PUSH2 0x3DF CALLDATASIZE PUSH1 0x4 PUSH2 0x2D1E JUMP JUMPDEST PUSH2 0xD76 JUMP JUMPDEST PUSH1 0x1F SLOAD PUSH2 0x31D SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x31D PUSH2 0x405 CALLDATASIZE PUSH1 0x4 PUSH2 0x2D63 JUMP JUMPDEST PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x362 PUSH1 0x20 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x308 PUSH2 0xFE3 JUMP JUMPDEST PUSH2 0x31D PUSH2 0x43F CALLDATASIZE PUSH1 0x4 PUSH2 0x2D4A JUMP JUMPDEST PUSH2 0x11A4 JUMP JUMPDEST PUSH2 0x308 PUSH2 0x452 CALLDATASIZE PUSH1 0x4 PUSH2 0x2D63 JUMP JUMPDEST PUSH2 0x11B4 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x31D JUMP JUMPDEST PUSH2 0x3C1 PUSH2 0x476 CALLDATASIZE PUSH1 0x4 PUSH2 0x2D63 JUMP JUMPDEST PUSH1 0x1D PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x308 PUSH2 0x129E JUMP JUMPDEST PUSH2 0x3C1 PUSH2 0x4A1 CALLDATASIZE PUSH1 0x4 PUSH2 0x2D63 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x308 PUSH2 0x4C4 CALLDATASIZE PUSH1 0x4 PUSH2 0x2D7E JUMP JUMPDEST PUSH2 0x1364 JUMP JUMPDEST PUSH2 0x31D PUSH2 0x4D7 CALLDATASIZE PUSH1 0x4 PUSH2 0x2D4A JUMP JUMPDEST PUSH2 0x14A8 JUMP JUMPDEST PUSH2 0x31D PUSH2 0x4EA CALLDATASIZE PUSH1 0x4 PUSH2 0x2D4A JUMP JUMPDEST PUSH2 0x14B8 JUMP JUMPDEST PUSH2 0x362 PUSH2 0x4FD CALLDATASIZE PUSH1 0x4 PUSH2 0x2D63 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x31D PUSH2 0x51D CALLDATASIZE PUSH1 0x4 PUSH2 0x2D4A JUMP JUMPDEST PUSH2 0x14C8 JUMP JUMPDEST PUSH2 0x3C1 PUSH2 0x530 CALLDATASIZE PUSH1 0x4 PUSH2 0x2D63 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x362 PUSH2 0x553 CALLDATASIZE PUSH1 0x4 PUSH2 0x2D63 JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x31D PUSH2 0x573 CALLDATASIZE PUSH1 0x4 PUSH2 0x2D4A JUMP JUMPDEST PUSH2 0x14D8 JUMP JUMPDEST PUSH2 0x362 PUSH1 0x21 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x362 PUSH2 0x58F CALLDATASIZE PUSH1 0x4 PUSH2 0x2D63 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x3C1 PUSH2 0x5AF CALLDATASIZE PUSH1 0x4 PUSH2 0x2D63 JUMP JUMPDEST PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x3C1 PUSH2 0x5D2 CALLDATASIZE PUSH1 0x4 PUSH2 0x2D63 JUMP JUMPDEST PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x31D PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x362 PUSH2 0x61C CALLDATASIZE PUSH1 0x4 PUSH2 0x2D63 JUMP JUMPDEST PUSH1 0x17 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x362 PUSH2 0x63C CALLDATASIZE PUSH1 0x4 PUSH2 0x2D63 JUMP JUMPDEST PUSH1 0x14 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x31D PUSH2 0x65C CALLDATASIZE PUSH1 0x4 PUSH2 0x2D4A JUMP JUMPDEST PUSH2 0x14E8 JUMP JUMPDEST PUSH2 0x362 PUSH2 0x66F CALLDATASIZE PUSH1 0x4 PUSH2 0x2DA8 JUMP JUMPDEST PUSH2 0x14F8 JUMP JUMPDEST PUSH2 0x362 PUSH2 0x682 CALLDATASIZE PUSH1 0x4 PUSH2 0x2D63 JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x362 PUSH2 0x6A2 CALLDATASIZE PUSH1 0x4 PUSH2 0x2D63 JUMP JUMPDEST PUSH1 0x1A PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x31D PUSH2 0x6C2 CALLDATASIZE PUSH1 0x4 PUSH2 0x2D4A JUMP JUMPDEST PUSH2 0x16FD JUMP JUMPDEST PUSH2 0x362 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x362 PUSH2 0x6FC CALLDATASIZE PUSH1 0x4 PUSH2 0x2D7E JUMP JUMPDEST PUSH2 0x170D JUMP JUMPDEST PUSH2 0x308 PUSH2 0x70F CALLDATASIZE PUSH1 0x4 PUSH2 0x2D1E JUMP JUMPDEST PUSH2 0x18F1 JUMP JUMPDEST PUSH2 0x3C1 PUSH2 0x722 CALLDATASIZE PUSH1 0x4 PUSH2 0x2D63 JUMP JUMPDEST PUSH1 0x16 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x3C1 PUSH2 0x745 CALLDATASIZE PUSH1 0x4 PUSH2 0x2DEC JUMP JUMPDEST PUSH2 0x1A2A JUMP JUMPDEST PUSH2 0x3C1 PUSH2 0x758 CALLDATASIZE PUSH1 0x4 PUSH2 0x2D63 JUMP JUMPDEST PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x3C1 PUSH2 0x77B CALLDATASIZE PUSH1 0x4 PUSH2 0x2D63 JUMP JUMPDEST PUSH1 0x19 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x362 PUSH2 0x79E CALLDATASIZE PUSH1 0x4 PUSH2 0x2D63 JUMP JUMPDEST PUSH1 0x1E PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x3C1 PUSH2 0x7BE CALLDATASIZE PUSH1 0x4 PUSH2 0x2E16 JUMP JUMPDEST PUSH2 0x1E94 JUMP JUMPDEST PUSH2 0x362 PUSH1 0x22 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x31D PUSH2 0x7DA CALLDATASIZE PUSH1 0x4 PUSH2 0x2D4A JUMP JUMPDEST PUSH2 0x276D JUMP JUMPDEST PUSH2 0x362 PUSH2 0x7ED CALLDATASIZE PUSH1 0x4 PUSH2 0x2D63 JUMP JUMPDEST PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x840 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x837 SWAP1 PUSH2 0x2E59 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x874 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x837 SWAP1 PUSH2 0x2E7F JUMP JUMPDEST PUSH1 0x0 PUSH2 0x880 DUP3 DUP5 PUSH2 0x170D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x79CC679 PUSH1 0xE4 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE SWAP1 SWAP2 POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x79CC6790 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x8EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x8FF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x21 SLOAD PUSH2 0x911 SWAP3 POP SWAP1 POP DUP3 PUSH2 0x277D JUMP JUMPDEST PUSH1 0x21 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3174 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x0 SWAP1 LOG2 PUSH2 0x941 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND CALLER DUP6 PUSH2 0x27BF JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP2 PUSH32 0xDF273CB619D95419A9CD0EC88123A0538C85064229BAA6363788F743FFF90DEB SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x12 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x99B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x9DF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x837 SWAP1 PUSH2 0x2EA5 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0xEA8258F2D9DDB679928CF34B78CF645B7FEDA9ACC828E4DD82D014EAAE270EBA SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xA7E JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x16 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xA79 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x837 SWAP1 PUSH2 0x2E7F JUMP JUMPDEST PUSH2 0xAAD JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xAAD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x837 SWAP1 PUSH2 0x2E7F JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAB9 DUP4 DUP4 PUSH2 0x170D JUMP JUMPDEST SWAP1 POP PUSH2 0xAC3 PUSH2 0xB82 JUMP JUMPDEST DUP2 GT ISZERO PUSH2 0xB0A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x496E73756666696369656E74207265736572766573 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x837 JUMP JUMPDEST PUSH1 0x21 SLOAD PUSH2 0xB17 SWAP1 DUP3 PUSH2 0x277D JUMP JUMPDEST PUSH1 0x21 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3174 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x0 SWAP1 LOG2 PUSH2 0xB47 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND CALLER DUP5 PUSH2 0x27BF JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x2BB2640731848FE9820BA48DBC978C1FC9BBD5F11B948BFAB05B7DEE3378FD80 DUP4 PUSH1 0x40 MLOAD PUSH2 0x97E SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC1E PUSH2 0xC15 PUSH1 0x22 SLOAD PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xBEB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC0F SWAP2 SWAP1 PUSH2 0x2EDA JUMP JUMPDEST SWAP1 PUSH2 0x277D JUMP JUMPDEST PUSH1 0x21 SLOAD SWAP1 PUSH2 0x277D JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x19 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xC52 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x837 SWAP1 PUSH2 0x2E7F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x79CC679 PUSH1 0xE4 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x79CC6790 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xCBA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xCCE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1B PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xCED SWAP3 POP SWAP1 POP DUP3 PUSH2 0x277D JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1B PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x22 SLOAD PUSH2 0xD0A SWAP1 DUP3 PUSH2 0x277D JUMP JUMPDEST PUSH1 0x22 SSTORE PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 CALLER SWAP2 PUSH32 0xC6D98EECFC9C78AB62C89A82950079B54874749F1F6F24090F7ACC758BC2F309 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x19 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xDA5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x837 SWAP1 PUSH2 0x2E7F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xDDD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x837 SWAP1 PUSH2 0x2E59 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDE9 DUP3 DUP5 PUSH2 0x170D JUMP JUMPDEST PUSH1 0x1F SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE37 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE5B SWAP2 SWAP1 PUSH2 0x2EDA JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1B PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP2 SWAP3 POP SWAP1 PUSH2 0xE7A SWAP1 DUP4 SWAP1 PUSH2 0x277D JUMP JUMPDEST SWAP1 POP DUP1 DUP4 GT ISZERO PUSH2 0xEC1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x115E18D959591CC81919589D081B1A5B5A5D PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x837 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1B PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xEDB SWAP1 DUP5 PUSH2 0x2827 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1B PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x22 SLOAD PUSH2 0xEF8 SWAP1 DUP5 PUSH2 0x2827 JUMP JUMPDEST PUSH1 0x22 SSTORE PUSH1 0x21 SLOAD PUSH2 0xF08 SWAP1 DUP5 PUSH2 0x277D JUMP JUMPDEST PUSH1 0x21 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3174 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x0 SWAP1 LOG2 PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xF71 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF95 SWAP2 SWAP1 PUSH2 0x2EF3 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP2 CALLER SWAP2 PUSH32 0x7E1A939BED137A819B5D2979822C67F877689F7A863D5E4CB57CDCA97B2977D6 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x100D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x837 SWAP1 PUSH2 0x2EA5 JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0x10F0 JUMPI PUSH2 0x10DC PUSH2 0x10D5 PUSH1 0x2 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x1034 JUMPI PUSH2 0x1034 PUSH2 0x2F15 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 DUP6 SWAP1 DUP2 LT PUSH2 0x1060 JUMPI PUSH2 0x1060 PUSH2 0x2F15 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x10B1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6FC SWAP2 SWAP1 PUSH2 0x2EDA JUMP JUMPDEST DUP4 SWAP1 PUSH2 0x2827 JUMP JUMPDEST SWAP2 POP DUP1 PUSH2 0x10E8 DUP2 PUSH2 0x2F41 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1011 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST PUSH1 0xB SLOAD DUP2 LT ISZERO PUSH2 0x1157 JUMPI PUSH2 0x1143 PUSH2 0x10D5 PUSH1 0xB DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x1117 JUMPI PUSH2 0x1117 PUSH2 0x2F15 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0xB DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 DUP6 SWAP1 DUP2 LT PUSH2 0x1060 JUMPI PUSH2 0x1060 PUSH2 0x2F15 JUMP JUMPDEST SWAP2 POP DUP1 PUSH2 0x114F DUP2 PUSH2 0x2F41 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x10F4 JUMP JUMPDEST POP PUSH1 0x21 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3174 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x0 SWAP1 LOG2 PUSH1 0x40 MLOAD DUP2 SWAP1 PUSH32 0xEC691F09F6924B27932253F85CAF99BACC30360CC0E50A1CC4D2ACC246014466 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x8 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x99B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x11DE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x837 SWAP1 PUSH2 0x2EA5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1243 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x837 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0xEA8258F2D9DDB679928CF34B78CF645B7FEDA9ACC828E4DD82D014EAAE270EBA SWAP2 LOG3 PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1303 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206D757374206265206E6577206F776E657220746F207075 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x1B1B PUSH1 0xF2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x837 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND SWAP4 SWAP1 SWAP2 AND SWAP2 PUSH32 0xAA151555690C956FC3EA32F106BB9F119B5237A061EAA8557CFF3E51E3792C8D SWAP2 LOG3 PUSH1 0x1 SLOAD PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1D PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x1393 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x837 SWAP1 PUSH2 0x2E7F JUMP JUMPDEST PUSH2 0x139B PUSH2 0xB82 JUMP JUMPDEST DUP2 GT ISZERO PUSH2 0x13E2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x496E73756666696369656E74207265736572766573 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x837 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x40C10F19 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP4 SWAP1 MSTORE PUSH32 0x0 AND SWAP1 PUSH4 0x40C10F19 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x144C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1460 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD DUP4 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP3 POP CALLER SWAP2 POP PUSH32 0xFA8CCAB40E7DA8146C2304CD0950334FD30A6BA093ABE86261AA13911FED849C SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x5 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x99B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x15 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x99B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x18 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x99B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xE DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x99B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1C DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x99B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 PUSH2 0x1537 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST PUSH2 0x1553 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x837 SWAP1 PUSH2 0x2E59 JUMP JUMPDEST PUSH2 0x1568 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND CALLER ADDRESS DUP8 PUSH2 0x2886 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x15BD JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x15B8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x837 SWAP1 PUSH2 0x2E7F JUMP JUMPDEST PUSH2 0x15EC JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x15EC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x837 SWAP1 PUSH2 0x2E7F JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15F8 DUP5 DUP7 PUSH2 0x170D JUMP JUMPDEST SWAP1 POP PUSH2 0x1604 DUP2 DUP5 PUSH2 0x277D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x40C10F19 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE SWAP1 SWAP3 POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x40C10F19 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x166F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1683 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x21 SLOAD PUSH2 0x1695 SWAP3 POP SWAP1 POP DUP3 PUSH2 0x2827 JUMP JUMPDEST PUSH1 0x21 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3174 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x0 SWAP1 LOG2 PUSH1 0x40 DUP1 MLOAD DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP2 PUSH32 0x90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x2 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x99B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1842 JUMPI PUSH2 0x183B DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x176F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1793 SWAP2 SWAP1 PUSH2 0x2F5C JUMP JUMPDEST PUSH2 0x179E SWAP1 PUSH1 0xA PUSH2 0x3063 JUMP JUMPDEST PUSH2 0x1835 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x17FF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1823 SWAP2 SWAP1 PUSH2 0x2F5C JUMP JUMPDEST PUSH2 0x182E SWAP1 PUSH1 0xA PUSH2 0x3063 JUMP JUMPDEST DUP6 SWAP1 PUSH2 0x28C4 JUMP JUMPDEST SWAP1 PUSH2 0x2943 JUMP JUMPDEST SWAP1 POP PUSH2 0x18EB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x18EB JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SLOAD SWAP1 MLOAD PUSH4 0x4249719F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x24 DUP3 ADD DUP6 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0x4249719F SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x18C4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x18E8 SWAP2 SWAP1 PUSH2 0x2EDA JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x19 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x1920 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x837 SWAP1 PUSH2 0x2E7F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x1958 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x837 SWAP1 PUSH2 0x2E59 JUMP JUMPDEST PUSH2 0x196D PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND CALLER ADDRESS DUP6 PUSH2 0x2886 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1979 DUP3 DUP5 PUSH2 0x170D JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1B PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH2 0x1996 SWAP1 DUP3 PUSH2 0x277D JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1B PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x22 SLOAD PUSH2 0x19B3 SWAP1 DUP3 PUSH2 0x277D JUMP JUMPDEST PUSH1 0x22 SSTORE PUSH1 0x21 SLOAD PUSH2 0x19C3 SWAP1 DUP3 PUSH2 0x2827 JUMP JUMPDEST PUSH1 0x21 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3174 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x0 SWAP1 LOG2 PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP2 CALLER SWAP2 PUSH32 0xC6D98EECFC9C78AB62C89A82950079B54874749F1F6F24090F7ACC758BC2F309 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1A55 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x837 SWAP1 PUSH2 0x2EA5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1A68 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP4 PUSH1 0x9 DUP2 GT ISZERO PUSH2 0x1A7C JUMPI PUSH2 0x1A7C PUSH2 0x3072 JUMP JUMPDEST EQ ISZERO PUSH2 0x1ACA JUMPI PUSH2 0x1AAC NUMBER PUSH32 0x0 PUSH2 0x2827 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH2 0x1E3D JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x9 DUP2 GT ISZERO PUSH2 0x1ADE JUMPI PUSH2 0x1ADE PUSH2 0x3072 JUMP JUMPDEST EQ ISZERO PUSH2 0x1B2C JUMPI PUSH2 0x1B0E NUMBER PUSH32 0x0 PUSH2 0x2827 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH2 0x1E3D JUMP JUMPDEST PUSH1 0x2 DUP4 PUSH1 0x9 DUP2 GT ISZERO PUSH2 0x1B40 JUMPI PUSH2 0x1B40 PUSH2 0x3072 JUMP JUMPDEST EQ ISZERO PUSH2 0x1B8E JUMPI PUSH2 0x1B70 NUMBER PUSH32 0x0 PUSH2 0x2827 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH2 0x1E3D JUMP JUMPDEST PUSH1 0x3 DUP4 PUSH1 0x9 DUP2 GT ISZERO PUSH2 0x1BA2 JUMPI PUSH2 0x1BA2 PUSH2 0x3072 JUMP JUMPDEST EQ ISZERO PUSH2 0x1BFB JUMPI PUSH2 0x1BDD PUSH2 0x1BD6 PUSH32 0x0 PUSH1 0x2 PUSH2 0x28C4 JUMP JUMPDEST NUMBER SWAP1 PUSH2 0x2827 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x14 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH2 0x1E3D JUMP JUMPDEST PUSH1 0x4 DUP4 PUSH1 0x9 DUP2 GT ISZERO PUSH2 0x1C0F JUMPI PUSH2 0x1C0F PUSH2 0x3072 JUMP JUMPDEST EQ ISZERO PUSH2 0x1C5D JUMPI PUSH2 0x1C3F NUMBER PUSH32 0x0 PUSH2 0x2827 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH2 0x1E3D JUMP JUMPDEST PUSH1 0x5 DUP4 PUSH1 0x9 DUP2 GT ISZERO PUSH2 0x1C71 JUMPI PUSH2 0x1C71 PUSH2 0x3072 JUMP JUMPDEST EQ ISZERO PUSH2 0x1CBF JUMPI PUSH2 0x1CA1 NUMBER PUSH32 0x0 PUSH2 0x2827 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH2 0x1E3D JUMP JUMPDEST PUSH1 0x6 DUP4 PUSH1 0x9 DUP2 GT ISZERO PUSH2 0x1CD3 JUMPI PUSH2 0x1CD3 PUSH2 0x3072 JUMP JUMPDEST EQ ISZERO PUSH2 0x1D25 JUMPI PUSH2 0x1D07 PUSH2 0x1BD6 PUSH32 0x0 PUSH1 0x2 PUSH2 0x28C4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x17 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH2 0x1E3D JUMP JUMPDEST PUSH1 0x7 DUP4 PUSH1 0x9 DUP2 GT ISZERO PUSH2 0x1D39 JUMPI PUSH2 0x1D39 PUSH2 0x3072 JUMP JUMPDEST EQ ISZERO PUSH2 0x1D87 JUMPI PUSH2 0x1D69 NUMBER PUSH32 0x0 PUSH2 0x2827 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1A PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH2 0x1E3D JUMP JUMPDEST PUSH1 0x8 DUP4 PUSH1 0x9 DUP2 GT ISZERO PUSH2 0x1D9B JUMPI PUSH2 0x1D9B PUSH2 0x3072 JUMP JUMPDEST EQ ISZERO PUSH2 0x1DE9 JUMPI PUSH2 0x1DCB NUMBER PUSH32 0x0 PUSH2 0x2827 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1E PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH2 0x1E3D JUMP JUMPDEST PUSH1 0x9 DUP4 PUSH1 0x9 DUP2 GT ISZERO PUSH2 0x1DFD JUMPI PUSH2 0x1DFD PUSH2 0x3072 JUMP JUMPDEST EQ ISZERO PUSH2 0x1E35 JUMPI PUSH2 0x1E2D NUMBER PUSH32 0x0 PUSH2 0x2827 JUMP JUMPDEST PUSH1 0x20 SSTORE PUSH2 0x1E3D JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x18EB JUMP JUMPDEST DUP3 PUSH1 0x9 DUP2 GT ISZERO PUSH2 0x1E4F JUMPI PUSH2 0x1E4F PUSH2 0x3072 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP2 MSTORE PUSH32 0xE4F2C4B5BC209D509BC3D49348C787FEFADC66A79351B470599AC0F5BE52EAF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1EBF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x837 SWAP1 PUSH2 0x2EA5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1ED2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH1 0x9 DUP2 GT ISZERO PUSH2 0x1EE7 JUMPI PUSH2 0x1EE7 PUSH2 0x3072 JUMP JUMPDEST EQ ISZERO PUSH2 0x1FA3 JUMPI PUSH2 0x1EFA PUSH1 0x7 PUSH1 0x6 DUP7 PUSH2 0x2985 JUMP JUMPDEST ISZERO PUSH2 0x1F73 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE PUSH2 0x1F23 PUSH1 0x5 DUP6 PUSH2 0x2A65 JUMP JUMPDEST PUSH2 0x1F73 JUMPI PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB0 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND OR SWAP1 SSTORE JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF DUP2 AND ISZERO PUSH1 0xFF NOT SWAP1 SWAP2 AND DUP2 OR SWAP1 SWAP2 SSTORE PUSH2 0x270B JUMP JUMPDEST PUSH1 0x1 DUP6 PUSH1 0x9 DUP2 GT ISZERO PUSH2 0x1FB7 JUMPI PUSH2 0x1FB7 PUSH2 0x3072 JUMP JUMPDEST EQ ISZERO PUSH2 0x2073 JUMPI PUSH2 0x1FCA PUSH1 0xA PUSH1 0x9 DUP7 PUSH2 0x2985 JUMP JUMPDEST ISZERO PUSH2 0x2043 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE PUSH2 0x1FF3 PUSH1 0x8 DUP6 PUSH2 0x2A65 JUMP JUMPDEST PUSH2 0x2043 JUMPI PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xF3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND OR SWAP1 SSTORE JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF DUP2 AND ISZERO PUSH1 0xFF NOT SWAP1 SWAP2 AND DUP2 OR SWAP1 SWAP2 SSTORE PUSH2 0x270B JUMP JUMPDEST PUSH1 0x2 DUP6 PUSH1 0x9 DUP2 GT ISZERO PUSH2 0x2087 JUMPI PUSH2 0x2087 PUSH2 0x3072 JUMP JUMPDEST EQ ISZERO PUSH2 0x2143 JUMPI PUSH2 0x209A PUSH1 0x4 PUSH1 0x3 DUP7 PUSH2 0x2985 JUMP JUMPDEST ISZERO PUSH2 0x2113 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE PUSH2 0x20C3 PUSH1 0x2 DUP6 PUSH2 0x2A65 JUMP JUMPDEST PUSH2 0x2113 JUMPI PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5ACE ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND OR SWAP1 SSTORE JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF DUP2 AND ISZERO PUSH1 0xFF NOT SWAP1 SWAP2 AND DUP2 OR SWAP1 SWAP2 SSTORE PUSH2 0x270B JUMP JUMPDEST PUSH1 0x3 DUP6 PUSH1 0x9 DUP2 GT ISZERO PUSH2 0x2157 JUMPI PUSH2 0x2157 PUSH2 0x3072 JUMP JUMPDEST EQ ISZERO PUSH2 0x2250 JUMPI PUSH2 0x216A PUSH1 0x14 PUSH1 0x13 DUP7 PUSH2 0x2985 JUMP JUMPDEST ISZERO PUSH2 0x2220 JUMPI PUSH1 0x12 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH32 0xBB8A6A4669BA250D26CD7A459ECA9D215F8307E33AEBE50379BC5A3617EC3444 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x14 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE PUSH2 0x21D0 SWAP1 DUP6 PUSH2 0x2A65 JUMP JUMPDEST PUSH2 0x2220 JUMPI PUSH1 0x12 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xBB8A6A4669BA250D26CD7A459ECA9D215F8307E33AEBE50379BC5A3617EC3444 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND OR SWAP1 SSTORE JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF DUP2 AND ISZERO PUSH1 0xFF NOT SWAP1 SWAP2 AND DUP2 OR SWAP1 SWAP2 SSTORE PUSH2 0x270B JUMP JUMPDEST PUSH1 0x4 DUP6 PUSH1 0x9 DUP2 GT ISZERO PUSH2 0x2264 JUMPI PUSH2 0x2264 PUSH2 0x3072 JUMP JUMPDEST EQ ISZERO PUSH2 0x235D JUMPI PUSH2 0x2277 PUSH1 0x10 PUSH1 0xF DUP7 PUSH2 0x2985 JUMP JUMPDEST ISZERO PUSH2 0x232D JUMPI PUSH1 0xE DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH32 0xBB7B4A454DC3493923482F07822329ED19E8244EFF582CC204F8554C3620C3FD ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE PUSH2 0x22DD SWAP1 DUP6 PUSH2 0x2A65 JUMP JUMPDEST PUSH2 0x232D JUMPI PUSH1 0xE DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xBB7B4A454DC3493923482F07822329ED19E8244EFF582CC204F8554C3620C3FD ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND OR SWAP1 SSTORE JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF DUP2 AND ISZERO PUSH1 0xFF NOT SWAP1 SWAP2 AND DUP2 OR SWAP1 SWAP2 SSTORE PUSH2 0x270B JUMP JUMPDEST PUSH1 0x5 DUP6 PUSH1 0x9 DUP2 GT ISZERO PUSH2 0x2371 JUMPI PUSH2 0x2371 PUSH2 0x3072 JUMP JUMPDEST EQ ISZERO PUSH2 0x244F JUMPI PUSH2 0x2384 PUSH1 0xD PUSH1 0xC DUP7 PUSH2 0x2985 JUMP JUMPDEST ISZERO PUSH2 0x23FD JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE PUSH2 0x23AD PUSH1 0xB DUP6 PUSH2 0x2A65 JUMP JUMPDEST PUSH2 0x23FD JUMPI PUSH1 0xB DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x175B7A638427703F0DBE7BB9BBF987A2551717B34E79F33B5B1008D1FA01DB9 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND OR SWAP1 SSTORE JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF DUP2 AND ISZERO PUSH1 0xFF NOT SWAP1 SWAP2 AND DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x11 SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP3 DUP6 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH2 0x270B JUMP JUMPDEST PUSH1 0x6 DUP6 PUSH1 0x9 DUP2 GT ISZERO PUSH2 0x2463 JUMPI PUSH2 0x2463 PUSH2 0x3072 JUMP JUMPDEST EQ ISZERO PUSH2 0x251F JUMPI PUSH2 0x2476 PUSH1 0x17 PUSH1 0x16 DUP7 PUSH2 0x2985 JUMP JUMPDEST ISZERO PUSH2 0x24EF JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x17 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE PUSH2 0x249F PUSH1 0x15 DUP6 PUSH2 0x2A65 JUMP JUMPDEST PUSH2 0x24EF JUMPI PUSH1 0x15 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x55F448FDEA98C4D29EB340757EF0A66CD03DBB9538908A6A81D96026B71EC475 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND OR SWAP1 SSTORE JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x16 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF DUP2 AND ISZERO PUSH1 0xFF NOT SWAP1 SWAP2 AND DUP2 OR SWAP1 SWAP2 SSTORE PUSH2 0x270B JUMP JUMPDEST PUSH1 0x7 DUP6 PUSH1 0x9 DUP2 GT ISZERO PUSH2 0x2533 JUMPI PUSH2 0x2533 PUSH2 0x3072 JUMP JUMPDEST EQ ISZERO PUSH2 0x25EF JUMPI PUSH2 0x2546 PUSH1 0x1A PUSH1 0x19 DUP7 PUSH2 0x2985 JUMP JUMPDEST ISZERO PUSH2 0x25BF JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1A PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE PUSH2 0x256F PUSH1 0x18 DUP6 PUSH2 0x2A65 JUMP JUMPDEST PUSH2 0x25BF JUMPI PUSH1 0x18 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xB13D2D76D1F4B7BE834882E410B3E3A8AFAF69F83600AE24DB354391D2378D2E ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND OR SWAP1 SSTORE JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x19 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF DUP2 AND ISZERO PUSH1 0xFF NOT SWAP1 SWAP2 AND DUP2 OR SWAP1 SWAP2 SSTORE PUSH2 0x270B JUMP JUMPDEST PUSH1 0x8 DUP6 PUSH1 0x9 DUP2 GT ISZERO PUSH2 0x2603 JUMPI PUSH2 0x2603 PUSH2 0x3072 JUMP JUMPDEST EQ ISZERO PUSH2 0x26BF JUMPI PUSH2 0x2616 PUSH1 0x1E PUSH1 0x1D DUP7 PUSH2 0x2985 JUMP JUMPDEST ISZERO PUSH2 0x268F JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1E PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE PUSH2 0x263F PUSH1 0x1C DUP6 PUSH2 0x2A65 JUMP JUMPDEST PUSH2 0x268F JUMPI PUSH1 0x1C DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xE4562A10381DEC21B205ED72637E6B1B523BDD0E4D4D50AF5CD23DD4500A211 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND OR SWAP1 SSTORE JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1D PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF DUP2 AND ISZERO PUSH1 0xFF NOT SWAP1 SWAP2 AND DUP2 OR SWAP1 SWAP2 SSTORE PUSH2 0x270B JUMP JUMPDEST PUSH1 0x9 DUP6 PUSH1 0x9 DUP2 GT ISZERO PUSH2 0x26D3 JUMPI PUSH2 0x26D3 PUSH2 0x3072 JUMP JUMPDEST EQ ISZERO PUSH2 0x2701 JUMPI POP PUSH1 0x0 PUSH1 0x20 SSTORE PUSH1 0x1F DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND OR SWAP1 SSTORE PUSH1 0x1 PUSH2 0x270B JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP PUSH2 0x2766 JUMP JUMPDEST DUP5 PUSH1 0x9 DUP2 GT ISZERO PUSH2 0x271D JUMPI PUSH2 0x271D PUSH2 0x3072 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP2 MSTORE DUP4 ISZERO ISZERO PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0xDCACB7E392F3D6A216ED2660E3DCFD40B7793D33591DB2BA185A6B8E44FC477 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0xB DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x99B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x18E8 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x2AC5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x2822 SWAP1 DUP5 SWAP1 PUSH4 0xA9059CBB PUSH1 0xE0 SHL SWAP1 PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE PUSH2 0x2AFF JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2834 DUP4 DUP6 PUSH2 0x3088 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x18E8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x837 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x24 DUP4 ADD MSTORE DUP4 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x28BE SWAP1 DUP6 SWAP1 PUSH4 0x23B872DD PUSH1 0xE0 SHL SWAP1 PUSH1 0x84 ADD PUSH2 0x27EB JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x28D3 JUMPI POP PUSH1 0x0 PUSH2 0x18EB JUMP JUMPDEST PUSH1 0x0 PUSH2 0x28DF DUP4 DUP6 PUSH2 0x30A0 JUMP JUMPDEST SWAP1 POP DUP3 PUSH2 0x28EC DUP6 DUP4 PUSH2 0x30BF JUMP JUMPDEST EQ PUSH2 0x18E8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206D756C7469706C69636174696F6E206F766572666C6F PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x77 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x837 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18E8 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH2 0x2BD1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP4 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x2A5B JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP6 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x29F7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x4D757374207175657565 PUSH1 0xB0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x837 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP6 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD NUMBER LT ISZERO PUSH2 0x2A53 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x145D595D59481B9BDD08195E1C1A5C9959 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x837 JUMP JUMPDEST POP PUSH1 0x1 PUSH2 0x2766 JUMP JUMPDEST POP PUSH1 0x0 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST DUP4 SLOAD DUP2 LT ISZERO PUSH2 0x2A5B JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x2A8E JUMPI PUSH2 0x2A8E PUSH2 0x2F15 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x2AB3 JUMPI PUSH1 0x1 SWAP2 POP POP PUSH2 0x18EB JUMP JUMPDEST DUP1 PUSH2 0x2ABD DUP2 PUSH2 0x2F41 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2A69 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0x2AE9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x837 SWAP2 SWAP1 PUSH2 0x310D JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x2AF6 DUP5 DUP7 PUSH2 0x3140 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B54 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2BFF SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x2822 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x2B72 SWAP2 SWAP1 PUSH2 0x2EF3 JUMP JUMPDEST PUSH2 0x2822 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x837 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x2BF2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x837 SWAP2 SWAP1 PUSH2 0x310D JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x2AF6 DUP5 DUP7 PUSH2 0x30BF JUMP JUMPDEST PUSH1 0x60 PUSH2 0x2C0E DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x2C16 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP5 EXTCODESIZE PUSH2 0x2C66 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x837 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x2C82 SWAP2 SWAP1 PUSH2 0x3157 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2CBF JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2CC4 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 ISZERO PUSH2 0x2CD8 JUMPI SWAP2 POP PUSH2 0x2C0E SWAP1 POP JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x2CE8 JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST DUP4 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x837 SWAP2 SWAP1 PUSH2 0x310D JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2D19 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2D31 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x2D41 PUSH1 0x20 DUP5 ADD PUSH2 0x2D02 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2D5C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2D75 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x18E8 DUP3 PUSH2 0x2D02 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2D91 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2D9A DUP4 PUSH2 0x2D02 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2DBD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH2 0x2DCD PUSH1 0x20 DUP6 ADD PUSH2 0x2D02 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0xA DUP2 LT PUSH2 0x2D19 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2DFF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2E08 DUP4 PUSH2 0x2DDD JUMP JUMPDEST SWAP2 POP PUSH2 0x2D41 PUSH1 0x20 DUP5 ADD PUSH2 0x2D02 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2E2B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2E34 DUP5 PUSH2 0x2DDD JUMP JUMPDEST SWAP3 POP PUSH2 0x2E42 PUSH1 0x20 DUP6 ADD PUSH2 0x2D02 JUMP JUMPDEST SWAP2 POP PUSH2 0x2E50 PUSH1 0x40 DUP6 ADD PUSH2 0x2D02 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xC SWAP1 DUP3 ADD MSTORE PUSH12 0x139BDD081858D8D95C1D1959 PUSH1 0xA2 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xC SWAP1 DUP3 ADD MSTORE PUSH12 0x139BDD08185C1C1C9BDD9959 PUSH1 0xA2 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2EEC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2F05 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x18E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x2F55 JUMPI PUSH2 0x2F55 PUSH2 0x2F2B JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2F6E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x18E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0x2FBA JUMPI DUP2 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x2FA0 JUMPI PUSH2 0x2FA0 PUSH2 0x2F2B JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0x2FAD JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0x2F84 JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x2FD1 JUMPI POP PUSH1 0x1 PUSH2 0x18EB JUMP JUMPDEST DUP2 PUSH2 0x2FDE JUMPI POP PUSH1 0x0 PUSH2 0x18EB JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x2FF4 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x2FFE JUMPI PUSH2 0x301A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x18EB JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x300F JUMPI PUSH2 0x300F PUSH2 0x2F2B JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x18EB JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x303D JUMPI POP DUP2 DUP2 EXP PUSH2 0x18EB JUMP JUMPDEST PUSH2 0x3047 DUP4 DUP4 PUSH2 0x2F7F JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x305B JUMPI PUSH2 0x305B PUSH2 0x2F2B JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18E8 PUSH1 0xFF DUP5 AND DUP4 PUSH2 0x2FC2 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x309B JUMPI PUSH2 0x309B PUSH2 0x2F2B JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x30BA JUMPI PUSH2 0x30BA PUSH2 0x2F2B JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x30DC JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x30FC JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x30E4 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x28BE JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x312C DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x30E1 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x3152 JUMPI PUSH2 0x3152 PUSH2 0x2F2B JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x3169 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x30E1 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP INVALID SWAP4 0xBB DUP15 0xDD CALLDATALOAD SWAP9 SELFBALANCE MOD 0xEE 0xE1 0xB9 0x25 COINBASE 0x28 0x1F PUSH32 0x62D33C01C5B2EC0929A113603BD21D66A2646970667358221220573B48EAC618 DUP5 0xA9 CREATE 0x49 0x27 INVALID PUSH29 0x713AD6AC7427EE097F20FE3395B65C2570C2B264736F6C634300080A00 CALLER ",
              "sourceMap": "6320:17528:0:-:0;;;9920:448;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3474:6;:19;;-1:-1:-1;;;;;;3474:19:0;3483:10;3474:19;;;;;3504:35;;3483:10;;3474:6;3504:35;;3474:6;;3504:35;-1:-1:-1;;;;;10063:18:0;;10055:27;;;;;;-1:-1:-1;;;;;10088:10:0;;;;;10105:20;;;;;;;:14;:20;;;;;;:27;;10128:4;-1:-1:-1;;10105:27:0;;;;;;;;10138:13;:24;;;;;;;;;;;;;-1:-1:-1;;;;;;10138:24:0;;;;;;;;10169:21;;;;;;;;;;:28;;;;;;;;;10203:25;;;;;;;;;;;;;;;;;;;;;;;;;;10319:44;;6320:17528;;14:177:1;93:13;;-1:-1:-1;;;;;135:31:1;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:440::-;293:6;301;309;317;370:3;358:9;349:7;345:23;341:33;338:53;;;387:1;384;377:12;338:53;410:40;440:9;410:40;:::i;:::-;400:50;;469:49;514:2;503:9;499:18;469:49;:::i;:::-;459:59;;537:49;582:2;571:9;567:18;537:49;:::i;:::-;626:2;611:18;;;;605:25;196:440;;;;-1:-1:-1;;;196:440:1:o;:::-;6320:17528:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "@LiquidityDepositorQueue_749": {
                  "entryPoint": null,
                  "id": 749,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@LiquidityManagerQueue_775": {
                  "entryPoint": null,
                  "id": 775,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@LiquidityTokenQueue_738": {
                  "entryPoint": null,
                  "id": 738,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@OHM_692": {
                  "entryPoint": null,
                  "id": 692,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@ReserveManagerQueue_764": {
                  "entryPoint": null,
                  "id": 764,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@_callOptionalReturn_564": {
                  "entryPoint": 11007,
                  "id": 564,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "@_functionCallWithValue_232": {
                  "entryPoint": 11286,
                  "id": 232,
                  "parameterSlots": 4,
                  "returnSlots": 1
                },
                "@add_26": {
                  "entryPoint": 10279,
                  "id": 26,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "@auditReserves_1500": {
                  "entryPoint": 4067,
                  "id": 1500,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@blocksNeededForQueue_694": {
                  "entryPoint": null,
                  "id": 694,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@bondCalculator_753": {
                  "entryPoint": null,
                  "id": 753,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@debtorBalance_790": {
                  "entryPoint": null,
                  "id": 790,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@debtorQueue_786": {
                  "entryPoint": null,
                  "id": 786,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@debtors_778": {
                  "entryPoint": 5320,
                  "id": 778,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@deposit_965": {
                  "entryPoint": 5368,
                  "id": 965,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "@div_119": {
                  "entryPoint": 10563,
                  "id": 119,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "@div_146": {
                  "entryPoint": 11217,
                  "id": 146,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "@excessReserves_1408": {
                  "entryPoint": 2946,
                  "id": 1408,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@functionCall_182": {
                  "entryPoint": 11263,
                  "id": 182,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "@incurDebt_1139": {
                  "entryPoint": 3446,
                  "id": 1139,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "@isContract_163": {
                  "entryPoint": null,
                  "id": 163,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "@isDebtor_782": {
                  "entryPoint": null,
                  "id": 782,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@isLiquidityDepositor_745": {
                  "entryPoint": null,
                  "id": 745,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@isLiquidityManager_771": {
                  "entryPoint": null,
                  "id": 771,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@isLiquidityToken_734": {
                  "entryPoint": null,
                  "id": 734,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@isReserveDepositor_712": {
                  "entryPoint": null,
                  "id": 712,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@isReserveManager_760": {
                  "entryPoint": null,
                  "id": 760,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@isReserveSpender_723": {
                  "entryPoint": null,
                  "id": 723,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@isReserveToken_701": {
                  "entryPoint": null,
                  "id": 701,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@isRewardManager_797": {
                  "entryPoint": null,
                  "id": 797,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@liquidityDepositors_741": {
                  "entryPoint": 5336,
                  "id": 741,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@liquidityManagers_767": {
                  "entryPoint": 5304,
                  "id": 767,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@liquidityTokens_730": {
                  "entryPoint": 10093,
                  "id": 730,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@listContains_2312": {
                  "entryPoint": 10853,
                  "id": 2312,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "@manage_1349": {
                  "entryPoint": 2601,
                  "id": 1349,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "@manager_324": {
                  "entryPoint": null,
                  "id": 324,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@mintRewards_1389": {
                  "entryPoint": 4964,
                  "id": 1389,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "@mul_103": {
                  "entryPoint": 10436,
                  "id": 103,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "@pullManagement_408": {
                  "entryPoint": 4766,
                  "id": 408,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@pushManagement_386": {
                  "entryPoint": 4532,
                  "id": 386,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@queue_1751": {
                  "entryPoint": 6698,
                  "id": 1751,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "@renounceManagement_358": {
                  "entryPoint": 2485,
                  "id": 358,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@repayDebtWithOHM_1274": {
                  "entryPoint": 3107,
                  "id": 1274,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@repayDebtWithReserve_1222": {
                  "entryPoint": 6385,
                  "id": 1222,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "@requirements_2276": {
                  "entryPoint": 10629,
                  "id": 2276,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "@reserveDepositorQueue_716": {
                  "entryPoint": null,
                  "id": 716,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@reserveDepositors_708": {
                  "entryPoint": 5288,
                  "id": 708,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@reserveManagers_756": {
                  "entryPoint": 2443,
                  "id": 756,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@reserveSpenderQueue_727": {
                  "entryPoint": null,
                  "id": 727,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@reserveSpenders_719": {
                  "entryPoint": 4516,
                  "id": 719,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@reserveTokenQueue_705": {
                  "entryPoint": null,
                  "id": 705,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@reserveTokens_697": {
                  "entryPoint": 5885,
                  "id": 697,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@rewardManagerQueue_801": {
                  "entryPoint": null,
                  "id": 801,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@rewardManagers_793": {
                  "entryPoint": 5352,
                  "id": 793,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@sOHMQueue_805": {
                  "entryPoint": null,
                  "id": 805,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@sOHM_803": {
                  "entryPoint": null,
                  "id": 803,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@safeTransferFrom_527": {
                  "entryPoint": 10374,
                  "id": 527,
                  "parameterSlots": 4,
                  "returnSlots": 0
                },
                "@safeTransfer_501": {
                  "entryPoint": 10175,
                  "id": 501,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "@sub_42": {
                  "entryPoint": 10109,
                  "id": 42,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "@sub_69": {
                  "entryPoint": 10949,
                  "id": 69,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "@toggle_2230": {
                  "entryPoint": 7828,
                  "id": 2230,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "@totalDebt_809": {
                  "entryPoint": null,
                  "id": 809,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@totalReserves_807": {
                  "entryPoint": null,
                  "id": 807,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@valueOfToken_1555": {
                  "entryPoint": 5901,
                  "id": 1555,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "@withdraw_1033": {
                  "entryPoint": 2047,
                  "id": 1033,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_decode_address": {
                  "entryPoint": 11522,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_decode_enum_MANAGING": {
                  "entryPoint": 11741,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_address": {
                  "entryPoint": 11619,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_addresst_uint256": {
                  "entryPoint": 11646,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 2
                },
                "abi_decode_tuple_t_bool_fromMemory": {
                  "entryPoint": 12019,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_enum$_MANAGING_$690t_address": {
                  "entryPoint": 11756,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 2
                },
                "abi_decode_tuple_t_enum$_MANAGING_$690t_addresst_address": {
                  "entryPoint": 11798,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 3
                },
                "abi_decode_tuple_t_uint256": {
                  "entryPoint": 11594,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_uint256_fromMemory": {
                  "entryPoint": 11994,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_uint256t_address": {
                  "entryPoint": 11550,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 2
                },
                "abi_decode_tuple_t_uint256t_addresst_uint256": {
                  "entryPoint": 11688,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 3
                },
                "abi_decode_tuple_t_uint8_fromMemory": {
                  "entryPoint": 12124,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
                  "entryPoint": 12631,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 4,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_address_t_bool__to_t_address_t_bool__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": 12557,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_20f81a12537dab2de6f63614f9df91e785d8b2db704bbdcc64e781adf7c0e2ff__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_4de71fbd3469e1b7fc89a70805ae86972c680281e629f271ab7471fd6321445c__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_6f055697f05542780f050f02e169b628baaede4365bd8f2e41b10829d224c674__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_70356c467a9713064077b7fa0ff1a074c93b1f7c48415be181b9cd799b628361__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": 11903,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": 11941,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_aba60747e6633e488f9f393b8420ade3a0b44f9def8d4a3769b0b8220bd2a250__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_f193cc9709e57cd43c6930e1643edb6922168fe48dacb7425cd34c9438ee5b15__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_fadc5f22060668047a4e911336f5d0734fc86647a30251cd7b6b0511b7c2b797__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": 11865,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "checked_add_t_uint256": {
                  "entryPoint": 12424,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_div_t_uint256": {
                  "entryPoint": 12479,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_exp_helper": {
                  "entryPoint": 12159,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 2
                },
                "checked_exp_t_uint256_t_uint8": {
                  "entryPoint": 12387,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_exp_unsigned": {
                  "entryPoint": 12226,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_mul_t_uint256": {
                  "entryPoint": 12448,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_sub_t_uint256": {
                  "entryPoint": 12608,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "copy_memory_to_memory": {
                  "entryPoint": 12513,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "increment_t_uint256": {
                  "entryPoint": 12097,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "panic_error_0x11": {
                  "entryPoint": 12075,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "panic_error_0x21": {
                  "entryPoint": 12402,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "panic_error_0x32": {
                  "entryPoint": 12053,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                }
              },
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:13006:1",
                    "statements": [
                      {
                        "nodeType": "YulBlock",
                        "src": "6:3:1",
                        "statements": []
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "63:124:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "73:29:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "95:6:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "82:12:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "82:20:1"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "73:5:1"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "165:16:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "174:1:1",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "177:1:1",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "167:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "167:12:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "167:12:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "124:5:1"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "135:5:1"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "150:3:1",
                                                    "type": "",
                                                    "value": "160"
                                                  },
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "155:1:1",
                                                    "type": "",
                                                    "value": "1"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "shl",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "146:3:1"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "146:11:1"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "159:1:1",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "sub",
                                              "nodeType": "YulIdentifier",
                                              "src": "142:3:1"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "142:19:1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "131:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "131:31:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "121:2:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "121:42:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "114:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "114:50:1"
                              },
                              "nodeType": "YulIf",
                              "src": "111:70:1"
                            }
                          ]
                        },
                        "name": "abi_decode_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "42:6:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "53:5:1",
                            "type": ""
                          }
                        ],
                        "src": "14:173:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "279:167:1",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "325:16:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "334:1:1",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "337:1:1",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "327:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "327:12:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "327:12:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "300:7:1"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "309:9:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "296:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "296:23:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "321:2:1",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "292:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "292:32:1"
                              },
                              "nodeType": "YulIf",
                              "src": "289:52:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "350:33:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "373:9:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "360:12:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "360:23:1"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "350:6:1"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "392:48:1",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "425:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "436:2:1",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "421:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "421:18:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "402:18:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "402:38:1"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "392:6:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_uint256t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "237:9:1",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "248:7:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "260:6:1",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "268:6:1",
                            "type": ""
                          }
                        ],
                        "src": "192:254:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "521:110:1",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "567:16:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "576:1:1",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "579:1:1",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "569:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "569:12:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "569:12:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "542:7:1"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "551:9:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "538:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "538:23:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "563:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "534:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "534:32:1"
                              },
                              "nodeType": "YulIf",
                              "src": "531:52:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "592:33:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "615:9:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "602:12:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "602:23:1"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "592:6:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "487:9:1",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "498:7:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "510:6:1",
                            "type": ""
                          }
                        ],
                        "src": "451:180:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "737:102:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "747:26:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "759:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "770:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "755:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "755:18:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "747:4:1"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "789:9:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "804:6:1"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "820:3:1",
                                                "type": "",
                                                "value": "160"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "825:1:1",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shl",
                                              "nodeType": "YulIdentifier",
                                              "src": "816:3:1"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "816:11:1"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "829:1:1",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nodeType": "YulIdentifier",
                                          "src": "812:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "812:19:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "800:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "800:32:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "782:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "782:51:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "782:51:1"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "706:9:1",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "717:6:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "728:4:1",
                            "type": ""
                          }
                        ],
                        "src": "636:203:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "914:116:1",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "960:16:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "969:1:1",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "972:1:1",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "962:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "962:12:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "962:12:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "935:7:1"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "944:9:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "931:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "931:23:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "956:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "927:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "927:32:1"
                              },
                              "nodeType": "YulIf",
                              "src": "924:52:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "985:39:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1014:9:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "995:18:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "995:29:1"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "985:6:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "880:9:1",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "891:7:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "903:6:1",
                            "type": ""
                          }
                        ],
                        "src": "844:186:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1136:76:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "1146:26:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1158:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1169:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1154:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1154:18:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "1146:4:1"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1188:9:1"
                                  },
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "1199:6:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1181:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1181:25:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1181:25:1"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1105:9:1",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "1116:6:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "1127:4:1",
                            "type": ""
                          }
                        ],
                        "src": "1035:177:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1304:167:1",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1350:16:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1359:1:1",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1362:1:1",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1352:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1352:12:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1352:12:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1325:7:1"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1334:9:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "1321:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1321:23:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1346:2:1",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1317:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1317:32:1"
                              },
                              "nodeType": "YulIf",
                              "src": "1314:52:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1375:39:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1404:9:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "1385:18:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1385:29:1"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "1375:6:1"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1423:42:1",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1450:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1461:2:1",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1446:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1446:18:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1433:12:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1433:32:1"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "1423:6:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_addresst_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1262:9:1",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "1273:7:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "1285:6:1",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "1293:6:1",
                            "type": ""
                          }
                        ],
                        "src": "1217:254:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1571:92:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "1581:26:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1593:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1604:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1589:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1589:18:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "1581:4:1"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1623:9:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value0",
                                            "nodeType": "YulIdentifier",
                                            "src": "1648:6:1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "iszero",
                                          "nodeType": "YulIdentifier",
                                          "src": "1641:6:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1641:14:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "iszero",
                                      "nodeType": "YulIdentifier",
                                      "src": "1634:6:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1634:22:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1616:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1616:41:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1616:41:1"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1540:9:1",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "1551:6:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "1562:4:1",
                            "type": ""
                          }
                        ],
                        "src": "1476:187:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1772:218:1",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1818:16:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1827:1:1",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1830:1:1",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1820:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1820:12:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1820:12:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1793:7:1"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1802:9:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "1789:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1789:23:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1814:2:1",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1785:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1785:32:1"
                              },
                              "nodeType": "YulIf",
                              "src": "1782:52:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1843:33:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1866:9:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1853:12:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1853:23:1"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "1843:6:1"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1885:48:1",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1918:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1929:2:1",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1914:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1914:18:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "1895:18:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1895:38:1"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "1885:6:1"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1942:42:1",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1969:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1980:2:1",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1965:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1965:18:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1952:12:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1952:32:1"
                              },
                              "variableNames": [
                                {
                                  "name": "value2",
                                  "nodeType": "YulIdentifier",
                                  "src": "1942:6:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_uint256t_addresst_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1722:9:1",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "1733:7:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "1745:6:1",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "1753:6:1",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "1761:6:1",
                            "type": ""
                          }
                        ],
                        "src": "1668:322:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2050:95:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "2060:29:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "2082:6:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "2069:12:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2069:20:1"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "2060:5:1"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2123:16:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2132:1:1",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2135:1:1",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "2125:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2125:12:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2125:12:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "2111:5:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2118:2:1",
                                        "type": "",
                                        "value": "10"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "lt",
                                      "nodeType": "YulIdentifier",
                                      "src": "2108:2:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2108:13:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "2101:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2101:21:1"
                              },
                              "nodeType": "YulIf",
                              "src": "2098:41:1"
                            }
                          ]
                        },
                        "name": "abi_decode_enum_MANAGING",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "2029:6:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "2040:5:1",
                            "type": ""
                          }
                        ],
                        "src": "1995:150:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2249:179:1",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2295:16:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2304:1:1",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2307:1:1",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "2297:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2297:12:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2297:12:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "2270:7:1"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2279:9:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "2266:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2266:23:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2291:2:1",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "2262:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2262:32:1"
                              },
                              "nodeType": "YulIf",
                              "src": "2259:52:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2320:45:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2355:9:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_enum_MANAGING",
                                  "nodeType": "YulIdentifier",
                                  "src": "2330:24:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2330:35:1"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "2320:6:1"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2374:48:1",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2407:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2418:2:1",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2403:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2403:18:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "2384:18:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2384:38:1"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "2374:6:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_enum$_MANAGING_$690t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "2207:9:1",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "2218:7:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "2230:6:1",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "2238:6:1",
                            "type": ""
                          }
                        ],
                        "src": "2150:278:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2549:236:1",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2595:16:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2604:1:1",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2607:1:1",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "2597:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2597:12:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2597:12:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "2570:7:1"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2579:9:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "2566:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2566:23:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2591:2:1",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "2562:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2562:32:1"
                              },
                              "nodeType": "YulIf",
                              "src": "2559:52:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2620:45:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2655:9:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_enum_MANAGING",
                                  "nodeType": "YulIdentifier",
                                  "src": "2630:24:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2630:35:1"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "2620:6:1"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2674:48:1",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2707:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2718:2:1",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2703:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2703:18:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "2684:18:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2684:38:1"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "2674:6:1"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2731:48:1",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2764:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2775:2:1",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2760:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2760:18:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "2741:18:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2741:38:1"
                              },
                              "variableNames": [
                                {
                                  "name": "value2",
                                  "nodeType": "YulIdentifier",
                                  "src": "2731:6:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_enum$_MANAGING_$690t_addresst_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "2499:9:1",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "2510:7:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "2522:6:1",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "2530:6:1",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "2538:6:1",
                            "type": ""
                          }
                        ],
                        "src": "2433:352:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2964:162:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2981:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2992:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2974:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2974:21:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2974:21:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3015:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3026:2:1",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3011:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3011:18:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3031:2:1",
                                    "type": "",
                                    "value": "12"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3004:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3004:30:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3004:30:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3054:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3065:2:1",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3050:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3050:18:1"
                                  },
                                  {
                                    "hexValue": "4e6f74206163636570746564",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "3070:14:1",
                                    "type": "",
                                    "value": "Not accepted"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3043:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3043:42:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3043:42:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3094:26:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3106:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3117:2:1",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "3102:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3102:18:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "3094:4:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_fadc5f22060668047a4e911336f5d0734fc86647a30251cd7b6b0511b7c2b797__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "2941:9:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "2955:4:1",
                            "type": ""
                          }
                        ],
                        "src": "2790:336:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3305:162:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3322:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3333:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3315:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3315:21:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3315:21:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3356:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3367:2:1",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3352:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3352:18:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3372:2:1",
                                    "type": "",
                                    "value": "12"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3345:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3345:30:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3345:30:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3395:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3406:2:1",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3391:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3391:18:1"
                                  },
                                  {
                                    "hexValue": "4e6f7420617070726f766564",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "3411:14:1",
                                    "type": "",
                                    "value": "Not approved"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3384:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3384:42:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3384:42:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3435:26:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3447:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3458:2:1",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "3443:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3443:18:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "3435:4:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_70356c467a9713064077b7fa0ff1a074c93b1f7c48415be181b9cd799b628361__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "3282:9:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "3296:4:1",
                            "type": ""
                          }
                        ],
                        "src": "3131:336:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3601:145:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "3611:26:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3623:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3634:2:1",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "3619:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3619:18:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "3611:4:1"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3653:9:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "3668:6:1"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "3684:3:1",
                                                "type": "",
                                                "value": "160"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "3689:1:1",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shl",
                                              "nodeType": "YulIdentifier",
                                              "src": "3680:3:1"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "3680:11:1"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "3693:1:1",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nodeType": "YulIdentifier",
                                          "src": "3676:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "3676:19:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "3664:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3664:32:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3646:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3646:51:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3646:51:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3717:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3728:2:1",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3713:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3713:18:1"
                                  },
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "3733:6:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3706:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3706:34:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3706:34:1"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "3562:9:1",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "3573:6:1",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "3581:6:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "3592:4:1",
                            "type": ""
                          }
                        ],
                        "src": "3472:274:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3880:119:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "3890:26:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3902:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3913:2:1",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "3898:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3898:18:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "3890:4:1"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3932:9:1"
                                  },
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "3943:6:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3925:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3925:25:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3925:25:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3970:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3981:2:1",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3966:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3966:18:1"
                                  },
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "3986:6:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3959:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3959:34:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3959:34:1"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "3841:9:1",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "3852:6:1",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "3860:6:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "3871:4:1",
                            "type": ""
                          }
                        ],
                        "src": "3751:248:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4178:182:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "4195:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4206:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4188:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4188:21:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4188:21:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4229:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4240:2:1",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4225:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4225:18:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4245:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4218:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4218:30:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4218:30:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4268:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4279:2:1",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4264:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4264:18:1"
                                  },
                                  {
                                    "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "4284:34:1",
                                    "type": "",
                                    "value": "Ownable: caller is not the owner"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4257:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4257:62:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4257:62:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "4328:26:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "4340:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4351:2:1",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "4336:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4336:18:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "4328:4:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "4155:9:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "4169:4:1",
                            "type": ""
                          }
                        ],
                        "src": "4004:356:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4539:171:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "4556:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4567:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4549:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4549:21:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4549:21:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4590:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4601:2:1",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4586:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4586:18:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4606:2:1",
                                    "type": "",
                                    "value": "21"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4579:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4579:30:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4579:30:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4629:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4640:2:1",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4625:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4625:18:1"
                                  },
                                  {
                                    "hexValue": "496e73756666696369656e74207265736572766573",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "4645:23:1",
                                    "type": "",
                                    "value": "Insufficient reserves"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4618:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4618:51:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4618:51:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "4678:26:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "4690:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4701:2:1",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "4686:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4686:18:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "4678:4:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_6f055697f05542780f050f02e169b628baaede4365bd8f2e41b10829d224c674__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "4516:9:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "4530:4:1",
                            "type": ""
                          }
                        ],
                        "src": "4365:345:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4796:103:1",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "4842:16:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "4851:1:1",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "4854:1:1",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "4844:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "4844:12:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "4844:12:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "4817:7:1"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4826:9:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "4813:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4813:23:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4838:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "4809:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4809:32:1"
                              },
                              "nodeType": "YulIf",
                              "src": "4806:52:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "4867:26:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "4883:9:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "4877:5:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4877:16:1"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "4867:6:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_uint256_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "4762:9:1",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "4773:7:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "4785:6:1",
                            "type": ""
                          }
                        ],
                        "src": "4715:184:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5078:168:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "5095:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5106:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5088:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5088:21:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5088:21:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "5129:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5140:2:1",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5125:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5125:18:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5145:2:1",
                                    "type": "",
                                    "value": "18"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5118:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5118:30:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5118:30:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "5168:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5179:2:1",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5164:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5164:18:1"
                                  },
                                  {
                                    "hexValue": "457863656564732064656274206c696d6974",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "5184:20:1",
                                    "type": "",
                                    "value": "Exceeds debt limit"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5157:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5157:48:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5157:48:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "5214:26:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "5226:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5237:2:1",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "5222:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5222:18:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "5214:4:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_f193cc9709e57cd43c6930e1643edb6922168fe48dacb7425cd34c9438ee5b15__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "5055:9:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "5069:4:1",
                            "type": ""
                          }
                        ],
                        "src": "4904:342:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5329:199:1",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "5375:16:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "5384:1:1",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "5387:1:1",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "5377:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "5377:12:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "5377:12:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "5350:7:1"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "5359:9:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "5346:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5346:23:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5371:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "5342:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5342:32:1"
                              },
                              "nodeType": "YulIf",
                              "src": "5339:52:1"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "5400:29:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "5419:9:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "5413:5:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5413:16:1"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nodeType": "YulTypedName",
                                  "src": "5404:5:1",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "5482:16:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "5491:1:1",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "5494:1:1",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "5484:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "5484:12:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "5484:12:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "5451:5:1"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "name": "value",
                                                "nodeType": "YulIdentifier",
                                                "src": "5472:5:1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "iszero",
                                              "nodeType": "YulIdentifier",
                                              "src": "5465:6:1"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "5465:13:1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "iszero",
                                          "nodeType": "YulIdentifier",
                                          "src": "5458:6:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "5458:21:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "5448:2:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5448:32:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "5441:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5441:40:1"
                              },
                              "nodeType": "YulIf",
                              "src": "5438:60:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "5507:15:1",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "5517:5:1"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "5507:6:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_bool_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "5295:9:1",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "5306:7:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "5318:6:1",
                            "type": ""
                          }
                        ],
                        "src": "5251:277:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5565:95:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5582:1:1",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5589:3:1",
                                        "type": "",
                                        "value": "224"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5594:10:1",
                                        "type": "",
                                        "value": "0x4e487b71"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "5585:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5585:20:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5575:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5575:31:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5575:31:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5622:1:1",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5625:4:1",
                                    "type": "",
                                    "value": "0x32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5615:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5615:15:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5615:15:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5646:1:1",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5649:4:1",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "5639:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5639:15:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5639:15:1"
                            }
                          ]
                        },
                        "name": "panic_error_0x32",
                        "nodeType": "YulFunctionDefinition",
                        "src": "5533:127:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5697:95:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5714:1:1",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5721:3:1",
                                        "type": "",
                                        "value": "224"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5726:10:1",
                                        "type": "",
                                        "value": "0x4e487b71"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "5717:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5717:20:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5707:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5707:31:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5707:31:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5754:1:1",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5757:4:1",
                                    "type": "",
                                    "value": "0x11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5747:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5747:15:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5747:15:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5778:1:1",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5781:4:1",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "5771:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5771:15:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5771:15:1"
                            }
                          ]
                        },
                        "name": "panic_error_0x11",
                        "nodeType": "YulFunctionDefinition",
                        "src": "5665:127:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5844:88:1",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "5875:22:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nodeType": "YulIdentifier",
                                        "src": "5877:16:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "5877:18:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "5877:18:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "5860:5:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5871:1:1",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "not",
                                      "nodeType": "YulIdentifier",
                                      "src": "5867:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5867:6:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "eq",
                                  "nodeType": "YulIdentifier",
                                  "src": "5857:2:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5857:17:1"
                              },
                              "nodeType": "YulIf",
                              "src": "5854:43:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "5906:20:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "5917:5:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5924:1:1",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "5913:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5913:13:1"
                              },
                              "variableNames": [
                                {
                                  "name": "ret",
                                  "nodeType": "YulIdentifier",
                                  "src": "5906:3:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "increment_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "5826:5:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "ret",
                            "nodeType": "YulTypedName",
                            "src": "5836:3:1",
                            "type": ""
                          }
                        ],
                        "src": "5797:135:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6111:228:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "6128:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6139:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6121:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6121:21:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6121:21:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "6162:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6173:2:1",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "6158:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6158:18:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6178:2:1",
                                    "type": "",
                                    "value": "38"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6151:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6151:30:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6151:30:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "6201:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6212:2:1",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "6197:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6197:18:1"
                                  },
                                  {
                                    "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "6217:34:1",
                                    "type": "",
                                    "value": "Ownable: new owner is the zero a"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6190:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6190:62:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6190:62:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "6272:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6283:2:1",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "6268:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6268:18:1"
                                  },
                                  {
                                    "hexValue": "646472657373",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "6288:8:1",
                                    "type": "",
                                    "value": "ddress"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6261:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6261:36:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6261:36:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "6306:27:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "6318:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6329:3:1",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "6314:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6314:19:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "6306:4:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "6088:9:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "6102:4:1",
                            "type": ""
                          }
                        ],
                        "src": "5937:402:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6518:224:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "6535:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6546:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6528:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6528:21:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6528:21:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "6569:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6580:2:1",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "6565:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6565:18:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6585:2:1",
                                    "type": "",
                                    "value": "34"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6558:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6558:30:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6558:30:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "6608:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6619:2:1",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "6604:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6604:18:1"
                                  },
                                  {
                                    "hexValue": "4f776e61626c653a206d757374206265206e6577206f776e657220746f207075",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "6624:34:1",
                                    "type": "",
                                    "value": "Ownable: must be new owner to pu"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6597:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6597:62:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6597:62:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "6679:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6690:2:1",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "6675:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6675:18:1"
                                  },
                                  {
                                    "hexValue": "6c6c",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "6695:4:1",
                                    "type": "",
                                    "value": "ll"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6668:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6668:32:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6668:32:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "6709:27:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "6721:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6732:3:1",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "6717:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6717:19:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "6709:4:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_4de71fbd3469e1b7fc89a70805ae86972c680281e629f271ab7471fd6321445c__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "6495:9:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "6509:4:1",
                            "type": ""
                          }
                        ],
                        "src": "6344:398:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6826:194:1",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "6872:16:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "6881:1:1",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "6884:1:1",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "6874:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "6874:12:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "6874:12:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "6847:7:1"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "6856:9:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "6843:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6843:23:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6868:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "6839:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6839:32:1"
                              },
                              "nodeType": "YulIf",
                              "src": "6836:52:1"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "6897:29:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "6916:9:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "6910:5:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6910:16:1"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nodeType": "YulTypedName",
                                  "src": "6901:5:1",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "6974:16:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "6983:1:1",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "6986:1:1",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "6976:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "6976:12:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "6976:12:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "6948:5:1"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "6959:5:1"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "6966:4:1",
                                            "type": "",
                                            "value": "0xff"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "6955:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "6955:16:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "6945:2:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6945:27:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "6938:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6938:35:1"
                              },
                              "nodeType": "YulIf",
                              "src": "6935:55:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "6999:15:1",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "7009:5:1"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "6999:6:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_uint8_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "6792:9:1",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "6803:7:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "6815:6:1",
                            "type": ""
                          }
                        ],
                        "src": "6747:273:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "7089:358:1",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "7099:16:1",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7114:1:1",
                                "type": "",
                                "value": "1"
                              },
                              "variables": [
                                {
                                  "name": "power_1",
                                  "nodeType": "YulTypedName",
                                  "src": "7103:7:1",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "7124:16:1",
                              "value": {
                                "name": "power_1",
                                "nodeType": "YulIdentifier",
                                "src": "7133:7:1"
                              },
                              "variableNames": [
                                {
                                  "name": "power",
                                  "nodeType": "YulIdentifier",
                                  "src": "7124:5:1"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "7149:13:1",
                              "value": {
                                "name": "_base",
                                "nodeType": "YulIdentifier",
                                "src": "7157:5:1"
                              },
                              "variableNames": [
                                {
                                  "name": "base",
                                  "nodeType": "YulIdentifier",
                                  "src": "7149:4:1"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "7213:228:1",
                                "statements": [
                                  {
                                    "body": {
                                      "nodeType": "YulBlock",
                                      "src": "7258:22:1",
                                      "statements": [
                                        {
                                          "expression": {
                                            "arguments": [],
                                            "functionName": {
                                              "name": "panic_error_0x11",
                                              "nodeType": "YulIdentifier",
                                              "src": "7260:16:1"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "7260:18:1"
                                          },
                                          "nodeType": "YulExpressionStatement",
                                          "src": "7260:18:1"
                                        }
                                      ]
                                    },
                                    "condition": {
                                      "arguments": [
                                        {
                                          "name": "base",
                                          "nodeType": "YulIdentifier",
                                          "src": "7233:4:1"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "kind": "number",
                                                  "nodeType": "YulLiteral",
                                                  "src": "7247:1:1",
                                                  "type": "",
                                                  "value": "0"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "not",
                                                "nodeType": "YulIdentifier",
                                                "src": "7243:3:1"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "7243:6:1"
                                            },
                                            {
                                              "name": "base",
                                              "nodeType": "YulIdentifier",
                                              "src": "7251:4:1"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "div",
                                            "nodeType": "YulIdentifier",
                                            "src": "7239:3:1"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "7239:17:1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "gt",
                                        "nodeType": "YulIdentifier",
                                        "src": "7230:2:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "7230:27:1"
                                    },
                                    "nodeType": "YulIf",
                                    "src": "7227:53:1"
                                  },
                                  {
                                    "body": {
                                      "nodeType": "YulBlock",
                                      "src": "7319:29:1",
                                      "statements": [
                                        {
                                          "nodeType": "YulAssignment",
                                          "src": "7321:25:1",
                                          "value": {
                                            "arguments": [
                                              {
                                                "name": "power",
                                                "nodeType": "YulIdentifier",
                                                "src": "7334:5:1"
                                              },
                                              {
                                                "name": "base",
                                                "nodeType": "YulIdentifier",
                                                "src": "7341:4:1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "mul",
                                              "nodeType": "YulIdentifier",
                                              "src": "7330:3:1"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "7330:16:1"
                                          },
                                          "variableNames": [
                                            {
                                              "name": "power",
                                              "nodeType": "YulIdentifier",
                                              "src": "7321:5:1"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    "condition": {
                                      "arguments": [
                                        {
                                          "name": "exponent",
                                          "nodeType": "YulIdentifier",
                                          "src": "7300:8:1"
                                        },
                                        {
                                          "name": "power_1",
                                          "nodeType": "YulIdentifier",
                                          "src": "7310:7:1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "and",
                                        "nodeType": "YulIdentifier",
                                        "src": "7296:3:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "7296:22:1"
                                    },
                                    "nodeType": "YulIf",
                                    "src": "7293:55:1"
                                  },
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "7361:23:1",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "base",
                                          "nodeType": "YulIdentifier",
                                          "src": "7373:4:1"
                                        },
                                        {
                                          "name": "base",
                                          "nodeType": "YulIdentifier",
                                          "src": "7379:4:1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mul",
                                        "nodeType": "YulIdentifier",
                                        "src": "7369:3:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "7369:15:1"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "base",
                                        "nodeType": "YulIdentifier",
                                        "src": "7361:4:1"
                                      }
                                    ]
                                  },
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "7397:34:1",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "power_1",
                                          "nodeType": "YulIdentifier",
                                          "src": "7413:7:1"
                                        },
                                        {
                                          "name": "exponent",
                                          "nodeType": "YulIdentifier",
                                          "src": "7422:8:1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "shr",
                                        "nodeType": "YulIdentifier",
                                        "src": "7409:3:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "7409:22:1"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "exponent",
                                        "nodeType": "YulIdentifier",
                                        "src": "7397:8:1"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "exponent",
                                    "nodeType": "YulIdentifier",
                                    "src": "7182:8:1"
                                  },
                                  {
                                    "name": "power_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "7192:7:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "7179:2:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7179:21:1"
                              },
                              "nodeType": "YulForLoop",
                              "post": {
                                "nodeType": "YulBlock",
                                "src": "7201:3:1",
                                "statements": []
                              },
                              "pre": {
                                "nodeType": "YulBlock",
                                "src": "7175:3:1",
                                "statements": []
                              },
                              "src": "7171:270:1"
                            }
                          ]
                        },
                        "name": "checked_exp_helper",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "_base",
                            "nodeType": "YulTypedName",
                            "src": "7053:5:1",
                            "type": ""
                          },
                          {
                            "name": "exponent",
                            "nodeType": "YulTypedName",
                            "src": "7060:8:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "power",
                            "nodeType": "YulTypedName",
                            "src": "7073:5:1",
                            "type": ""
                          },
                          {
                            "name": "base",
                            "nodeType": "YulTypedName",
                            "src": "7080:4:1",
                            "type": ""
                          }
                        ],
                        "src": "7025:422:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "7511:747:1",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "7549:52:1",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "7563:10:1",
                                    "value": {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "7572:1:1",
                                      "type": "",
                                      "value": "1"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "power",
                                        "nodeType": "YulIdentifier",
                                        "src": "7563:5:1"
                                      }
                                    ]
                                  },
                                  {
                                    "nodeType": "YulLeave",
                                    "src": "7586:5:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "exponent",
                                    "nodeType": "YulIdentifier",
                                    "src": "7531:8:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "7524:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7524:16:1"
                              },
                              "nodeType": "YulIf",
                              "src": "7521:80:1"
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "7634:52:1",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "7648:10:1",
                                    "value": {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "7657:1:1",
                                      "type": "",
                                      "value": "0"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "power",
                                        "nodeType": "YulIdentifier",
                                        "src": "7648:5:1"
                                      }
                                    ]
                                  },
                                  {
                                    "nodeType": "YulLeave",
                                    "src": "7671:5:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "base",
                                    "nodeType": "YulIdentifier",
                                    "src": "7620:4:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "7613:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7613:12:1"
                              },
                              "nodeType": "YulIf",
                              "src": "7610:76:1"
                            },
                            {
                              "cases": [
                                {
                                  "body": {
                                    "nodeType": "YulBlock",
                                    "src": "7722:52:1",
                                    "statements": [
                                      {
                                        "nodeType": "YulAssignment",
                                        "src": "7736:10:1",
                                        "value": {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "7745:1:1",
                                          "type": "",
                                          "value": "1"
                                        },
                                        "variableNames": [
                                          {
                                            "name": "power",
                                            "nodeType": "YulIdentifier",
                                            "src": "7736:5:1"
                                          }
                                        ]
                                      },
                                      {
                                        "nodeType": "YulLeave",
                                        "src": "7759:5:1"
                                      }
                                    ]
                                  },
                                  "nodeType": "YulCase",
                                  "src": "7715:59:1",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7720:1:1",
                                    "type": "",
                                    "value": "1"
                                  }
                                },
                                {
                                  "body": {
                                    "nodeType": "YulBlock",
                                    "src": "7790:123:1",
                                    "statements": [
                                      {
                                        "body": {
                                          "nodeType": "YulBlock",
                                          "src": "7825:22:1",
                                          "statements": [
                                            {
                                              "expression": {
                                                "arguments": [],
                                                "functionName": {
                                                  "name": "panic_error_0x11",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "7827:16:1"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "7827:18:1"
                                              },
                                              "nodeType": "YulExpressionStatement",
                                              "src": "7827:18:1"
                                            }
                                          ]
                                        },
                                        "condition": {
                                          "arguments": [
                                            {
                                              "name": "exponent",
                                              "nodeType": "YulIdentifier",
                                              "src": "7810:8:1"
                                            },
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "7820:3:1",
                                              "type": "",
                                              "value": "255"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "gt",
                                            "nodeType": "YulIdentifier",
                                            "src": "7807:2:1"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "7807:17:1"
                                        },
                                        "nodeType": "YulIf",
                                        "src": "7804:43:1"
                                      },
                                      {
                                        "nodeType": "YulAssignment",
                                        "src": "7860:25:1",
                                        "value": {
                                          "arguments": [
                                            {
                                              "name": "exponent",
                                              "nodeType": "YulIdentifier",
                                              "src": "7873:8:1"
                                            },
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "7883:1:1",
                                              "type": "",
                                              "value": "1"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "shl",
                                            "nodeType": "YulIdentifier",
                                            "src": "7869:3:1"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "7869:16:1"
                                        },
                                        "variableNames": [
                                          {
                                            "name": "power",
                                            "nodeType": "YulIdentifier",
                                            "src": "7860:5:1"
                                          }
                                        ]
                                      },
                                      {
                                        "nodeType": "YulLeave",
                                        "src": "7898:5:1"
                                      }
                                    ]
                                  },
                                  "nodeType": "YulCase",
                                  "src": "7783:130:1",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7788:1:1",
                                    "type": "",
                                    "value": "2"
                                  }
                                }
                              ],
                              "expression": {
                                "name": "base",
                                "nodeType": "YulIdentifier",
                                "src": "7702:4:1"
                              },
                              "nodeType": "YulSwitch",
                              "src": "7695:218:1"
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "8011:70:1",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "8025:28:1",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "base",
                                          "nodeType": "YulIdentifier",
                                          "src": "8038:4:1"
                                        },
                                        {
                                          "name": "exponent",
                                          "nodeType": "YulIdentifier",
                                          "src": "8044:8:1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "exp",
                                        "nodeType": "YulIdentifier",
                                        "src": "8034:3:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "8034:19:1"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "power",
                                        "nodeType": "YulIdentifier",
                                        "src": "8025:5:1"
                                      }
                                    ]
                                  },
                                  {
                                    "nodeType": "YulLeave",
                                    "src": "8066:5:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "base",
                                            "nodeType": "YulIdentifier",
                                            "src": "7935:4:1"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "7941:2:1",
                                            "type": "",
                                            "value": "11"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "lt",
                                          "nodeType": "YulIdentifier",
                                          "src": "7932:2:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "7932:12:1"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "exponent",
                                            "nodeType": "YulIdentifier",
                                            "src": "7949:8:1"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "7959:2:1",
                                            "type": "",
                                            "value": "78"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "lt",
                                          "nodeType": "YulIdentifier",
                                          "src": "7946:2:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "7946:16:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "7928:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7928:35:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "base",
                                            "nodeType": "YulIdentifier",
                                            "src": "7972:4:1"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "7978:3:1",
                                            "type": "",
                                            "value": "307"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "lt",
                                          "nodeType": "YulIdentifier",
                                          "src": "7969:2:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "7969:13:1"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "exponent",
                                            "nodeType": "YulIdentifier",
                                            "src": "7987:8:1"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "7997:2:1",
                                            "type": "",
                                            "value": "32"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "lt",
                                          "nodeType": "YulIdentifier",
                                          "src": "7984:2:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "7984:16:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "7965:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7965:36:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "or",
                                  "nodeType": "YulIdentifier",
                                  "src": "7925:2:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7925:77:1"
                              },
                              "nodeType": "YulIf",
                              "src": "7922:159:1"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "8090:57:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "base",
                                    "nodeType": "YulIdentifier",
                                    "src": "8132:4:1"
                                  },
                                  {
                                    "name": "exponent",
                                    "nodeType": "YulIdentifier",
                                    "src": "8138:8:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "checked_exp_helper",
                                  "nodeType": "YulIdentifier",
                                  "src": "8113:18:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8113:34:1"
                              },
                              "variables": [
                                {
                                  "name": "power_1",
                                  "nodeType": "YulTypedName",
                                  "src": "8094:7:1",
                                  "type": ""
                                },
                                {
                                  "name": "base_1",
                                  "nodeType": "YulTypedName",
                                  "src": "8103:6:1",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "8192:22:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nodeType": "YulIdentifier",
                                        "src": "8194:16:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "8194:18:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "8194:18:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "power_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "8162:7:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "8179:1:1",
                                            "type": "",
                                            "value": "0"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "not",
                                          "nodeType": "YulIdentifier",
                                          "src": "8175:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "8175:6:1"
                                      },
                                      {
                                        "name": "base_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "8183:6:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "div",
                                      "nodeType": "YulIdentifier",
                                      "src": "8171:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8171:19:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "8159:2:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8159:32:1"
                              },
                              "nodeType": "YulIf",
                              "src": "8156:58:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "8223:29:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "power_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "8236:7:1"
                                  },
                                  {
                                    "name": "base_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "8245:6:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mul",
                                  "nodeType": "YulIdentifier",
                                  "src": "8232:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8232:20:1"
                              },
                              "variableNames": [
                                {
                                  "name": "power",
                                  "nodeType": "YulIdentifier",
                                  "src": "8223:5:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_exp_unsigned",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "base",
                            "nodeType": "YulTypedName",
                            "src": "7482:4:1",
                            "type": ""
                          },
                          {
                            "name": "exponent",
                            "nodeType": "YulTypedName",
                            "src": "7488:8:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "power",
                            "nodeType": "YulTypedName",
                            "src": "7501:5:1",
                            "type": ""
                          }
                        ],
                        "src": "7452:806:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "8331:72:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "8341:56:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "base",
                                    "nodeType": "YulIdentifier",
                                    "src": "8371:4:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "exponent",
                                        "nodeType": "YulIdentifier",
                                        "src": "8381:8:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "8391:4:1",
                                        "type": "",
                                        "value": "0xff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "8377:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8377:19:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "checked_exp_unsigned",
                                  "nodeType": "YulIdentifier",
                                  "src": "8350:20:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8350:47:1"
                              },
                              "variableNames": [
                                {
                                  "name": "power",
                                  "nodeType": "YulIdentifier",
                                  "src": "8341:5:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_exp_t_uint256_t_uint8",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "base",
                            "nodeType": "YulTypedName",
                            "src": "8302:4:1",
                            "type": ""
                          },
                          {
                            "name": "exponent",
                            "nodeType": "YulTypedName",
                            "src": "8308:8:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "power",
                            "nodeType": "YulTypedName",
                            "src": "8321:5:1",
                            "type": ""
                          }
                        ],
                        "src": "8263:140:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "8440:95:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8457:1:1",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "8464:3:1",
                                        "type": "",
                                        "value": "224"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "8469:10:1",
                                        "type": "",
                                        "value": "0x4e487b71"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "8460:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8460:20:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "8450:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8450:31:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8450:31:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8497:1:1",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8500:4:1",
                                    "type": "",
                                    "value": "0x21"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "8490:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8490:15:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8490:15:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8521:1:1",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8524:4:1",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "8514:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8514:15:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8514:15:1"
                            }
                          ]
                        },
                        "name": "panic_error_0x21",
                        "nodeType": "YulFunctionDefinition",
                        "src": "8408:127:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "8663:161:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "8673:26:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "8685:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8696:2:1",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "8681:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8681:18:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "8673:4:1"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "8715:9:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "8730:6:1"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "8746:3:1",
                                                "type": "",
                                                "value": "160"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "8751:1:1",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shl",
                                              "nodeType": "YulIdentifier",
                                              "src": "8742:3:1"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "8742:11:1"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "8755:1:1",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nodeType": "YulIdentifier",
                                          "src": "8738:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "8738:19:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "8726:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8726:32:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "8708:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8708:51:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8708:51:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "8779:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "8790:2:1",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "8775:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8775:18:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value1",
                                            "nodeType": "YulIdentifier",
                                            "src": "8809:6:1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "iszero",
                                          "nodeType": "YulIdentifier",
                                          "src": "8802:6:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "8802:14:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "iszero",
                                      "nodeType": "YulIdentifier",
                                      "src": "8795:6:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8795:22:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "8768:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8768:50:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8768:50:1"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address_t_bool__to_t_address_t_bool__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "8624:9:1",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "8635:6:1",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "8643:6:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "8654:4:1",
                            "type": ""
                          }
                        ],
                        "src": "8540:284:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "8877:80:1",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "8904:22:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nodeType": "YulIdentifier",
                                        "src": "8906:16:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "8906:18:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "8906:18:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "8893:1:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "y",
                                        "nodeType": "YulIdentifier",
                                        "src": "8900:1:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "not",
                                      "nodeType": "YulIdentifier",
                                      "src": "8896:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8896:6:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "8890:2:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8890:13:1"
                              },
                              "nodeType": "YulIf",
                              "src": "8887:39:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "8935:16:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "8946:1:1"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "8949:1:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "8942:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8942:9:1"
                              },
                              "variableNames": [
                                {
                                  "name": "sum",
                                  "nodeType": "YulIdentifier",
                                  "src": "8935:3:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_add_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nodeType": "YulTypedName",
                            "src": "8860:1:1",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nodeType": "YulTypedName",
                            "src": "8863:1:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "sum",
                            "nodeType": "YulTypedName",
                            "src": "8869:3:1",
                            "type": ""
                          }
                        ],
                        "src": "8829:128:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "9136:177:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "9153:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9164:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "9146:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9146:21:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9146:21:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "9187:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "9198:2:1",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "9183:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9183:18:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9203:2:1",
                                    "type": "",
                                    "value": "27"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "9176:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9176:30:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9176:30:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "9226:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "9237:2:1",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "9222:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9222:18:1"
                                  },
                                  {
                                    "hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "9242:29:1",
                                    "type": "",
                                    "value": "SafeMath: addition overflow"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "9215:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9215:57:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9215:57:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "9281:26:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "9293:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9304:2:1",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "9289:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9289:18:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "9281:4:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "9113:9:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "9127:4:1",
                            "type": ""
                          }
                        ],
                        "src": "8962:351:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "9475:218:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "9485:26:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "9497:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9508:2:1",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "9493:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9493:18:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "9485:4:1"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "9520:29:1",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "9538:3:1",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "9543:1:1",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "9534:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9534:11:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9547:1:1",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "9530:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9530:19:1"
                              },
                              "variables": [
                                {
                                  "name": "_1",
                                  "nodeType": "YulTypedName",
                                  "src": "9524:2:1",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "9565:9:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "9580:6:1"
                                      },
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "9588:2:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "9576:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9576:15:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "9558:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9558:34:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9558:34:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "9612:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "9623:2:1",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "9608:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9608:18:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value1",
                                        "nodeType": "YulIdentifier",
                                        "src": "9632:6:1"
                                      },
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "9640:2:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "9628:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9628:15:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "9601:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9601:43:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9601:43:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "9664:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "9675:2:1",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "9660:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9660:18:1"
                                  },
                                  {
                                    "name": "value2",
                                    "nodeType": "YulIdentifier",
                                    "src": "9680:6:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "9653:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9653:34:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9653:34:1"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "9428:9:1",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "9439:6:1",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "9447:6:1",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "9455:6:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "9466:4:1",
                            "type": ""
                          }
                        ],
                        "src": "9318:375:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "9750:116:1",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "9809:22:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nodeType": "YulIdentifier",
                                        "src": "9811:16:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "9811:18:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "9811:18:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "x",
                                            "nodeType": "YulIdentifier",
                                            "src": "9781:1:1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "iszero",
                                          "nodeType": "YulIdentifier",
                                          "src": "9774:6:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "9774:9:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "iszero",
                                      "nodeType": "YulIdentifier",
                                      "src": "9767:6:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9767:17:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "y",
                                        "nodeType": "YulIdentifier",
                                        "src": "9789:1:1"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "9800:1:1",
                                                "type": "",
                                                "value": "0"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "not",
                                              "nodeType": "YulIdentifier",
                                              "src": "9796:3:1"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "9796:6:1"
                                          },
                                          {
                                            "name": "x",
                                            "nodeType": "YulIdentifier",
                                            "src": "9804:1:1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "div",
                                          "nodeType": "YulIdentifier",
                                          "src": "9792:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "9792:14:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "gt",
                                      "nodeType": "YulIdentifier",
                                      "src": "9786:2:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9786:21:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "9763:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9763:45:1"
                              },
                              "nodeType": "YulIf",
                              "src": "9760:71:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "9840:20:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "9855:1:1"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "9858:1:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mul",
                                  "nodeType": "YulIdentifier",
                                  "src": "9851:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9851:9:1"
                              },
                              "variableNames": [
                                {
                                  "name": "product",
                                  "nodeType": "YulIdentifier",
                                  "src": "9840:7:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_mul_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nodeType": "YulTypedName",
                            "src": "9729:1:1",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nodeType": "YulTypedName",
                            "src": "9732:1:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "product",
                            "nodeType": "YulTypedName",
                            "src": "9738:7:1",
                            "type": ""
                          }
                        ],
                        "src": "9698:168:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "9917:171:1",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "9948:111:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "9969:1:1",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "9976:3:1",
                                              "type": "",
                                              "value": "224"
                                            },
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "9981:10:1",
                                              "type": "",
                                              "value": "0x4e487b71"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "shl",
                                            "nodeType": "YulIdentifier",
                                            "src": "9972:3:1"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "9972:20:1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "9962:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "9962:31:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "9962:31:1"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "10013:1:1",
                                          "type": "",
                                          "value": "4"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "10016:4:1",
                                          "type": "",
                                          "value": "0x12"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "10006:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "10006:15:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "10006:15:1"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "10041:1:1",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "10044:4:1",
                                          "type": "",
                                          "value": "0x24"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "10034:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "10034:15:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "10034:15:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "9937:1:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "9930:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9930:9:1"
                              },
                              "nodeType": "YulIf",
                              "src": "9927:132:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "10068:14:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "10077:1:1"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "10080:1:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "div",
                                  "nodeType": "YulIdentifier",
                                  "src": "10073:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10073:9:1"
                              },
                              "variableNames": [
                                {
                                  "name": "r",
                                  "nodeType": "YulIdentifier",
                                  "src": "10068:1:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_div_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nodeType": "YulTypedName",
                            "src": "9902:1:1",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nodeType": "YulTypedName",
                            "src": "9905:1:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "r",
                            "nodeType": "YulTypedName",
                            "src": "9911:1:1",
                            "type": ""
                          }
                        ],
                        "src": "9871:217:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "10267:223:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "10284:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10295:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "10277:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10277:21:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10277:21:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "10318:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "10329:2:1",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "10314:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10314:18:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10334:2:1",
                                    "type": "",
                                    "value": "33"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "10307:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10307:30:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10307:30:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "10357:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "10368:2:1",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "10353:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10353:18:1"
                                  },
                                  {
                                    "hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "10373:34:1",
                                    "type": "",
                                    "value": "SafeMath: multiplication overflo"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "10346:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10346:62:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10346:62:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "10428:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "10439:2:1",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "10424:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10424:18:1"
                                  },
                                  {
                                    "hexValue": "77",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "10444:3:1",
                                    "type": "",
                                    "value": "w"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "10417:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10417:31:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10417:31:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "10457:27:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "10469:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10480:3:1",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "10465:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10465:19:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "10457:4:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "10244:9:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "10258:4:1",
                            "type": ""
                          }
                        ],
                        "src": "10093:397:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "10669:160:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "10686:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10697:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "10679:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10679:21:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10679:21:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "10720:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "10731:2:1",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "10716:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10716:18:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10736:2:1",
                                    "type": "",
                                    "value": "10"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "10709:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10709:30:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10709:30:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "10759:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "10770:2:1",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "10755:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10755:18:1"
                                  },
                                  {
                                    "hexValue": "4d757374207175657565",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "10775:12:1",
                                    "type": "",
                                    "value": "Must queue"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "10748:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10748:40:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10748:40:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "10797:26:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "10809:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10820:2:1",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "10805:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10805:18:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "10797:4:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_aba60747e6633e488f9f393b8420ade3a0b44f9def8d4a3769b0b8220bd2a250__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "10646:9:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "10660:4:1",
                            "type": ""
                          }
                        ],
                        "src": "10495:334:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "11008:167:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "11025:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11036:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "11018:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11018:21:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11018:21:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "11059:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "11070:2:1",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "11055:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11055:18:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11075:2:1",
                                    "type": "",
                                    "value": "17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "11048:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11048:30:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11048:30:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "11098:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "11109:2:1",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "11094:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11094:18:1"
                                  },
                                  {
                                    "hexValue": "5175657565206e6f742065787069726564",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "11114:19:1",
                                    "type": "",
                                    "value": "Queue not expired"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "11087:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11087:47:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11087:47:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "11143:26:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "11155:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11166:2:1",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "11151:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11151:18:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "11143:4:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_20f81a12537dab2de6f63614f9df91e785d8b2db704bbdcc64e781adf7c0e2ff__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "10985:9:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "10999:4:1",
                            "type": ""
                          }
                        ],
                        "src": "10834:341:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "11233:205:1",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "11243:10:1",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "11252:1:1",
                                "type": "",
                                "value": "0"
                              },
                              "variables": [
                                {
                                  "name": "i",
                                  "nodeType": "YulTypedName",
                                  "src": "11247:1:1",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "11312:63:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "name": "dst",
                                              "nodeType": "YulIdentifier",
                                              "src": "11337:3:1"
                                            },
                                            {
                                              "name": "i",
                                              "nodeType": "YulIdentifier",
                                              "src": "11342:1:1"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "11333:3:1"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "11333:11:1"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "name": "src",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "11356:3:1"
                                                },
                                                {
                                                  "name": "i",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "11361:1:1"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nodeType": "YulIdentifier",
                                                "src": "11352:3:1"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "11352:11:1"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "mload",
                                            "nodeType": "YulIdentifier",
                                            "src": "11346:5:1"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "11346:18:1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "11326:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "11326:39:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "11326:39:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "i",
                                    "nodeType": "YulIdentifier",
                                    "src": "11273:1:1"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "11276:6:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "11270:2:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11270:13:1"
                              },
                              "nodeType": "YulForLoop",
                              "post": {
                                "nodeType": "YulBlock",
                                "src": "11284:19:1",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "11286:15:1",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "11295:1:1"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "11298:2:1",
                                          "type": "",
                                          "value": "32"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "11291:3:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "11291:10:1"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "i",
                                        "nodeType": "YulIdentifier",
                                        "src": "11286:1:1"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "pre": {
                                "nodeType": "YulBlock",
                                "src": "11266:3:1",
                                "statements": []
                              },
                              "src": "11262:113:1"
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "11401:31:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "name": "dst",
                                              "nodeType": "YulIdentifier",
                                              "src": "11414:3:1"
                                            },
                                            {
                                              "name": "length",
                                              "nodeType": "YulIdentifier",
                                              "src": "11419:6:1"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "11410:3:1"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "11410:16:1"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "11428:1:1",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "11403:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "11403:27:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "11403:27:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "i",
                                    "nodeType": "YulIdentifier",
                                    "src": "11390:1:1"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "11393:6:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "11387:2:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11387:13:1"
                              },
                              "nodeType": "YulIf",
                              "src": "11384:48:1"
                            }
                          ]
                        },
                        "name": "copy_memory_to_memory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "src",
                            "nodeType": "YulTypedName",
                            "src": "11211:3:1",
                            "type": ""
                          },
                          {
                            "name": "dst",
                            "nodeType": "YulTypedName",
                            "src": "11216:3:1",
                            "type": ""
                          },
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "11221:6:1",
                            "type": ""
                          }
                        ],
                        "src": "11180:258:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "11564:262:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "11581:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11592:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "11574:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11574:21:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11574:21:1"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "11604:27:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "11624:6:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "11618:5:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11618:13:1"
                              },
                              "variables": [
                                {
                                  "name": "length",
                                  "nodeType": "YulTypedName",
                                  "src": "11608:6:1",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "11651:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "11662:2:1",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "11647:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11647:18:1"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "11667:6:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "11640:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11640:34:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11640:34:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "11709:6:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "11717:2:1",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "11705:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11705:15:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "11726:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "11737:2:1",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "11722:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11722:18:1"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "11742:6:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "copy_memory_to_memory",
                                  "nodeType": "YulIdentifier",
                                  "src": "11683:21:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11683:66:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11683:66:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "11758:62:1",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "11774:9:1"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "name": "length",
                                                "nodeType": "YulIdentifier",
                                                "src": "11793:6:1"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "11801:2:1",
                                                "type": "",
                                                "value": "31"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "add",
                                              "nodeType": "YulIdentifier",
                                              "src": "11789:3:1"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "11789:15:1"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "11810:2:1",
                                                "type": "",
                                                "value": "31"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "not",
                                              "nodeType": "YulIdentifier",
                                              "src": "11806:3:1"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "11806:7:1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "11785:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "11785:29:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "11770:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11770:45:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11817:2:1",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "11766:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11766:54:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "11758:4:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "11533:9:1",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "11544:6:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "11555:4:1",
                            "type": ""
                          }
                        ],
                        "src": "11443:383:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "11880:76:1",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "11902:22:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nodeType": "YulIdentifier",
                                        "src": "11904:16:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "11904:18:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "11904:18:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "11896:1:1"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "11899:1:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "11893:2:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11893:8:1"
                              },
                              "nodeType": "YulIf",
                              "src": "11890:34:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "11933:17:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "11945:1:1"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "11948:1:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "11941:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11941:9:1"
                              },
                              "variableNames": [
                                {
                                  "name": "diff",
                                  "nodeType": "YulIdentifier",
                                  "src": "11933:4:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_sub_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nodeType": "YulTypedName",
                            "src": "11862:1:1",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nodeType": "YulTypedName",
                            "src": "11865:1:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "diff",
                            "nodeType": "YulTypedName",
                            "src": "11871:4:1",
                            "type": ""
                          }
                        ],
                        "src": "11831:125:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "12135:232:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "12152:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12163:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "12145:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12145:21:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12145:21:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "12186:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "12197:2:1",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "12182:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12182:18:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12202:2:1",
                                    "type": "",
                                    "value": "42"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "12175:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12175:30:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12175:30:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "12225:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "12236:2:1",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "12221:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12221:18:1"
                                  },
                                  {
                                    "hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "12241:34:1",
                                    "type": "",
                                    "value": "SafeERC20: ERC20 operation did n"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "12214:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12214:62:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12214:62:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "12296:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "12307:2:1",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "12292:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12292:18:1"
                                  },
                                  {
                                    "hexValue": "6f742073756363656564",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "12312:12:1",
                                    "type": "",
                                    "value": "ot succeed"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "12285:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12285:40:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12285:40:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "12334:27:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "12346:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12357:3:1",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "12342:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12342:19:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "12334:4:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "12112:9:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "12126:4:1",
                            "type": ""
                          }
                        ],
                        "src": "11961:406:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "12546:179:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "12563:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12574:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "12556:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12556:21:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12556:21:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "12597:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "12608:2:1",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "12593:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12593:18:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12613:2:1",
                                    "type": "",
                                    "value": "29"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "12586:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12586:30:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12586:30:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "12636:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "12647:2:1",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "12632:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12632:18:1"
                                  },
                                  {
                                    "hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "12652:31:1",
                                    "type": "",
                                    "value": "Address: call to non-contract"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "12625:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12625:59:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12625:59:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "12693:26:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "12705:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12716:2:1",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "12701:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12701:18:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "12693:4:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "12523:9:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "12537:4:1",
                            "type": ""
                          }
                        ],
                        "src": "12372:353:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "12867:137:1",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "12877:27:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "12897:6:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "12891:5:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12891:13:1"
                              },
                              "variables": [
                                {
                                  "name": "length",
                                  "nodeType": "YulTypedName",
                                  "src": "12881:6:1",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "12939:6:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "12947:4:1",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "12935:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12935:17:1"
                                  },
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "12954:3:1"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "12959:6:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "copy_memory_to_memory",
                                  "nodeType": "YulIdentifier",
                                  "src": "12913:21:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12913:53:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12913:53:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "12975:23:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "12986:3:1"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "12991:6:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "12982:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12982:16:1"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "12975:3:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "12843:3:1",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "12848:6:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "12859:3:1",
                            "type": ""
                          }
                        ],
                        "src": "12730:274:1"
                      }
                    ]
                  },
                  "contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_uint256t_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_enum_MANAGING(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(lt(value, 10)) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_enum$_MANAGING_$690t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_enum_MANAGING(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_enum$_MANAGING_$690t_addresst_address(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_enum_MANAGING(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := abi_decode_address(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_stringliteral_fadc5f22060668047a4e911336f5d0734fc86647a30251cd7b6b0511b7c2b797__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 12)\n        mstore(add(headStart, 64), \"Not accepted\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_70356c467a9713064077b7fa0ff1a074c93b1f7c48415be181b9cd799b628361__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 12)\n        mstore(add(headStart, 64), \"Not approved\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_6f055697f05542780f050f02e169b628baaede4365bd8f2e41b10829d224c674__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Insufficient reserves\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_f193cc9709e57cd43c6930e1643edb6922168fe48dacb7425cd34c9438ee5b15__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"Exceeds debt limit\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4de71fbd3469e1b7fc89a70805ae86972c680281e629f271ab7471fd6321445c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"Ownable: must be new owner to pu\")\n        mstore(add(headStart, 96), \"ll\")\n        tail := add(headStart, 128)\n    }\n    function abi_decode_tuple_t_uint8_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n        value0 := value\n    }\n    function checked_exp_helper(_base, exponent) -> power, base\n    {\n        let power_1 := 1\n        power := power_1\n        base := _base\n        for { } gt(exponent, power_1) { }\n        {\n            if gt(base, div(not(0), base)) { panic_error_0x11() }\n            if and(exponent, power_1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := shr(power_1, exponent)\n        }\n    }\n    function checked_exp_unsigned(base, exponent) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := shl(exponent, 1)\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(base, exponent)\n        if gt(power_1, div(not(0), base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, and(exponent, 0xff))\n    }\n    function panic_error_0x21()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_address_t_bool__to_t_address_t_bool__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), iszero(iszero(value1)))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"SafeMath: addition overflow\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"SafeMath: multiplication overflo\")\n        mstore(add(headStart, 96), \"w\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_aba60747e6633e488f9f393b8420ade3a0b44f9def8d4a3769b0b8220bd2a250__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 10)\n        mstore(add(headStart, 64), \"Must queue\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_20f81a12537dab2de6f63614f9df91e785d8b2db704bbdcc64e781adf7c0e2ff__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"Queue not expired\")\n        tail := add(headStart, 96)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"SafeERC20: ERC20 operation did n\")\n        mstore(add(headStart, 96), \"ot succeed\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Address: call to non-contract\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n}",
                  "id": 1,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "immutableReferences": {
                "692": [
                  {
                    "length": 32,
                    "start": 1516
                  },
                  {
                    "length": 32,
                    "start": 2207
                  },
                  {
                    "length": 32,
                    "start": 2959
                  },
                  {
                    "length": 32,
                    "start": 3182
                  },
                  {
                    "length": 32,
                    "start": 3357
                  },
                  {
                    "length": 32,
                    "start": 5128
                  },
                  {
                    "length": 32,
                    "start": 5667
                  },
                  {
                    "length": 32,
                    "start": 6051
                  }
                ],
                "694": [
                  {
                    "length": 32,
                    "start": 1740
                  },
                  {
                    "length": 32,
                    "start": 6792
                  },
                  {
                    "length": 32,
                    "start": 6890
                  },
                  {
                    "length": 32,
                    "start": 6988
                  },
                  {
                    "length": 32,
                    "start": 7088
                  },
                  {
                    "length": 32,
                    "start": 7195
                  },
                  {
                    "length": 32,
                    "start": 7293
                  },
                  {
                    "length": 32,
                    "start": 7393
                  },
                  {
                    "length": 32,
                    "start": 7493
                  },
                  {
                    "length": 32,
                    "start": 7591
                  },
                  {
                    "length": 32,
                    "start": 7689
                  }
                ]
              },
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b50600436106102f05760003560e01c80638f59c7271161019d578063d031370b116100e9578063ebd83cd8116100a2578063fbfd393b1161007c578063fbfd393b146107b0578063fc7b9c18146107c3578063fd1ec010146107cc578063fff9ee87146107df57600080fd5b8063ebd83cd81461074a578063ee4e19a11461076d578063fb9395881461079057600080fd5b8063d031370b146106b4578063d07f390f146106c7578063d1b317e5146106ee578063d796ffb814610701578063df89b34414610714578063e83afee31461073757600080fd5b8063a6c41fec11610156578063b5b1d56011610130578063b5b1d5601461064e578063bc157ac114610661578063c24ad43e14610674578063cd85641a1461069457600080fd5b8063a6c41fec146105e7578063ab319c9a1461060e578063b1bd38b01461062e57600080fd5b80638f59c727146105455780638f6a7b57146105655780638f840ddd14610578578063932cc8c314610581578063a1210a2d146105a1578063a569e571146105c457600080fd5b80632b7ce5001161025c57806368c31dd51161021557806370a0502a116101ef57806370a0502a146104dc578063788c6c01146104ef578063869871bf1461050f57806387d67dff1461052257600080fd5b806368c31dd5146104935780636a20de92146104b65780636b5e40a7146104c957600080fd5b80632b7ce50014610429578063437f79121461043157806346f68ee914610444578063481c6a75146104575780634e83423c146104685780635a96ac0a1461048b57600080fd5b80630f70431f116102ae5780630f70431f1461038b578063124154ca1461039e57806312422d23146103d157806315079925146103e45780631af4da70146103f75780632789de371461042057600080fd5b8062f714ce146102f55780630619aff11461030a578063089208d81461033a578063094a8651146103425780630b0eee30146103705780630c3513a814610383575b600080fd5b610308610303366004612d1e565b6107ff565b005b61031d610318366004612d4a565b61098b565b6040516001600160a01b0390911681526020015b60405180910390f35b6103086109b5565b610362610350366004612d63565b601b6020526000908152604090205481565b604051908152602001610331565b61030861037e366004612d7e565b610a29565b610362610b82565b610308610399366004612d4a565b610c23565b6103c16103ac366004612d63565b60066020526000908152604090205460ff1681565b6040519015158152602001610331565b6103086103df366004612d1e565b610d76565b601f5461031d906001600160a01b031681565b61031d610405366004612d63565b6011602052600090815260409020546001600160a01b031681565b61036260205481565b610308610fe3565b61031d61043f366004612d4a565b6111a4565b610308610452366004612d63565b6111b4565b6000546001600160a01b031661031d565b6103c1610476366004612d63565b601d6020526000908152604090205460ff1681565b61030861129e565b6103c16104a1366004612d63565b60036020526000908152604090205460ff1681565b6103086104c4366004612d7e565b611364565b61031d6104d7366004612d4a565b6114a8565b61031d6104ea366004612d4a565b6114b8565b6103626104fd366004612d63565b60046020526000908152604090205481565b61031d61051d366004612d4a565b6114c8565b6103c1610530366004612d63565b60096020526000908152604090205460ff1681565b610362610553366004612d63565b600d6020526000908152604090205481565b61031d610573366004612d4a565b6114d8565b61036260215481565b61036261058f366004612d63565b60076020526000908152604090205481565b6103c16105af366004612d63565b600f6020526000908152604090205460ff1681565b6103c16105d2366004612d63565b600c6020526000908152604090205460ff1681565b61031d7f000000000000000000000000000000000000000000000000000000000000000081565b61036261061c366004612d63565b60176020526000908152604090205481565b61036261063c366004612d63565b60146020526000908152604090205481565b61031d61065c366004612d4a565b6114e8565b61036261066f366004612da8565b6114f8565b610362610682366004612d63565b600a6020526000908152604090205481565b6103626106a2366004612d63565b601a6020526000908152604090205481565b61031d6106c2366004612d4a565b6116fd565b6103627f000000000000000000000000000000000000000000000000000000000000000081565b6103626106fc366004612d7e565b61170d565b61030861070f366004612d1e565b6118f1565b6103c1610722366004612d63565b60166020526000908152604090205460ff1681565b6103c1610745366004612dec565b611a2a565b6103c1610758366004612d63565b60136020526000908152604090205460ff1681565b6103c161077b366004612d63565b60196020526000908152604090205460ff1681565b61036261079e366004612d63565b601e6020526000908152604090205481565b6103c16107be366004612e16565b611e94565b61036260225481565b61031d6107da366004612d4a565b61276d565b6103626107ed366004612d63565b60106020526000908152604090205481565b6001600160a01b03811660009081526003602052604090205460ff166108405760405162461bcd60e51b815260040161083790612e59565b60405180910390fd5b3360009081526009602052604090205460ff1615156001146108745760405162461bcd60e51b815260040161083790612e7f565b6000610880828461170d565b60405163079cc67960e41b8152336004820152602481018290529091507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906379cc679090604401600060405180830381600087803b1580156108eb57600080fd5b505af11580156108ff573d6000803e3d6000fd5b5050602154610911925090508261277d565b602181905560405160008051602061317483398151915290600090a26109416001600160a01b03831633856127bf565b60408051848152602081018390526001600160a01b038416917fdf273cb619d95419a9cd0ec88123a0538c85064229baa6363788f743fff90deb91015b60405180910390a2505050565b6012818154811061099b57600080fd5b6000918252602090912001546001600160a01b0316905081565b6000546001600160a01b031633146109df5760405162461bcd60e51b815260040161083790612ea5565b600080546040516001600160a01b03909116907fea8258f2d9ddb679928cf34b78cf645b7feda9acc828e4dd82d014eaae270eba908390a3600080546001600160a01b0319169055565b6001600160a01b0382166000908152600c602052604090205460ff1615610a7e573360009081526016602052604090205460ff16610a795760405162461bcd60e51b815260040161083790612e7f565b610aad565b3360009081526013602052604090205460ff16610aad5760405162461bcd60e51b815260040161083790612e7f565b6000610ab9838361170d565b9050610ac3610b82565b811115610b0a5760405162461bcd60e51b8152602060048201526015602482015274496e73756666696369656e7420726573657276657360581b6044820152606401610837565b602154610b17908261277d565b602181905560405160008051602061317483398151915290600090a2610b476001600160a01b03841633846127bf565b826001600160a01b03167f2bb2640731848fe9820ba48dbc978c1fc9bbd5f11b948bfab05b7dee3378fd808360405161097e91815260200190565b6000610c1e610c156022547f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610beb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c0f9190612eda565b9061277d565b6021549061277d565b905090565b3360009081526019602052604090205460ff16610c525760405162461bcd60e51b815260040161083790612e7f565b60405163079cc67960e41b8152336004820152602481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906379cc679090604401600060405180830381600087803b158015610cba57600080fd5b505af1158015610cce573d6000803e3d6000fd5b5050336000908152601b6020526040902054610ced925090508261277d565b336000908152601b6020526040902055602254610d0a908261277d565b60225560408051828152602081018390527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169133917fc6d98eecfc9c78ab62c89a82950079b54874749f1f6f24090f7acc758bc2f309910160405180910390a350565b3360009081526019602052604090205460ff16610da55760405162461bcd60e51b815260040161083790612e7f565b6001600160a01b03811660009081526003602052604090205460ff16610ddd5760405162461bcd60e51b815260040161083790612e59565b6000610de9828461170d565b601f546040516370a0823160e01b81523360048201529192506000916001600160a01b03909116906370a0823190602401602060405180830381865afa158015610e37573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e5b9190612eda565b336000908152601b602052604081205491925090610e7a90839061277d565b905080831115610ec15760405162461bcd60e51b8152602060048201526012602482015271115e18d959591cc81919589d081b1a5b5a5d60721b6044820152606401610837565b336000908152601b6020526040902054610edb9084612827565b336000908152601b6020526040902055602254610ef89084612827565b602255602154610f08908461277d565b602181905560405160008051602061317483398151915290600090a260405163a9059cbb60e01b8152336004820152602481018690526001600160a01b0385169063a9059cbb906044016020604051808303816000875af1158015610f71573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f959190612ef3565b5060408051868152602081018590526001600160a01b0386169133917f7e1a939bed137a819b5d2979822c67f877689f7a863d5e4cb57cdca97b2977d6910160405180910390a35050505050565b6000546001600160a01b0316331461100d5760405162461bcd60e51b815260040161083790612ea5565b6000805b6002548110156110f0576110dc6110d56002838154811061103457611034612f15565b600091825260209091200154600280546001600160a01b03909216918590811061106057611060612f15565b6000918252602090912001546040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa1580156110b1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106fc9190612eda565b8390612827565b9150806110e881612f41565b915050611011565b5060005b600b54811015611157576111436110d5600b838154811061111757611117612f15565b600091825260209091200154600b80546001600160a01b03909216918590811061106057611060612f15565b91508061114f81612f41565b9150506110f4565b506021819055604051819060008051602061317483398151915290600090a260405181907fec691f09f6924b27932253f85caf99bacc30360cc0e50a1cc4d2acc24601446690600090a250565b6008818154811061099b57600080fd5b6000546001600160a01b031633146111de5760405162461bcd60e51b815260040161083790612ea5565b6001600160a01b0381166112435760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610837565b600080546040516001600160a01b03808516939216917fea8258f2d9ddb679928cf34b78cf645b7feda9acc828e4dd82d014eaae270eba91a3600180546001600160a01b0319166001600160a01b0392909216919091179055565b6001546001600160a01b031633146113035760405162461bcd60e51b815260206004820152602260248201527f4f776e61626c653a206d757374206265206e6577206f776e657220746f2070756044820152611b1b60f21b6064820152608401610837565b600154600080546040516001600160a01b0393841693909116917faa151555690c956fc3ea32f106bb9f119b5237a061eaa8557cff3e51e3792c8d91a3600154600080546001600160a01b0319166001600160a01b03909216919091179055565b336000908152601d602052604090205460ff166113935760405162461bcd60e51b815260040161083790612e7f565b61139b610b82565b8111156113e25760405162461bcd60e51b8152602060048201526015602482015274496e73756666696369656e7420726573657276657360581b6044820152606401610837565b6040516340c10f1960e01b81526001600160a01b038381166004830152602482018390527f000000000000000000000000000000000000000000000000000000000000000016906340c10f1990604401600060405180830381600087803b15801561144c57600080fd5b505af1158015611460573d6000803e3d6000fd5b50506040518381526001600160a01b03851692503391507ffa8ccab40e7da8146c2304cd0950334fd30a6ba093abe86261aa13911fed849c9060200160405180910390a35050565b6005818154811061099b57600080fd5b6015818154811061099b57600080fd5b6018818154811061099b57600080fd5b600e818154811061099b57600080fd5b601c818154811061099b57600080fd5b6001600160a01b03821660009081526003602052604081205460ff168061153757506001600160a01b0383166000908152600c602052604090205460ff165b6115535760405162461bcd60e51b815260040161083790612e59565b6115686001600160a01b038416333087612886565b6001600160a01b03831660009081526003602052604090205460ff16156115bd573360009081526006602052604090205460ff166115b85760405162461bcd60e51b815260040161083790612e7f565b6115ec565b336000908152600f602052604090205460ff166115ec5760405162461bcd60e51b815260040161083790612e7f565b60006115f8848661170d565b9050611604818461277d565b6040516340c10f1960e01b8152336004820152602481018290529092507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906340c10f1990604401600060405180830381600087803b15801561166f57600080fd5b505af1158015611683573d6000803e3d6000fd5b50506021546116959250905082612827565b602181905560405160008051602061317483398151915290600090a260408051868152602081018390526001600160a01b038616917f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a15910160405180910390a2509392505050565b6002818154811061099b57600080fd5b6001600160a01b03821660009081526003602052604081205460ff16156118425761183b836001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa15801561176f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117939190612f5c565b61179e90600a613063565b6118357f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156117ff573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118239190612f5c565b61182e90600a613063565b85906128c4565b90612943565b90506118eb565b6001600160a01b0383166000908152600c602052604090205460ff16156118eb576001600160a01b0383811660008181526011602052604090819020549051634249719f60e01b815260048101929092526024820185905290911690634249719f90604401602060405180830381865afa1580156118c4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118e89190612eda565b90505b92915050565b3360009081526019602052604090205460ff166119205760405162461bcd60e51b815260040161083790612e7f565b6001600160a01b03811660009081526003602052604090205460ff166119585760405162461bcd60e51b815260040161083790612e59565b61196d6001600160a01b038216333085612886565b6000611979828461170d565b336000908152601b6020526040902054909150611996908261277d565b336000908152601b60205260409020556022546119b3908261277d565b6022556021546119c39082612827565b602181905560405160008051602061317483398151915290600090a260408051848152602081018390526001600160a01b0384169133917fc6d98eecfc9c78ab62c89a82950079b54874749f1f6f24090f7acc758bc2f309910160405180910390a3505050565b600080546001600160a01b03163314611a555760405162461bcd60e51b815260040161083790612ea5565b6001600160a01b038216611a6857600080fd5b6000836009811115611a7c57611a7c613072565b1415611aca57611aac437f0000000000000000000000000000000000000000000000000000000000000000612827565b6001600160a01b038316600090815260076020526040902055611e3d565b6001836009811115611ade57611ade613072565b1415611b2c57611b0e437f0000000000000000000000000000000000000000000000000000000000000000612827565b6001600160a01b0383166000908152600a6020526040902055611e3d565b6002836009811115611b4057611b40613072565b1415611b8e57611b70437f0000000000000000000000000000000000000000000000000000000000000000612827565b6001600160a01b038316600090815260046020526040902055611e3d565b6003836009811115611ba257611ba2613072565b1415611bfb57611bdd611bd67f000000000000000000000000000000000000000000000000000000000000000060026128c4565b4390612827565b6001600160a01b038316600090815260146020526040902055611e3d565b6004836009811115611c0f57611c0f613072565b1415611c5d57611c3f437f0000000000000000000000000000000000000000000000000000000000000000612827565b6001600160a01b038316600090815260106020526040902055611e3d565b6005836009811115611c7157611c71613072565b1415611cbf57611ca1437f0000000000000000000000000000000000000000000000000000000000000000612827565b6001600160a01b0383166000908152600d6020526040902055611e3d565b6006836009811115611cd357611cd3613072565b1415611d2557611d07611bd67f000000000000000000000000000000000000000000000000000000000000000060026128c4565b6001600160a01b038316600090815260176020526040902055611e3d565b6007836009811115611d3957611d39613072565b1415611d8757611d69437f0000000000000000000000000000000000000000000000000000000000000000612827565b6001600160a01b0383166000908152601a6020526040902055611e3d565b6008836009811115611d9b57611d9b613072565b1415611de957611dcb437f0000000000000000000000000000000000000000000000000000000000000000612827565b6001600160a01b0383166000908152601e6020526040902055611e3d565b6009836009811115611dfd57611dfd613072565b1415611e3557611e2d437f0000000000000000000000000000000000000000000000000000000000000000612827565b602055611e3d565b5060006118eb565b826009811115611e4f57611e4f613072565b6040516001600160a01b03841681527f0e4f2c4b5bc209d509bc3d49348c787fefadc66a79351b470599ac0f5be52eaf9060200160405180910390a250600192915050565b600080546001600160a01b03163314611ebf5760405162461bcd60e51b815260040161083790612ea5565b6001600160a01b038316611ed257600080fd5b600080856009811115611ee757611ee7613072565b1415611fa357611efa6007600686612985565b15611f73576001600160a01b038416600090815260076020526040812055611f23600585612a65565b611f7357600580546001810182556000919091527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db00180546001600160a01b0319166001600160a01b0386161790555b506001600160a01b0383166000908152600660205260409020805460ff81161560ff19909116811790915561270b565b6001856009811115611fb757611fb7613072565b141561207357611fca600a600986612985565b15612043576001600160a01b0384166000908152600a6020526040812055611ff3600885612a65565b61204357600880546001810182556000919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30180546001600160a01b0319166001600160a01b0386161790555b506001600160a01b0383166000908152600960205260409020805460ff81161560ff19909116811790915561270b565b600285600981111561208757612087613072565b14156121435761209a6004600386612985565b15612113576001600160a01b0384166000908152600460205260408120556120c3600285612a65565b61211357600280546001810182556000919091527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace0180546001600160a01b0319166001600160a01b0386161790555b506001600160a01b0383166000908152600360205260409020805460ff81161560ff19909116811790915561270b565b600385600981111561215757612157613072565b14156122505761216a6014601386612985565b1561222057601280546001810182557fbb8a6a4669ba250d26cd7a459eca9d215f8307e33aebe50379bc5a3617ec34440180546001600160a01b0319166001600160a01b0387169081179091556000908152601460205260408120556121d09085612a65565b61222057601280546001810182556000919091527fbb8a6a4669ba250d26cd7a459eca9d215f8307e33aebe50379bc5a3617ec34440180546001600160a01b0319166001600160a01b0386161790555b506001600160a01b0383166000908152601360205260409020805460ff81161560ff19909116811790915561270b565b600485600981111561226457612264613072565b141561235d576122776010600f86612985565b1561232d57600e80546001810182557fbb7b4a454dc3493923482f07822329ed19e8244eff582cc204f8554c3620c3fd0180546001600160a01b0319166001600160a01b0387169081179091556000908152601060205260408120556122dd9085612a65565b61232d57600e80546001810182556000919091527fbb7b4a454dc3493923482f07822329ed19e8244eff582cc204f8554c3620c3fd0180546001600160a01b0319166001600160a01b0386161790555b506001600160a01b0383166000908152600f60205260409020805460ff81161560ff19909116811790915561270b565b600585600981111561237157612371613072565b141561244f57612384600d600c86612985565b156123fd576001600160a01b0384166000908152600d60205260408120556123ad600b85612a65565b6123fd57600b80546001810182556000919091527f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db90180546001600160a01b0319166001600160a01b0386161790555b506001600160a01b038381166000908152600c60209081526040808320805460ff81161560ff199091168117909155601190925290912080546001600160a01b0319169285169290921790915561270b565b600685600981111561246357612463613072565b141561251f576124766017601686612985565b156124ef576001600160a01b03841660009081526017602052604081205561249f601585612a65565b6124ef57601580546001810182556000919091527f55f448fdea98c4d29eb340757ef0a66cd03dbb9538908a6a81d96026b71ec4750180546001600160a01b0319166001600160a01b0386161790555b506001600160a01b0383166000908152601660205260409020805460ff81161560ff19909116811790915561270b565b600785600981111561253357612533613072565b14156125ef57612546601a601986612985565b156125bf576001600160a01b0384166000908152601a602052604081205561256f601885612a65565b6125bf57601880546001810182556000919091527fb13d2d76d1f4b7be834882e410b3e3a8afaf69f83600ae24db354391d2378d2e0180546001600160a01b0319166001600160a01b0386161790555b506001600160a01b0383166000908152601960205260409020805460ff81161560ff19909116811790915561270b565b600885600981111561260357612603613072565b14156126bf57612616601e601d86612985565b1561268f576001600160a01b0384166000908152601e602052604081205561263f601c85612a65565b61268f57601c80546001810182556000919091527f0e4562a10381dec21b205ed72637e6b1b523bdd0e4d4d50af5cd23dd4500a2110180546001600160a01b0319166001600160a01b0386161790555b506001600160a01b0383166000908152601d60205260409020805460ff81161560ff19909116811790915561270b565b60098560098111156126d3576126d3613072565b141561270157506000602055601f80546001600160a01b0319166001600160a01b038516179055600161270b565b6000915050612766565b84600981111561271d5761271d613072565b604080516001600160a01b038716815283151560208201527f0dcacb7e392f3d6a216ed2660e3dcfd40b7793d33591db2ba185a6b8e44fc477910160405180910390a260019150505b9392505050565b600b818154811061099b57600080fd5b60006118e883836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250612ac5565b6040516001600160a01b03831660248201526044810182905261282290849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152612aff565b505050565b6000806128348385613088565b9050838110156118e85760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f7700000000006044820152606401610837565b6040516001600160a01b03808516602483015283166044820152606481018290526128be9085906323b872dd60e01b906084016127eb565b50505050565b6000826128d3575060006118eb565b60006128df83856130a0565b9050826128ec85836130bf565b146118e85760405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6044820152607760f81b6064820152608401610837565b60006118e883836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250612bd1565b6001600160a01b03811660009081526020839052604081205460ff16612a5b576001600160a01b0382166000908152602085905260409020546129f75760405162461bcd60e51b815260206004820152600a6024820152694d75737420717565756560b01b6044820152606401610837565b6001600160a01b038216600090815260208590526040902054431015612a535760405162461bcd60e51b8152602060048201526011602482015270145d595d59481b9bdd08195e1c1a5c9959607a1b6044820152606401610837565b506001612766565b5060009392505050565b6000805b8354811015612a5b57826001600160a01b0316848281548110612a8e57612a8e612f15565b6000918252602090912001546001600160a01b03161415612ab35760019150506118eb565b80612abd81612f41565b915050612a69565b60008184841115612ae95760405162461bcd60e51b8152600401610837919061310d565b506000612af68486613140565b95945050505050565b6000612b54826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316612bff9092919063ffffffff16565b8051909150156128225780806020019051810190612b729190612ef3565b6128225760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610837565b60008183612bf25760405162461bcd60e51b8152600401610837919061310d565b506000612af684866130bf565b6060612c0e8484600085612c16565b949350505050565b6060843b612c665760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610837565b600080866001600160a01b03168587604051612c829190613157565b60006040518083038185875af1925050503d8060008114612cbf576040519150601f19603f3d011682016040523d82523d6000602084013e612cc4565b606091505b50915091508115612cd8579150612c0e9050565b805115612ce85780518082602001fd5b8360405162461bcd60e51b8152600401610837919061310d565b80356001600160a01b0381168114612d1957600080fd5b919050565b60008060408385031215612d3157600080fd5b82359150612d4160208401612d02565b90509250929050565b600060208284031215612d5c57600080fd5b5035919050565b600060208284031215612d7557600080fd5b6118e882612d02565b60008060408385031215612d9157600080fd5b612d9a83612d02565b946020939093013593505050565b600080600060608486031215612dbd57600080fd5b83359250612dcd60208501612d02565b9150604084013590509250925092565b8035600a8110612d1957600080fd5b60008060408385031215612dff57600080fd5b612e0883612ddd565b9150612d4160208401612d02565b600080600060608486031215612e2b57600080fd5b612e3484612ddd565b9250612e4260208501612d02565b9150612e5060408501612d02565b90509250925092565b6020808252600c908201526b139bdd081858d8d95c1d195960a21b604082015260600190565b6020808252600c908201526b139bdd08185c1c1c9bdd995960a21b604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600060208284031215612eec57600080fd5b5051919050565b600060208284031215612f0557600080fd5b815180151581146118e857600080fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600019821415612f5557612f55612f2b565b5060010190565b600060208284031215612f6e57600080fd5b815160ff811681146118e857600080fd5b600181815b80851115612fba578160001904821115612fa057612fa0612f2b565b80851615612fad57918102915b93841c9390800290612f84565b509250929050565b600082612fd1575060016118eb565b81612fde575060006118eb565b8160018114612ff45760028114612ffe5761301a565b60019150506118eb565b60ff84111561300f5761300f612f2b565b50506001821b6118eb565b5060208310610133831016604e8410600b841016171561303d575081810a6118eb565b6130478383612f7f565b806000190482111561305b5761305b612f2b565b029392505050565b60006118e860ff841683612fc2565b634e487b7160e01b600052602160045260246000fd5b6000821982111561309b5761309b612f2b565b500190565b60008160001904831182151516156130ba576130ba612f2b565b500290565b6000826130dc57634e487b7160e01b600052601260045260246000fd5b500490565b60005b838110156130fc5781810151838201526020016130e4565b838111156128be5750506000910152565b602081526000825180602084015261312c8160408501602087016130e1565b601f01601f19169190910160400192915050565b60008282101561315257613152612f2b565b500390565b600082516131698184602087016130e1565b919091019291505056fe93bb8edd35984706eee1b92541281f7f62d33c01c5b2ec0929a113603bd21d66a2646970667358221220573b48eac61884a9f04927fe7c713ad6ac7427ee097f20fe3395b65c2570c2b264736f6c634300080a0033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2F0 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8F59C727 GT PUSH2 0x19D JUMPI DUP1 PUSH4 0xD031370B GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0xEBD83CD8 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xFBFD393B GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xFBFD393B EQ PUSH2 0x7B0 JUMPI DUP1 PUSH4 0xFC7B9C18 EQ PUSH2 0x7C3 JUMPI DUP1 PUSH4 0xFD1EC010 EQ PUSH2 0x7CC JUMPI DUP1 PUSH4 0xFFF9EE87 EQ PUSH2 0x7DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xEBD83CD8 EQ PUSH2 0x74A JUMPI DUP1 PUSH4 0xEE4E19A1 EQ PUSH2 0x76D JUMPI DUP1 PUSH4 0xFB939588 EQ PUSH2 0x790 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xD031370B EQ PUSH2 0x6B4 JUMPI DUP1 PUSH4 0xD07F390F EQ PUSH2 0x6C7 JUMPI DUP1 PUSH4 0xD1B317E5 EQ PUSH2 0x6EE JUMPI DUP1 PUSH4 0xD796FFB8 EQ PUSH2 0x701 JUMPI DUP1 PUSH4 0xDF89B344 EQ PUSH2 0x714 JUMPI DUP1 PUSH4 0xE83AFEE3 EQ PUSH2 0x737 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA6C41FEC GT PUSH2 0x156 JUMPI DUP1 PUSH4 0xB5B1D560 GT PUSH2 0x130 JUMPI DUP1 PUSH4 0xB5B1D560 EQ PUSH2 0x64E JUMPI DUP1 PUSH4 0xBC157AC1 EQ PUSH2 0x661 JUMPI DUP1 PUSH4 0xC24AD43E EQ PUSH2 0x674 JUMPI DUP1 PUSH4 0xCD85641A EQ PUSH2 0x694 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA6C41FEC EQ PUSH2 0x5E7 JUMPI DUP1 PUSH4 0xAB319C9A EQ PUSH2 0x60E JUMPI DUP1 PUSH4 0xB1BD38B0 EQ PUSH2 0x62E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8F59C727 EQ PUSH2 0x545 JUMPI DUP1 PUSH4 0x8F6A7B57 EQ PUSH2 0x565 JUMPI DUP1 PUSH4 0x8F840DDD EQ PUSH2 0x578 JUMPI DUP1 PUSH4 0x932CC8C3 EQ PUSH2 0x581 JUMPI DUP1 PUSH4 0xA1210A2D EQ PUSH2 0x5A1 JUMPI DUP1 PUSH4 0xA569E571 EQ PUSH2 0x5C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2B7CE500 GT PUSH2 0x25C JUMPI DUP1 PUSH4 0x68C31DD5 GT PUSH2 0x215 JUMPI DUP1 PUSH4 0x70A0502A GT PUSH2 0x1EF JUMPI DUP1 PUSH4 0x70A0502A EQ PUSH2 0x4DC JUMPI DUP1 PUSH4 0x788C6C01 EQ PUSH2 0x4EF JUMPI DUP1 PUSH4 0x869871BF EQ PUSH2 0x50F JUMPI DUP1 PUSH4 0x87D67DFF EQ PUSH2 0x522 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x68C31DD5 EQ PUSH2 0x493 JUMPI DUP1 PUSH4 0x6A20DE92 EQ PUSH2 0x4B6 JUMPI DUP1 PUSH4 0x6B5E40A7 EQ PUSH2 0x4C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2B7CE500 EQ PUSH2 0x429 JUMPI DUP1 PUSH4 0x437F7912 EQ PUSH2 0x431 JUMPI DUP1 PUSH4 0x46F68EE9 EQ PUSH2 0x444 JUMPI DUP1 PUSH4 0x481C6A75 EQ PUSH2 0x457 JUMPI DUP1 PUSH4 0x4E83423C EQ PUSH2 0x468 JUMPI DUP1 PUSH4 0x5A96AC0A EQ PUSH2 0x48B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xF70431F GT PUSH2 0x2AE JUMPI DUP1 PUSH4 0xF70431F EQ PUSH2 0x38B JUMPI DUP1 PUSH4 0x124154CA EQ PUSH2 0x39E JUMPI DUP1 PUSH4 0x12422D23 EQ PUSH2 0x3D1 JUMPI DUP1 PUSH4 0x15079925 EQ PUSH2 0x3E4 JUMPI DUP1 PUSH4 0x1AF4DA70 EQ PUSH2 0x3F7 JUMPI DUP1 PUSH4 0x2789DE37 EQ PUSH2 0x420 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0xF714CE EQ PUSH2 0x2F5 JUMPI DUP1 PUSH4 0x619AFF1 EQ PUSH2 0x30A JUMPI DUP1 PUSH4 0x89208D8 EQ PUSH2 0x33A JUMPI DUP1 PUSH4 0x94A8651 EQ PUSH2 0x342 JUMPI DUP1 PUSH4 0xB0EEE30 EQ PUSH2 0x370 JUMPI DUP1 PUSH4 0xC3513A8 EQ PUSH2 0x383 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x308 PUSH2 0x303 CALLDATASIZE PUSH1 0x4 PUSH2 0x2D1E JUMP JUMPDEST PUSH2 0x7FF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x31D PUSH2 0x318 CALLDATASIZE PUSH1 0x4 PUSH2 0x2D4A JUMP JUMPDEST PUSH2 0x98B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x308 PUSH2 0x9B5 JUMP JUMPDEST PUSH2 0x362 PUSH2 0x350 CALLDATASIZE PUSH1 0x4 PUSH2 0x2D63 JUMP JUMPDEST PUSH1 0x1B PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x331 JUMP JUMPDEST PUSH2 0x308 PUSH2 0x37E CALLDATASIZE PUSH1 0x4 PUSH2 0x2D7E JUMP JUMPDEST PUSH2 0xA29 JUMP JUMPDEST PUSH2 0x362 PUSH2 0xB82 JUMP JUMPDEST PUSH2 0x308 PUSH2 0x399 CALLDATASIZE PUSH1 0x4 PUSH2 0x2D4A JUMP JUMPDEST PUSH2 0xC23 JUMP JUMPDEST PUSH2 0x3C1 PUSH2 0x3AC CALLDATASIZE PUSH1 0x4 PUSH2 0x2D63 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x331 JUMP JUMPDEST PUSH2 0x308 PUSH2 0x3DF CALLDATASIZE PUSH1 0x4 PUSH2 0x2D1E JUMP JUMPDEST PUSH2 0xD76 JUMP JUMPDEST PUSH1 0x1F SLOAD PUSH2 0x31D SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x31D PUSH2 0x405 CALLDATASIZE PUSH1 0x4 PUSH2 0x2D63 JUMP JUMPDEST PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x362 PUSH1 0x20 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x308 PUSH2 0xFE3 JUMP JUMPDEST PUSH2 0x31D PUSH2 0x43F CALLDATASIZE PUSH1 0x4 PUSH2 0x2D4A JUMP JUMPDEST PUSH2 0x11A4 JUMP JUMPDEST PUSH2 0x308 PUSH2 0x452 CALLDATASIZE PUSH1 0x4 PUSH2 0x2D63 JUMP JUMPDEST PUSH2 0x11B4 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x31D JUMP JUMPDEST PUSH2 0x3C1 PUSH2 0x476 CALLDATASIZE PUSH1 0x4 PUSH2 0x2D63 JUMP JUMPDEST PUSH1 0x1D PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x308 PUSH2 0x129E JUMP JUMPDEST PUSH2 0x3C1 PUSH2 0x4A1 CALLDATASIZE PUSH1 0x4 PUSH2 0x2D63 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x308 PUSH2 0x4C4 CALLDATASIZE PUSH1 0x4 PUSH2 0x2D7E JUMP JUMPDEST PUSH2 0x1364 JUMP JUMPDEST PUSH2 0x31D PUSH2 0x4D7 CALLDATASIZE PUSH1 0x4 PUSH2 0x2D4A JUMP JUMPDEST PUSH2 0x14A8 JUMP JUMPDEST PUSH2 0x31D PUSH2 0x4EA CALLDATASIZE PUSH1 0x4 PUSH2 0x2D4A JUMP JUMPDEST PUSH2 0x14B8 JUMP JUMPDEST PUSH2 0x362 PUSH2 0x4FD CALLDATASIZE PUSH1 0x4 PUSH2 0x2D63 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x31D PUSH2 0x51D CALLDATASIZE PUSH1 0x4 PUSH2 0x2D4A JUMP JUMPDEST PUSH2 0x14C8 JUMP JUMPDEST PUSH2 0x3C1 PUSH2 0x530 CALLDATASIZE PUSH1 0x4 PUSH2 0x2D63 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x362 PUSH2 0x553 CALLDATASIZE PUSH1 0x4 PUSH2 0x2D63 JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x31D PUSH2 0x573 CALLDATASIZE PUSH1 0x4 PUSH2 0x2D4A JUMP JUMPDEST PUSH2 0x14D8 JUMP JUMPDEST PUSH2 0x362 PUSH1 0x21 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x362 PUSH2 0x58F CALLDATASIZE PUSH1 0x4 PUSH2 0x2D63 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x3C1 PUSH2 0x5AF CALLDATASIZE PUSH1 0x4 PUSH2 0x2D63 JUMP JUMPDEST PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x3C1 PUSH2 0x5D2 CALLDATASIZE PUSH1 0x4 PUSH2 0x2D63 JUMP JUMPDEST PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x31D PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x362 PUSH2 0x61C CALLDATASIZE PUSH1 0x4 PUSH2 0x2D63 JUMP JUMPDEST PUSH1 0x17 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x362 PUSH2 0x63C CALLDATASIZE PUSH1 0x4 PUSH2 0x2D63 JUMP JUMPDEST PUSH1 0x14 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x31D PUSH2 0x65C CALLDATASIZE PUSH1 0x4 PUSH2 0x2D4A JUMP JUMPDEST PUSH2 0x14E8 JUMP JUMPDEST PUSH2 0x362 PUSH2 0x66F CALLDATASIZE PUSH1 0x4 PUSH2 0x2DA8 JUMP JUMPDEST PUSH2 0x14F8 JUMP JUMPDEST PUSH2 0x362 PUSH2 0x682 CALLDATASIZE PUSH1 0x4 PUSH2 0x2D63 JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x362 PUSH2 0x6A2 CALLDATASIZE PUSH1 0x4 PUSH2 0x2D63 JUMP JUMPDEST PUSH1 0x1A PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x31D PUSH2 0x6C2 CALLDATASIZE PUSH1 0x4 PUSH2 0x2D4A JUMP JUMPDEST PUSH2 0x16FD JUMP JUMPDEST PUSH2 0x362 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x362 PUSH2 0x6FC CALLDATASIZE PUSH1 0x4 PUSH2 0x2D7E JUMP JUMPDEST PUSH2 0x170D JUMP JUMPDEST PUSH2 0x308 PUSH2 0x70F CALLDATASIZE PUSH1 0x4 PUSH2 0x2D1E JUMP JUMPDEST PUSH2 0x18F1 JUMP JUMPDEST PUSH2 0x3C1 PUSH2 0x722 CALLDATASIZE PUSH1 0x4 PUSH2 0x2D63 JUMP JUMPDEST PUSH1 0x16 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x3C1 PUSH2 0x745 CALLDATASIZE PUSH1 0x4 PUSH2 0x2DEC JUMP JUMPDEST PUSH2 0x1A2A JUMP JUMPDEST PUSH2 0x3C1 PUSH2 0x758 CALLDATASIZE PUSH1 0x4 PUSH2 0x2D63 JUMP JUMPDEST PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x3C1 PUSH2 0x77B CALLDATASIZE PUSH1 0x4 PUSH2 0x2D63 JUMP JUMPDEST PUSH1 0x19 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x362 PUSH2 0x79E CALLDATASIZE PUSH1 0x4 PUSH2 0x2D63 JUMP JUMPDEST PUSH1 0x1E PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x3C1 PUSH2 0x7BE CALLDATASIZE PUSH1 0x4 PUSH2 0x2E16 JUMP JUMPDEST PUSH2 0x1E94 JUMP JUMPDEST PUSH2 0x362 PUSH1 0x22 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x31D PUSH2 0x7DA CALLDATASIZE PUSH1 0x4 PUSH2 0x2D4A JUMP JUMPDEST PUSH2 0x276D JUMP JUMPDEST PUSH2 0x362 PUSH2 0x7ED CALLDATASIZE PUSH1 0x4 PUSH2 0x2D63 JUMP JUMPDEST PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x840 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x837 SWAP1 PUSH2 0x2E59 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x874 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x837 SWAP1 PUSH2 0x2E7F JUMP JUMPDEST PUSH1 0x0 PUSH2 0x880 DUP3 DUP5 PUSH2 0x170D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x79CC679 PUSH1 0xE4 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE SWAP1 SWAP2 POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x79CC6790 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x8EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x8FF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x21 SLOAD PUSH2 0x911 SWAP3 POP SWAP1 POP DUP3 PUSH2 0x277D JUMP JUMPDEST PUSH1 0x21 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3174 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x0 SWAP1 LOG2 PUSH2 0x941 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND CALLER DUP6 PUSH2 0x27BF JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP2 PUSH32 0xDF273CB619D95419A9CD0EC88123A0538C85064229BAA6363788F743FFF90DEB SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x12 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x99B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x9DF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x837 SWAP1 PUSH2 0x2EA5 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0xEA8258F2D9DDB679928CF34B78CF645B7FEDA9ACC828E4DD82D014EAAE270EBA SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xA7E JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x16 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xA79 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x837 SWAP1 PUSH2 0x2E7F JUMP JUMPDEST PUSH2 0xAAD JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xAAD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x837 SWAP1 PUSH2 0x2E7F JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAB9 DUP4 DUP4 PUSH2 0x170D JUMP JUMPDEST SWAP1 POP PUSH2 0xAC3 PUSH2 0xB82 JUMP JUMPDEST DUP2 GT ISZERO PUSH2 0xB0A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x496E73756666696369656E74207265736572766573 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x837 JUMP JUMPDEST PUSH1 0x21 SLOAD PUSH2 0xB17 SWAP1 DUP3 PUSH2 0x277D JUMP JUMPDEST PUSH1 0x21 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3174 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x0 SWAP1 LOG2 PUSH2 0xB47 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND CALLER DUP5 PUSH2 0x27BF JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x2BB2640731848FE9820BA48DBC978C1FC9BBD5F11B948BFAB05B7DEE3378FD80 DUP4 PUSH1 0x40 MLOAD PUSH2 0x97E SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC1E PUSH2 0xC15 PUSH1 0x22 SLOAD PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xBEB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC0F SWAP2 SWAP1 PUSH2 0x2EDA JUMP JUMPDEST SWAP1 PUSH2 0x277D JUMP JUMPDEST PUSH1 0x21 SLOAD SWAP1 PUSH2 0x277D JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x19 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xC52 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x837 SWAP1 PUSH2 0x2E7F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x79CC679 PUSH1 0xE4 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x79CC6790 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xCBA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xCCE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1B PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xCED SWAP3 POP SWAP1 POP DUP3 PUSH2 0x277D JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1B PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x22 SLOAD PUSH2 0xD0A SWAP1 DUP3 PUSH2 0x277D JUMP JUMPDEST PUSH1 0x22 SSTORE PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 CALLER SWAP2 PUSH32 0xC6D98EECFC9C78AB62C89A82950079B54874749F1F6F24090F7ACC758BC2F309 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x19 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xDA5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x837 SWAP1 PUSH2 0x2E7F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xDDD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x837 SWAP1 PUSH2 0x2E59 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDE9 DUP3 DUP5 PUSH2 0x170D JUMP JUMPDEST PUSH1 0x1F SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE37 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE5B SWAP2 SWAP1 PUSH2 0x2EDA JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1B PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP2 SWAP3 POP SWAP1 PUSH2 0xE7A SWAP1 DUP4 SWAP1 PUSH2 0x277D JUMP JUMPDEST SWAP1 POP DUP1 DUP4 GT ISZERO PUSH2 0xEC1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x115E18D959591CC81919589D081B1A5B5A5D PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x837 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1B PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xEDB SWAP1 DUP5 PUSH2 0x2827 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1B PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x22 SLOAD PUSH2 0xEF8 SWAP1 DUP5 PUSH2 0x2827 JUMP JUMPDEST PUSH1 0x22 SSTORE PUSH1 0x21 SLOAD PUSH2 0xF08 SWAP1 DUP5 PUSH2 0x277D JUMP JUMPDEST PUSH1 0x21 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3174 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x0 SWAP1 LOG2 PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xF71 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF95 SWAP2 SWAP1 PUSH2 0x2EF3 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP2 CALLER SWAP2 PUSH32 0x7E1A939BED137A819B5D2979822C67F877689F7A863D5E4CB57CDCA97B2977D6 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x100D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x837 SWAP1 PUSH2 0x2EA5 JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0x10F0 JUMPI PUSH2 0x10DC PUSH2 0x10D5 PUSH1 0x2 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x1034 JUMPI PUSH2 0x1034 PUSH2 0x2F15 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 DUP6 SWAP1 DUP2 LT PUSH2 0x1060 JUMPI PUSH2 0x1060 PUSH2 0x2F15 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x10B1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6FC SWAP2 SWAP1 PUSH2 0x2EDA JUMP JUMPDEST DUP4 SWAP1 PUSH2 0x2827 JUMP JUMPDEST SWAP2 POP DUP1 PUSH2 0x10E8 DUP2 PUSH2 0x2F41 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1011 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST PUSH1 0xB SLOAD DUP2 LT ISZERO PUSH2 0x1157 JUMPI PUSH2 0x1143 PUSH2 0x10D5 PUSH1 0xB DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x1117 JUMPI PUSH2 0x1117 PUSH2 0x2F15 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0xB DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 DUP6 SWAP1 DUP2 LT PUSH2 0x1060 JUMPI PUSH2 0x1060 PUSH2 0x2F15 JUMP JUMPDEST SWAP2 POP DUP1 PUSH2 0x114F DUP2 PUSH2 0x2F41 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x10F4 JUMP JUMPDEST POP PUSH1 0x21 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3174 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x0 SWAP1 LOG2 PUSH1 0x40 MLOAD DUP2 SWAP1 PUSH32 0xEC691F09F6924B27932253F85CAF99BACC30360CC0E50A1CC4D2ACC246014466 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x8 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x99B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x11DE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x837 SWAP1 PUSH2 0x2EA5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1243 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x837 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0xEA8258F2D9DDB679928CF34B78CF645B7FEDA9ACC828E4DD82D014EAAE270EBA SWAP2 LOG3 PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1303 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206D757374206265206E6577206F776E657220746F207075 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x1B1B PUSH1 0xF2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x837 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND SWAP4 SWAP1 SWAP2 AND SWAP2 PUSH32 0xAA151555690C956FC3EA32F106BB9F119B5237A061EAA8557CFF3E51E3792C8D SWAP2 LOG3 PUSH1 0x1 SLOAD PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1D PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x1393 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x837 SWAP1 PUSH2 0x2E7F JUMP JUMPDEST PUSH2 0x139B PUSH2 0xB82 JUMP JUMPDEST DUP2 GT ISZERO PUSH2 0x13E2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x496E73756666696369656E74207265736572766573 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x837 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x40C10F19 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP4 SWAP1 MSTORE PUSH32 0x0 AND SWAP1 PUSH4 0x40C10F19 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x144C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1460 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD DUP4 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP3 POP CALLER SWAP2 POP PUSH32 0xFA8CCAB40E7DA8146C2304CD0950334FD30A6BA093ABE86261AA13911FED849C SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x5 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x99B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x15 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x99B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x18 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x99B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xE DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x99B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1C DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x99B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 PUSH2 0x1537 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST PUSH2 0x1553 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x837 SWAP1 PUSH2 0x2E59 JUMP JUMPDEST PUSH2 0x1568 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND CALLER ADDRESS DUP8 PUSH2 0x2886 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x15BD JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x15B8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x837 SWAP1 PUSH2 0x2E7F JUMP JUMPDEST PUSH2 0x15EC JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x15EC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x837 SWAP1 PUSH2 0x2E7F JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15F8 DUP5 DUP7 PUSH2 0x170D JUMP JUMPDEST SWAP1 POP PUSH2 0x1604 DUP2 DUP5 PUSH2 0x277D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x40C10F19 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE SWAP1 SWAP3 POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x40C10F19 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x166F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1683 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x21 SLOAD PUSH2 0x1695 SWAP3 POP SWAP1 POP DUP3 PUSH2 0x2827 JUMP JUMPDEST PUSH1 0x21 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3174 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x0 SWAP1 LOG2 PUSH1 0x40 DUP1 MLOAD DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP2 PUSH32 0x90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x2 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x99B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1842 JUMPI PUSH2 0x183B DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x176F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1793 SWAP2 SWAP1 PUSH2 0x2F5C JUMP JUMPDEST PUSH2 0x179E SWAP1 PUSH1 0xA PUSH2 0x3063 JUMP JUMPDEST PUSH2 0x1835 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x17FF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1823 SWAP2 SWAP1 PUSH2 0x2F5C JUMP JUMPDEST PUSH2 0x182E SWAP1 PUSH1 0xA PUSH2 0x3063 JUMP JUMPDEST DUP6 SWAP1 PUSH2 0x28C4 JUMP JUMPDEST SWAP1 PUSH2 0x2943 JUMP JUMPDEST SWAP1 POP PUSH2 0x18EB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x18EB JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SLOAD SWAP1 MLOAD PUSH4 0x4249719F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x24 DUP3 ADD DUP6 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0x4249719F SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x18C4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x18E8 SWAP2 SWAP1 PUSH2 0x2EDA JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x19 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x1920 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x837 SWAP1 PUSH2 0x2E7F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x1958 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x837 SWAP1 PUSH2 0x2E59 JUMP JUMPDEST PUSH2 0x196D PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND CALLER ADDRESS DUP6 PUSH2 0x2886 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1979 DUP3 DUP5 PUSH2 0x170D JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1B PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH2 0x1996 SWAP1 DUP3 PUSH2 0x277D JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1B PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x22 SLOAD PUSH2 0x19B3 SWAP1 DUP3 PUSH2 0x277D JUMP JUMPDEST PUSH1 0x22 SSTORE PUSH1 0x21 SLOAD PUSH2 0x19C3 SWAP1 DUP3 PUSH2 0x2827 JUMP JUMPDEST PUSH1 0x21 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3174 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x0 SWAP1 LOG2 PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP2 CALLER SWAP2 PUSH32 0xC6D98EECFC9C78AB62C89A82950079B54874749F1F6F24090F7ACC758BC2F309 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1A55 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x837 SWAP1 PUSH2 0x2EA5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1A68 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP4 PUSH1 0x9 DUP2 GT ISZERO PUSH2 0x1A7C JUMPI PUSH2 0x1A7C PUSH2 0x3072 JUMP JUMPDEST EQ ISZERO PUSH2 0x1ACA JUMPI PUSH2 0x1AAC NUMBER PUSH32 0x0 PUSH2 0x2827 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH2 0x1E3D JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x9 DUP2 GT ISZERO PUSH2 0x1ADE JUMPI PUSH2 0x1ADE PUSH2 0x3072 JUMP JUMPDEST EQ ISZERO PUSH2 0x1B2C JUMPI PUSH2 0x1B0E NUMBER PUSH32 0x0 PUSH2 0x2827 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH2 0x1E3D JUMP JUMPDEST PUSH1 0x2 DUP4 PUSH1 0x9 DUP2 GT ISZERO PUSH2 0x1B40 JUMPI PUSH2 0x1B40 PUSH2 0x3072 JUMP JUMPDEST EQ ISZERO PUSH2 0x1B8E JUMPI PUSH2 0x1B70 NUMBER PUSH32 0x0 PUSH2 0x2827 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH2 0x1E3D JUMP JUMPDEST PUSH1 0x3 DUP4 PUSH1 0x9 DUP2 GT ISZERO PUSH2 0x1BA2 JUMPI PUSH2 0x1BA2 PUSH2 0x3072 JUMP JUMPDEST EQ ISZERO PUSH2 0x1BFB JUMPI PUSH2 0x1BDD PUSH2 0x1BD6 PUSH32 0x0 PUSH1 0x2 PUSH2 0x28C4 JUMP JUMPDEST NUMBER SWAP1 PUSH2 0x2827 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x14 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH2 0x1E3D JUMP JUMPDEST PUSH1 0x4 DUP4 PUSH1 0x9 DUP2 GT ISZERO PUSH2 0x1C0F JUMPI PUSH2 0x1C0F PUSH2 0x3072 JUMP JUMPDEST EQ ISZERO PUSH2 0x1C5D JUMPI PUSH2 0x1C3F NUMBER PUSH32 0x0 PUSH2 0x2827 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH2 0x1E3D JUMP JUMPDEST PUSH1 0x5 DUP4 PUSH1 0x9 DUP2 GT ISZERO PUSH2 0x1C71 JUMPI PUSH2 0x1C71 PUSH2 0x3072 JUMP JUMPDEST EQ ISZERO PUSH2 0x1CBF JUMPI PUSH2 0x1CA1 NUMBER PUSH32 0x0 PUSH2 0x2827 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH2 0x1E3D JUMP JUMPDEST PUSH1 0x6 DUP4 PUSH1 0x9 DUP2 GT ISZERO PUSH2 0x1CD3 JUMPI PUSH2 0x1CD3 PUSH2 0x3072 JUMP JUMPDEST EQ ISZERO PUSH2 0x1D25 JUMPI PUSH2 0x1D07 PUSH2 0x1BD6 PUSH32 0x0 PUSH1 0x2 PUSH2 0x28C4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x17 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH2 0x1E3D JUMP JUMPDEST PUSH1 0x7 DUP4 PUSH1 0x9 DUP2 GT ISZERO PUSH2 0x1D39 JUMPI PUSH2 0x1D39 PUSH2 0x3072 JUMP JUMPDEST EQ ISZERO PUSH2 0x1D87 JUMPI PUSH2 0x1D69 NUMBER PUSH32 0x0 PUSH2 0x2827 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1A PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH2 0x1E3D JUMP JUMPDEST PUSH1 0x8 DUP4 PUSH1 0x9 DUP2 GT ISZERO PUSH2 0x1D9B JUMPI PUSH2 0x1D9B PUSH2 0x3072 JUMP JUMPDEST EQ ISZERO PUSH2 0x1DE9 JUMPI PUSH2 0x1DCB NUMBER PUSH32 0x0 PUSH2 0x2827 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1E PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH2 0x1E3D JUMP JUMPDEST PUSH1 0x9 DUP4 PUSH1 0x9 DUP2 GT ISZERO PUSH2 0x1DFD JUMPI PUSH2 0x1DFD PUSH2 0x3072 JUMP JUMPDEST EQ ISZERO PUSH2 0x1E35 JUMPI PUSH2 0x1E2D NUMBER PUSH32 0x0 PUSH2 0x2827 JUMP JUMPDEST PUSH1 0x20 SSTORE PUSH2 0x1E3D JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x18EB JUMP JUMPDEST DUP3 PUSH1 0x9 DUP2 GT ISZERO PUSH2 0x1E4F JUMPI PUSH2 0x1E4F PUSH2 0x3072 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP2 MSTORE PUSH32 0xE4F2C4B5BC209D509BC3D49348C787FEFADC66A79351B470599AC0F5BE52EAF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1EBF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x837 SWAP1 PUSH2 0x2EA5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1ED2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH1 0x9 DUP2 GT ISZERO PUSH2 0x1EE7 JUMPI PUSH2 0x1EE7 PUSH2 0x3072 JUMP JUMPDEST EQ ISZERO PUSH2 0x1FA3 JUMPI PUSH2 0x1EFA PUSH1 0x7 PUSH1 0x6 DUP7 PUSH2 0x2985 JUMP JUMPDEST ISZERO PUSH2 0x1F73 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE PUSH2 0x1F23 PUSH1 0x5 DUP6 PUSH2 0x2A65 JUMP JUMPDEST PUSH2 0x1F73 JUMPI PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB0 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND OR SWAP1 SSTORE JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF DUP2 AND ISZERO PUSH1 0xFF NOT SWAP1 SWAP2 AND DUP2 OR SWAP1 SWAP2 SSTORE PUSH2 0x270B JUMP JUMPDEST PUSH1 0x1 DUP6 PUSH1 0x9 DUP2 GT ISZERO PUSH2 0x1FB7 JUMPI PUSH2 0x1FB7 PUSH2 0x3072 JUMP JUMPDEST EQ ISZERO PUSH2 0x2073 JUMPI PUSH2 0x1FCA PUSH1 0xA PUSH1 0x9 DUP7 PUSH2 0x2985 JUMP JUMPDEST ISZERO PUSH2 0x2043 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE PUSH2 0x1FF3 PUSH1 0x8 DUP6 PUSH2 0x2A65 JUMP JUMPDEST PUSH2 0x2043 JUMPI PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xF3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND OR SWAP1 SSTORE JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF DUP2 AND ISZERO PUSH1 0xFF NOT SWAP1 SWAP2 AND DUP2 OR SWAP1 SWAP2 SSTORE PUSH2 0x270B JUMP JUMPDEST PUSH1 0x2 DUP6 PUSH1 0x9 DUP2 GT ISZERO PUSH2 0x2087 JUMPI PUSH2 0x2087 PUSH2 0x3072 JUMP JUMPDEST EQ ISZERO PUSH2 0x2143 JUMPI PUSH2 0x209A PUSH1 0x4 PUSH1 0x3 DUP7 PUSH2 0x2985 JUMP JUMPDEST ISZERO PUSH2 0x2113 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE PUSH2 0x20C3 PUSH1 0x2 DUP6 PUSH2 0x2A65 JUMP JUMPDEST PUSH2 0x2113 JUMPI PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5ACE ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND OR SWAP1 SSTORE JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF DUP2 AND ISZERO PUSH1 0xFF NOT SWAP1 SWAP2 AND DUP2 OR SWAP1 SWAP2 SSTORE PUSH2 0x270B JUMP JUMPDEST PUSH1 0x3 DUP6 PUSH1 0x9 DUP2 GT ISZERO PUSH2 0x2157 JUMPI PUSH2 0x2157 PUSH2 0x3072 JUMP JUMPDEST EQ ISZERO PUSH2 0x2250 JUMPI PUSH2 0x216A PUSH1 0x14 PUSH1 0x13 DUP7 PUSH2 0x2985 JUMP JUMPDEST ISZERO PUSH2 0x2220 JUMPI PUSH1 0x12 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH32 0xBB8A6A4669BA250D26CD7A459ECA9D215F8307E33AEBE50379BC5A3617EC3444 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x14 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE PUSH2 0x21D0 SWAP1 DUP6 PUSH2 0x2A65 JUMP JUMPDEST PUSH2 0x2220 JUMPI PUSH1 0x12 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xBB8A6A4669BA250D26CD7A459ECA9D215F8307E33AEBE50379BC5A3617EC3444 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND OR SWAP1 SSTORE JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF DUP2 AND ISZERO PUSH1 0xFF NOT SWAP1 SWAP2 AND DUP2 OR SWAP1 SWAP2 SSTORE PUSH2 0x270B JUMP JUMPDEST PUSH1 0x4 DUP6 PUSH1 0x9 DUP2 GT ISZERO PUSH2 0x2264 JUMPI PUSH2 0x2264 PUSH2 0x3072 JUMP JUMPDEST EQ ISZERO PUSH2 0x235D JUMPI PUSH2 0x2277 PUSH1 0x10 PUSH1 0xF DUP7 PUSH2 0x2985 JUMP JUMPDEST ISZERO PUSH2 0x232D JUMPI PUSH1 0xE DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH32 0xBB7B4A454DC3493923482F07822329ED19E8244EFF582CC204F8554C3620C3FD ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE PUSH2 0x22DD SWAP1 DUP6 PUSH2 0x2A65 JUMP JUMPDEST PUSH2 0x232D JUMPI PUSH1 0xE DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xBB7B4A454DC3493923482F07822329ED19E8244EFF582CC204F8554C3620C3FD ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND OR SWAP1 SSTORE JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF DUP2 AND ISZERO PUSH1 0xFF NOT SWAP1 SWAP2 AND DUP2 OR SWAP1 SWAP2 SSTORE PUSH2 0x270B JUMP JUMPDEST PUSH1 0x5 DUP6 PUSH1 0x9 DUP2 GT ISZERO PUSH2 0x2371 JUMPI PUSH2 0x2371 PUSH2 0x3072 JUMP JUMPDEST EQ ISZERO PUSH2 0x244F JUMPI PUSH2 0x2384 PUSH1 0xD PUSH1 0xC DUP7 PUSH2 0x2985 JUMP JUMPDEST ISZERO PUSH2 0x23FD JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE PUSH2 0x23AD PUSH1 0xB DUP6 PUSH2 0x2A65 JUMP JUMPDEST PUSH2 0x23FD JUMPI PUSH1 0xB DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x175B7A638427703F0DBE7BB9BBF987A2551717B34E79F33B5B1008D1FA01DB9 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND OR SWAP1 SSTORE JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF DUP2 AND ISZERO PUSH1 0xFF NOT SWAP1 SWAP2 AND DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x11 SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP3 DUP6 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH2 0x270B JUMP JUMPDEST PUSH1 0x6 DUP6 PUSH1 0x9 DUP2 GT ISZERO PUSH2 0x2463 JUMPI PUSH2 0x2463 PUSH2 0x3072 JUMP JUMPDEST EQ ISZERO PUSH2 0x251F JUMPI PUSH2 0x2476 PUSH1 0x17 PUSH1 0x16 DUP7 PUSH2 0x2985 JUMP JUMPDEST ISZERO PUSH2 0x24EF JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x17 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE PUSH2 0x249F PUSH1 0x15 DUP6 PUSH2 0x2A65 JUMP JUMPDEST PUSH2 0x24EF JUMPI PUSH1 0x15 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x55F448FDEA98C4D29EB340757EF0A66CD03DBB9538908A6A81D96026B71EC475 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND OR SWAP1 SSTORE JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x16 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF DUP2 AND ISZERO PUSH1 0xFF NOT SWAP1 SWAP2 AND DUP2 OR SWAP1 SWAP2 SSTORE PUSH2 0x270B JUMP JUMPDEST PUSH1 0x7 DUP6 PUSH1 0x9 DUP2 GT ISZERO PUSH2 0x2533 JUMPI PUSH2 0x2533 PUSH2 0x3072 JUMP JUMPDEST EQ ISZERO PUSH2 0x25EF JUMPI PUSH2 0x2546 PUSH1 0x1A PUSH1 0x19 DUP7 PUSH2 0x2985 JUMP JUMPDEST ISZERO PUSH2 0x25BF JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1A PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE PUSH2 0x256F PUSH1 0x18 DUP6 PUSH2 0x2A65 JUMP JUMPDEST PUSH2 0x25BF JUMPI PUSH1 0x18 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xB13D2D76D1F4B7BE834882E410B3E3A8AFAF69F83600AE24DB354391D2378D2E ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND OR SWAP1 SSTORE JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x19 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF DUP2 AND ISZERO PUSH1 0xFF NOT SWAP1 SWAP2 AND DUP2 OR SWAP1 SWAP2 SSTORE PUSH2 0x270B JUMP JUMPDEST PUSH1 0x8 DUP6 PUSH1 0x9 DUP2 GT ISZERO PUSH2 0x2603 JUMPI PUSH2 0x2603 PUSH2 0x3072 JUMP JUMPDEST EQ ISZERO PUSH2 0x26BF JUMPI PUSH2 0x2616 PUSH1 0x1E PUSH1 0x1D DUP7 PUSH2 0x2985 JUMP JUMPDEST ISZERO PUSH2 0x268F JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1E PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE PUSH2 0x263F PUSH1 0x1C DUP6 PUSH2 0x2A65 JUMP JUMPDEST PUSH2 0x268F JUMPI PUSH1 0x1C DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xE4562A10381DEC21B205ED72637E6B1B523BDD0E4D4D50AF5CD23DD4500A211 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND OR SWAP1 SSTORE JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1D PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF DUP2 AND ISZERO PUSH1 0xFF NOT SWAP1 SWAP2 AND DUP2 OR SWAP1 SWAP2 SSTORE PUSH2 0x270B JUMP JUMPDEST PUSH1 0x9 DUP6 PUSH1 0x9 DUP2 GT ISZERO PUSH2 0x26D3 JUMPI PUSH2 0x26D3 PUSH2 0x3072 JUMP JUMPDEST EQ ISZERO PUSH2 0x2701 JUMPI POP PUSH1 0x0 PUSH1 0x20 SSTORE PUSH1 0x1F DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND OR SWAP1 SSTORE PUSH1 0x1 PUSH2 0x270B JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP PUSH2 0x2766 JUMP JUMPDEST DUP5 PUSH1 0x9 DUP2 GT ISZERO PUSH2 0x271D JUMPI PUSH2 0x271D PUSH2 0x3072 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP2 MSTORE DUP4 ISZERO ISZERO PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0xDCACB7E392F3D6A216ED2660E3DCFD40B7793D33591DB2BA185A6B8E44FC477 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0xB DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x99B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x18E8 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x2AC5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x2822 SWAP1 DUP5 SWAP1 PUSH4 0xA9059CBB PUSH1 0xE0 SHL SWAP1 PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE PUSH2 0x2AFF JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2834 DUP4 DUP6 PUSH2 0x3088 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x18E8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x837 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x24 DUP4 ADD MSTORE DUP4 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x28BE SWAP1 DUP6 SWAP1 PUSH4 0x23B872DD PUSH1 0xE0 SHL SWAP1 PUSH1 0x84 ADD PUSH2 0x27EB JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x28D3 JUMPI POP PUSH1 0x0 PUSH2 0x18EB JUMP JUMPDEST PUSH1 0x0 PUSH2 0x28DF DUP4 DUP6 PUSH2 0x30A0 JUMP JUMPDEST SWAP1 POP DUP3 PUSH2 0x28EC DUP6 DUP4 PUSH2 0x30BF JUMP JUMPDEST EQ PUSH2 0x18E8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206D756C7469706C69636174696F6E206F766572666C6F PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x77 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x837 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18E8 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH2 0x2BD1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP4 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x2A5B JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP6 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x29F7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x4D757374207175657565 PUSH1 0xB0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x837 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP6 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD NUMBER LT ISZERO PUSH2 0x2A53 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x145D595D59481B9BDD08195E1C1A5C9959 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x837 JUMP JUMPDEST POP PUSH1 0x1 PUSH2 0x2766 JUMP JUMPDEST POP PUSH1 0x0 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST DUP4 SLOAD DUP2 LT ISZERO PUSH2 0x2A5B JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x2A8E JUMPI PUSH2 0x2A8E PUSH2 0x2F15 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x2AB3 JUMPI PUSH1 0x1 SWAP2 POP POP PUSH2 0x18EB JUMP JUMPDEST DUP1 PUSH2 0x2ABD DUP2 PUSH2 0x2F41 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2A69 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0x2AE9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x837 SWAP2 SWAP1 PUSH2 0x310D JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x2AF6 DUP5 DUP7 PUSH2 0x3140 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B54 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2BFF SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x2822 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x2B72 SWAP2 SWAP1 PUSH2 0x2EF3 JUMP JUMPDEST PUSH2 0x2822 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x837 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x2BF2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x837 SWAP2 SWAP1 PUSH2 0x310D JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x2AF6 DUP5 DUP7 PUSH2 0x30BF JUMP JUMPDEST PUSH1 0x60 PUSH2 0x2C0E DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x2C16 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP5 EXTCODESIZE PUSH2 0x2C66 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x837 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x2C82 SWAP2 SWAP1 PUSH2 0x3157 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2CBF JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2CC4 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 ISZERO PUSH2 0x2CD8 JUMPI SWAP2 POP PUSH2 0x2C0E SWAP1 POP JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x2CE8 JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST DUP4 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x837 SWAP2 SWAP1 PUSH2 0x310D JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2D19 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2D31 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x2D41 PUSH1 0x20 DUP5 ADD PUSH2 0x2D02 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2D5C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2D75 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x18E8 DUP3 PUSH2 0x2D02 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2D91 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2D9A DUP4 PUSH2 0x2D02 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2DBD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH2 0x2DCD PUSH1 0x20 DUP6 ADD PUSH2 0x2D02 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0xA DUP2 LT PUSH2 0x2D19 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2DFF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2E08 DUP4 PUSH2 0x2DDD JUMP JUMPDEST SWAP2 POP PUSH2 0x2D41 PUSH1 0x20 DUP5 ADD PUSH2 0x2D02 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2E2B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2E34 DUP5 PUSH2 0x2DDD JUMP JUMPDEST SWAP3 POP PUSH2 0x2E42 PUSH1 0x20 DUP6 ADD PUSH2 0x2D02 JUMP JUMPDEST SWAP2 POP PUSH2 0x2E50 PUSH1 0x40 DUP6 ADD PUSH2 0x2D02 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xC SWAP1 DUP3 ADD MSTORE PUSH12 0x139BDD081858D8D95C1D1959 PUSH1 0xA2 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xC SWAP1 DUP3 ADD MSTORE PUSH12 0x139BDD08185C1C1C9BDD9959 PUSH1 0xA2 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2EEC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2F05 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x18E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x2F55 JUMPI PUSH2 0x2F55 PUSH2 0x2F2B JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2F6E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x18E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0x2FBA JUMPI DUP2 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x2FA0 JUMPI PUSH2 0x2FA0 PUSH2 0x2F2B JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0x2FAD JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0x2F84 JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x2FD1 JUMPI POP PUSH1 0x1 PUSH2 0x18EB JUMP JUMPDEST DUP2 PUSH2 0x2FDE JUMPI POP PUSH1 0x0 PUSH2 0x18EB JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x2FF4 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x2FFE JUMPI PUSH2 0x301A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x18EB JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x300F JUMPI PUSH2 0x300F PUSH2 0x2F2B JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x18EB JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x303D JUMPI POP DUP2 DUP2 EXP PUSH2 0x18EB JUMP JUMPDEST PUSH2 0x3047 DUP4 DUP4 PUSH2 0x2F7F JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x305B JUMPI PUSH2 0x305B PUSH2 0x2F2B JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18E8 PUSH1 0xFF DUP5 AND DUP4 PUSH2 0x2FC2 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x309B JUMPI PUSH2 0x309B PUSH2 0x2F2B JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x30BA JUMPI PUSH2 0x30BA PUSH2 0x2F2B JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x30DC JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x30FC JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x30E4 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x28BE JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x312C DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x30E1 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x3152 JUMPI PUSH2 0x3152 PUSH2 0x2F2B JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x3169 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x30E1 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP INVALID SWAP4 0xBB DUP15 0xDD CALLDATALOAD SWAP9 SELFBALANCE MOD 0xEE 0xE1 0xB9 0x25 COINBASE 0x28 0x1F PUSH32 0x62D33C01C5B2EC0929A113603BD21D66A2646970667358221220573B48EAC618 DUP5 0xA9 CREATE 0x49 0x27 INVALID PUSH29 0x713AD6AC7427EE097F20FE3395B65C2570C2B264736F6C634300080A00 CALLER ",
              "sourceMap": "6320:17528:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11518:519;;;;;;:::i;:::-;;:::i;:::-;;8778:32;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;800:32:1;;;782:51;;770:2;755:18;8778:32:0;;;;;;;;3744:142;;;:::i;9458:48::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;1181:25:1;;;1169:2;1154:18;9458:48:0;1035:177:1;14229:569:0;;;;;;:::i;:::-;;:::i;15275:133::-;;;:::i;13767:328::-;;;;;;:::i;:::-;;:::i;7847:50::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1641:14:1;;1634:22;1616:41;;1604:2;1589:18;7847:50:0;1476:187:1;12171:759:0;;;;;;:::i;:::-;;:::i;9741:19::-;;;;;-1:-1:-1;;;;;9741:19:0;;;8685:49;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;8685:49:0;;;9764:24;;;;;;15551:627;;;:::i;7992:32::-;;;;;;:::i;:::-;;:::i;3890:254::-;;;;;;:::i;:::-;;:::i;3548:82::-;3597:7;3619:6;-1:-1:-1;;;;;3619:6:0;3548:82;;9602:47;;;;;;:::i;:::-;;;;;;;;;;;;;;;;4148:200;;;:::i;7616:46::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;14870:307;;;;;;:::i;:::-;;:::i;7753:34::-;;;;;;:::i;:::-;;:::i;9011:::-;;;;;;:::i;:::-;;:::i;7666:52::-;;;;;;:::i;:::-;;;;;;;;;;;;;;9250:24;;;;;;:::i;:::-;;:::i;8084:48::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;8351:54;;;;;;:::i;:::-;;;;;;;;;;;;;;8440:36;;;;;;:::i;:::-;;:::i;9826:28::-;;;;;;7901:56;;;;;;:::i;:::-;;;;;;;;;;;;;;8536:52;;;;;;:::i;:::-;;;;;;;;;;;;;;;;8299:48;;;;;;:::i;:::-;;;;;;;;;;;;;;;;7462:28;;;;;9159:56;;;;;;:::i;:::-;;;;;;;;;;;;;;8922:54;;;;;;:::i;:::-;;;;;;;;;;;;;;9511:31;;;;;;:::i;:::-;;:::i;10566:812::-;;;;;;:::i;:::-;;:::i;8136:54::-;;;;;;:::i;:::-;;;;;;;;;;;;;;9378:46;;;;;;:::i;:::-;;;;;;;;;;;;;;7544:30;;;;;;:::i;:::-;;:::i;7494:45::-;;;;;16329:454;;;;;;:::i;:::-;;:::i;13086:560::-;;;;;;:::i;:::-;;:::i;9105:50::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;16947:1691;;;;;;:::i;:::-;;:::i;8870:48::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;9334:40;;;;;;:::i;:::-;;;;;;;;;;;;;;;;9653:53;;;;;;:::i;:::-;;;;;;;;;;;;;;18835:4003;;;;;;:::i;:::-;;:::i;9891:24::-;;;;;;8225:32;;;;;;:::i;:::-;;:::i;8592:58::-;;;;;;:::i;:::-;;;;;;;;;;;;;;11518:519;-1:-1:-1;;;;;11592:22:0;;;;;;:14;:22;;;;;;;;11584:47;;;;-1:-1:-1;;;11584:47:0;;;;;;;:::i;:::-;;;;;;;;;11707:10;11690:28;;;;:16;:28;;;;;;;;:36;;:28;:36;11682:61;;;;-1:-1:-1;;;11682:61:0;;;;;;;:::i;:::-;11750:13;11766:29;11779:6;11787:7;11766:12;:29::i;:::-;11801:42;;-1:-1:-1;;;11801:42:0;;11825:10;11801:42;;;3646:51:1;3713:18;;;3706:34;;;11750:45:0;;-1:-1:-1;11811:3:0;-1:-1:-1;;;;;11801:23:0;;;;3619:18:1;;11801:42:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;11866:13:0;;:24;;-1:-1:-1;11866:13:0;-1:-1:-1;11884:5:0;11866:17;:24::i;:::-;11850:13;:40;;;11901:30;;-1:-1:-1;;;;;;;;;;;11901:30:0;;;;11938:48;-1:-1:-1;;;;;11938:27:0;;11966:10;11978:7;11938:27;:48::i;:::-;11998:34;;;3925:25:1;;;3981:2;3966:18;;3959:34;;;-1:-1:-1;;;;;11998:34:0;;;;;3898:18:1;11998:34:0;;;;;;;;11578:459;11518:519;;:::o;8778:32::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;8778:32:0;;-1:-1:-1;8778:32:0;:::o;3744:142::-;3671:6;;-1:-1:-1;;;;;3671:6:0;3681:10;3671:20;3663:65;;;;-1:-1:-1;;;3663:65:0;;;;;;;:::i;:::-;3853:1:::1;3837:6:::0;;3821:35:::1;::::0;-1:-1:-1;;;;;3837:6:0;;::::1;::::0;3821:35:::1;::::0;3853:1;;3821:35:::1;3879:1;3862:19:::0;;-1:-1:-1;;;;;;3862:19:0::1;::::0;;3744:142::o;14229:569::-;-1:-1:-1;;;;;14297:24:0;;;;;;:16;:24;;;;;;;;14293:174;;;14358:10;14339:30;;;;:18;:30;;;;;;;;14331:55;;;;-1:-1:-1;;;14331:55:0;;;;;;;:::i;:::-;14293:174;;;14432:10;14415:28;;;;:16;:28;;;;;;;;14407:53;;;;-1:-1:-1;;;14407:53:0;;;;;;;:::i;:::-;14473:13;14489:29;14502:6;14510:7;14489:12;:29::i;:::-;14473:45;;14564:16;:14;:16::i;:::-;14555:5;:25;;14547:59;;;;-1:-1:-1;;;14547:59:0;;4567:2:1;14547:59:0;;;4549:21:1;4606:2;4586:18;;;4579:30;-1:-1:-1;;;4625:18:1;;;4618:51;4686:18;;14547:59:0;4365:345:1;14547:59:0;14629:13;;:24;;14647:5;14629:17;:24::i;:::-;14613:13;:40;;;14664:30;;-1:-1:-1;;;;;;;;;;;14664:30:0;;;;14701:48;-1:-1:-1;;;;;14701:27:0;;14729:10;14741:7;14701:27;:48::i;:::-;14777:6;-1:-1:-1;;;;;14761:32:0;;14785:7;14761:32;;;;1181:25:1;;1169:2;1154:18;;1035:177;15275:133:0;15322:7;15344:59;15362:40;15392:9;;15369:3;-1:-1:-1;;;;;15362:23:0;;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:29;;:40::i;:::-;15344:13;;;:17;:59::i;:::-;15337:66;;15275:133;:::o;13767:328::-;13842:10;13833:20;;;;:8;:20;;;;;;;;13825:45;;;;-1:-1:-1;;;13825:45:0;;;;;;;:::i;:::-;13877:44;;-1:-1:-1;;;13877:44:0;;13901:10;13877:44;;;3646:51:1;3713:18;;;3706:34;;;13887:3:0;-1:-1:-1;;;;;13877:23:0;;;;3619:18:1;;13877:44:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;13970:10:0;13956:25;;;;:13;:25;;;;;;:38;;-1:-1:-1;13956:25:0;-1:-1:-1;13986:7:0;13956:29;:38::i;:::-;13942:10;13928:25;;;;:13;:25;;;;;:66;14012:9;;:22;;14026:7;14012:13;:22::i;:::-;14000:9;:34;14046:44;;;3925:25:1;;;3981:2;3966:18;;3959:34;;;14068:3:0;-1:-1:-1;;;;;14046:44:0;;14056:10;;14046:44;;3898:18:1;14046:44:0;;;;;;;13767:328;:::o;12171:759::-;12255:10;12246:20;;;;:8;:20;;;;;;;;12238:45;;;;-1:-1:-1;;;12238:45:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;12297:22:0;;;;;;:14;:22;;;;;;;;12289:47;;;;-1:-1:-1;;;12289:47:0;;;;;;;:::i;:::-;12343:13;12359:29;12372:6;12380:7;12359:12;:29::i;:::-;12424:4;;12417:34;;-1:-1:-1;;;12417:34:0;;12440:10;12417:34;;;782:51:1;12343:45:0;;-1:-1:-1;12395:19:0;;-1:-1:-1;;;;;12424:4:0;;;;12417:22;;755:18:1;;12417:34:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12548:10;12494:21;12534:25;;;:13;:25;;;;;;12395:56;;-1:-1:-1;12494:21:0;12518:42;;12395:56;;12518:15;:42::i;:::-;12494:66;;12583:13;12574:5;:22;;12566:53;;;;-1:-1:-1;;;12566:53:0;;5106:2:1;12566:53:0;;;5088:21:1;5145:2;5125:18;;;5118:30;-1:-1:-1;;;5164:18:1;;;5157:48;5222:18;;12566:53:0;4904:342:1;12566:53:0;12668:10;12654:25;;;;:13;:25;;;;;;:36;;12684:5;12654:29;:36::i;:::-;12640:10;12626:25;;;;:13;:25;;;;;:64;12708:9;;:20;;12722:5;12708:13;:20::i;:::-;12696:9;:32;12751:13;;:24;;12769:5;12751:17;:24::i;:::-;12735:13;:40;;;12786:30;;-1:-1:-1;;;;;;;;;;;12786:30:0;;;;12823:44;;-1:-1:-1;;;12823:44:0;;12847:10;12823:44;;;3646:51:1;3713:18;;;3706:34;;;-1:-1:-1;;;;;12823:23:0;;;;;3619:18:1;;12823:44:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;12879:46:0;;;3925:25:1;;;3981:2;3966:18;;3959:34;;;-1:-1:-1;;;;;12879:46:0;;;12890:10;;12879:46;;3898:18:1;12879:46:0;;;;;;;12232:698;;;12171:759;;:::o;15551:627::-;3671:6;;-1:-1:-1;;;;;3671:6:0;3681:10;3671:20;3663:65;;;;-1:-1:-1;;;3663:65:0;;;;;;;:::i;:::-;15603:16:::1;::::0;15625:218:::1;15649:13;:20:::0;15645:24;::::1;15625:218;;;15695:141;15717:111;15741:13;15755:1;15741:16;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;::::0;15776:13:::1;:16:::0;;-1:-1:-1;;;;;15741:16:0;;::::1;::::0;15790:1;;15776:16;::::1;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;::::0;15769:49:::1;::::0;-1:-1:-1;;;15769:49:0;;15812:4:::1;15769:49;::::0;::::1;782:51:1::0;-1:-1:-1;;;;;15776:16:0;;::::1;::::0;15769:34:::1;::::0;755:18:1;;15769:49:0::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;15717:111::-;15695:8:::0;;:12:::1;:141::i;:::-;15684:152:::0;-1:-1:-1;15671:3:0;::::1;::::0;::::1;:::i;:::-;;;;15625:218;;;;15853:9;15848:224;15872:15;:22:::0;15868:26;::::1;15848:224;;;15920:145;15942:115;15966:15;15982:1;15966:18;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;::::0;16003:15:::1;:18:::0;;-1:-1:-1;;;;;15966:18:0;;::::1;::::0;16019:1;;16003:18;::::1;;;;;:::i;15920:145::-;15909:156:::0;-1:-1:-1;15896:3:0;::::1;::::0;::::1;:::i;:::-;;;;15848:224;;;-1:-1:-1::0;16077:13:0::1;:24:::0;;;16112:25:::1;::::0;16093:8;;-1:-1:-1;;;;;;;;;;;16112:25:0;;;::::1;16148;::::0;16164:8;;16148:25:::1;::::0;;;::::1;15597:581;15551:627::o:0;7992:32::-;;;;;;;;;;;;3890:254;3671:6;;-1:-1:-1;;;;;3671:6:0;3681:10;3671:20;3663:65;;;;-1:-1:-1;;;3663:65:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;4001:23:0;::::1;3993:74;;;::::0;-1:-1:-1;;;3993:74:0;;6139:2:1;3993:74:0::1;::::0;::::1;6121:21:1::0;6178:2;6158:18;;;6151:30;6217:34;6197:18;;;6190:62;-1:-1:-1;;;6268:18:1;;;6261:36;6314:19;;3993:74:0::1;5937:402:1::0;3993:74:0::1;4094:6;::::0;;4078:34:::1;::::0;-1:-1:-1;;;;;4078:34:0;;::::1;::::0;4094:6;::::1;::::0;4078:34:::1;::::0;::::1;4118:9;:21:::0;;-1:-1:-1;;;;;;4118:21:0::1;-1:-1:-1::0;;;;;4118:21:0;;;::::1;::::0;;;::::1;::::0;;3890:254::o;4148:200::-;4226:9;;-1:-1:-1;;;;;4226:9:0;4212:10;:23;4204:70;;;;-1:-1:-1;;;4204:70:0;;6546:2:1;4204:70:0;;;6528:21:1;6585:2;6565:18;;;6558:30;6624:34;6604:18;;;6597:62;-1:-1:-1;;;6675:18:1;;;6668:32;6717:19;;4204:70:0;6344:398:1;4204:70:0;4309:9;;;4301:6;;4285:34;;-1:-1:-1;;;;;4309:9:0;;;;4301:6;;;;4285:34;;;4334:9;;;4325:18;;-1:-1:-1;;;;;;4325:18:0;-1:-1:-1;;;;;4334:9:0;;;4325:18;;;;;;4148:200::o;14870:307::-;14967:10;14951:27;;;;:15;:27;;;;;;;;14943:52;;;;-1:-1:-1;;;14943:52:0;;;;;;;:::i;:::-;15020:16;:14;:16::i;:::-;15009:7;:27;;15001:61;;;;-1:-1:-1;;;15001:61:0;;4567:2:1;15001:61:0;;;4549:21:1;4606:2;4586:18;;;4579:30;-1:-1:-1;;;4625:18:1;;;4618:51;4686:18;;15001:61:0;4365:345:1;15001:61:0;15069:45;;-1:-1:-1;;;15069:45:0;;-1:-1:-1;;;;;3664:32:1;;;15069:45:0;;;3646:51:1;3713:18;;;3706:34;;;15084:3:0;15069:24;;;;3619:18:1;;15069:45:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;15126:46:0;;1181:25:1;;;-1:-1:-1;;;;;15126:46:0;;;-1:-1:-1;15140:10:0;;-1:-1:-1;15126:46:0;;1169:2:1;1154:18;15126:46:0;;;;;;;14870:307;;:::o;7753:34::-;;;;;;;;;;;;9011;;;;;;;;;;;;9250:24;;;;;;;;;;;;8440:36;;;;;;;;;;;;9511:31;;;;;;;;;;;;10566:812;-1:-1:-1;;;;;10696:22:0;;10667:13;10696:22;;;:14;:22;;;;;;;;;:50;;-1:-1:-1;;;;;;10722:24:0;;;;;;:16;:24;;;;;;;;10696:50;10688:75;;;;-1:-1:-1;;;10688:75:0;;;;;;;:::i;:::-;10769:67;-1:-1:-1;;;;;10769:31:0;;10801:10;10821:4;10828:7;10769:31;:67::i;:::-;-1:-1:-1;;;;;10847:22:0;;;;;;:14;:22;;;;;;;;10843:176;;;10906:10;10887:30;;;;:18;:30;;;;;;;;10879:55;;;;-1:-1:-1;;;10879:55:0;;;;;;;:::i;:::-;10843:176;;;10984:10;10963:32;;;;:20;:32;;;;;;;;10955:57;;;;-1:-1:-1;;;10955:57:0;;;;;;;:::i;:::-;11025:13;11041:29;11054:6;11062:7;11041:12;:29::i;:::-;11025:45;-1:-1:-1;11175:18:0;11025:45;11185:7;11175:9;:18::i;:::-;11199:43;;-1:-1:-1;;;11199:43:0;;11224:10;11199:43;;;3646:51:1;3713:18;;;3706:34;;;11167:26:0;;-1:-1:-1;11214:3:0;-1:-1:-1;;;;;11199:24:0;;;;3619:18:1;;11199:43:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;11265:13:0;;:24;;-1:-1:-1;11265:13:0;-1:-1:-1;11283:5:0;11265:17;:24::i;:::-;11249:13;:40;;;11300:30;;-1:-1:-1;;;;;;;;;;;11300:30:0;;;;11342:31;;;3925:25:1;;;3981:2;3966:18;;3959:34;;;-1:-1:-1;;;;;11342:31:0;;;;;3898:18:1;11342:31:0;;;;;;;10682:696;10566:812;;;;;:::o;7544:30::-;;;;;;;;;;;;16329:454;-1:-1:-1;;;;;16445:22:0;;16417:14;16445:22;;;:14;:22;;;;;;;;16441:338;;;16532:90;16596:6;-1:-1:-1;;;;;16589:23:0;;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;16585:29;;:2;:29;:::i;:::-;16532:39;16555:3;-1:-1:-1;;;;;16548:20:0;;:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;16544:26;;:2;:26;:::i;:::-;16532:7;;:11;:39::i;:::-;:43;;:90::i;:::-;16523:99;;16441:338;;;-1:-1:-1;;;;;16639:24:0;;;;;;:16;:24;;;;;;;;16635:144;;;-1:-1:-1;;;;;16698:22:0;;;;;;;:14;:22;;;;;;;;16682:90;;-1:-1:-1;;;16682:90:0;;;;;3646:51:1;;;;3713:18;;;3706:34;;;16698:22:0;;;;16682:49;;3619:18:1;;16682:90:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;16673:99;;16635:144;16329:454;;;;:::o;13086:560::-;13181:10;13172:20;;;;:8;:20;;;;;;;;13164:45;;;;-1:-1:-1;;;13164:45:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;13223:22:0;;;;;;:14;:22;;;;;;;;13215:47;;;;-1:-1:-1;;;13215:47:0;;;;;;;:::i;:::-;13269:67;-1:-1:-1;;;;;13269:31:0;;13301:10;13321:4;13328:7;13269:31;:67::i;:::-;13343:13;13359:29;13372:6;13380:7;13359:12;:29::i;:::-;13436:10;13422:25;;;;:13;:25;;;;;;13343:45;;-1:-1:-1;13422:36:0;;13343:45;13422:29;:36::i;:::-;13408:10;13394:25;;;;:13;:25;;;;;:64;13476:9;;:20;;13490:5;13476:13;:20::i;:::-;13464:9;:32;13519:13;;:24;;13537:5;13519:17;:24::i;:::-;13503:13;:40;;;13554:30;;-1:-1:-1;;;;;;;;;;;13554:30:0;;;;13596:45;;;3925:25:1;;;3981:2;3966:18;;3959:34;;;-1:-1:-1;;;;;13596:45:0;;;13606:10;;13596:45;;3898:18:1;13596:45:0;;;;;;;13158:488;13086:560;;:::o;16947:1691::-;17042:4;3671:6;;-1:-1:-1;;;;;3671:6:0;3681:10;3671:20;3663:65;;;;-1:-1:-1;;;3663:65:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;17064:22:0;::::1;17056:31;;;::::0;::::1;;17110:25;17097:9;:38;;;;;;;;:::i;:::-;;17093:1478;;;17190:38;:12;17207:20;17190:16;:38::i;:::-;-1:-1:-1::0;;;;;17156:31:0;::::1;;::::0;;;:21:::1;:31;::::0;;;;:72;17093:1478:::1;;;17258:23;17245:9;:36;;;;;;;;:::i;:::-;;17241:1330;;;17334:38;:12;17351:20;17334:16;:38::i;:::-;-1:-1:-1::0;;;;;17302:29:0;::::1;;::::0;;;:19:::1;:29;::::0;;;;:70;17241:1330:::1;;;17402:21;17389:9;:34;;;;;;;;:::i;:::-;;17385:1186;;;17474:38;:12;17491:20;17474:16;:38::i;:::-;-1:-1:-1::0;;;;;17444:27:0;::::1;;::::0;;;:17:::1;:27;::::0;;;;:68;17385:1186:::1;;;17542:23;17529:9;:36;;;;;;;;:::i;:::-;;17525:1046;;;17618:61;17644:27;:20;17669:1;17644:24;:27::i;:::-;17618:12;::::0;:16:::1;:61::i;:::-;-1:-1:-1::0;;;;;17586:29:0;::::1;;::::0;;;:19:::1;:29;::::0;;;;:93;17525:1046:::1;;;17709:27;17696:9;:40;;;;;;;;:::i;:::-;;17692:879;;;17793:54;:12;17819:20;17793:16;:54::i;:::-;-1:-1:-1::0;;;;;17757:33:0;::::1;;::::0;;;:23:::1;:33;::::0;;;;:90;17692:879:::1;;;17877:23;17864:9;:36;;;;;;;;:::i;:::-;;17860:711;;;17953:38;:12;17970:20;17953:16;:38::i;:::-;-1:-1:-1::0;;;;;17921:29:0;::::1;;::::0;;;:19:::1;:29;::::0;;;;:70;17860:711:::1;;;18021:25;18008:9;:38;;;;;;;;:::i;:::-;;18004:567;;;18101:61;18127:27;:20;18152:1;18127:24;:27::i;18101:61::-;-1:-1:-1::0;;;;;18067:31:0;::::1;;::::0;;;:21:::1;:31;::::0;;;;:95;18004:567:::1;;;18192:15;18179:9;:28;;;;;;;;:::i;:::-;;18175:396;;;18252:38;:12;18269:20;18252:16;:38::i;:::-;-1:-1:-1::0;;;;;18228:21:0;::::1;;::::0;;;:11:::1;:21;::::0;;;;:62;18175:396:::1;;;18320:22;18307:9;:35;;;;;;;;:::i;:::-;;18303:268;;;18394:38;:12;18411:20;18394:16;:38::i;:::-;-1:-1:-1::0;;;;;18363:28:0;::::1;;::::0;;;:18:::1;:28;::::0;;;;:69;18303:268:::1;;;18462:13;18449:9;:26;;;;;;;;:::i;:::-;;18445:126;;;18508:38;:12;18525:20;18508:16;:38::i;:::-;18496:9;:50:::0;18445:126:::1;;;-1:-1:-1::0;18566:5:0::1;18559:12;;18445:126;18596:9;18583:33;;;;;;;;:::i;:::-;;::::0;-1:-1:-1;;;;;800:32:1;;782:51;;18583:33:0::1;::::0;770:2:1;755:18;18583:33:0::1;;;;;;;-1:-1:-1::0;18629:4:0::1;16947:1691:::0;;;;:::o;18835:4003::-;18956:4;3671:6;;-1:-1:-1;;;;;3671:6:0;3681:10;3671:20;3663:65;;;;-1:-1:-1;;;3663:65:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;18976:22:0;::::1;18968:31;;;::::0;::::1;;19005:11;::::0;19026:9:::1;:38;;;;;;;;:::i;:::-;;19022:3738;;;19089:65;19102:21;19125:18;19145:8;19089:12;:65::i;:::-;19085:237;;;-1:-1:-1::0;;;;;19166:31:0;::::1;19200:1;19166:31:::0;;;:21:::1;:31;::::0;;;;:35;19216:41:::1;19229:17;19188:8:::0;19216:12:::1;:41::i;:::-;19211:103;;19271:17;:32:::0;;::::1;::::0;::::1;::::0;;-1:-1:-1;19271:32:0;;;;;::::1;::::0;;-1:-1:-1;;;;;;19271:32:0::1;-1:-1:-1::0;;;;;19271:32:0;::::1;;::::0;;19211:103:::1;-1:-1:-1::0;;;;;;19339:28:0;::::1;;::::0;;;:18:::1;:28;::::0;;;;;;::::1;::::0;::::1;19338:29;-1:-1:-1::0;;19375:37:0;;::::1;::::0;::::1;::::0;;;19022:3738:::1;;;19442:23;19429:9;:36;;;;;;;;:::i;:::-;;19425:3335;;;19490:61;19503:19;19524:16;19542:8;19490:12;:61::i;:::-;19486:227;;;-1:-1:-1::0;;;;;19563:29:0;::::1;19595:1;19563:29:::0;;;:19:::1;:29;::::0;;;;:33;19611:39:::1;19624:15;19583:8:::0;19611:12:::1;:39::i;:::-;19606:99;;19664:15;:30:::0;;::::1;::::0;::::1;::::0;;-1:-1:-1;19664:30:0;;;;;::::1;::::0;;-1:-1:-1;;;;;;19664:30:0::1;-1:-1:-1::0;;;;;19664:30:0;::::1;;::::0;;19606:99:::1;-1:-1:-1::0;;;;;;19730:26:0;::::1;;::::0;;;:16:::1;:26;::::0;;;;;;::::1;::::0;::::1;19729:27;-1:-1:-1::0;;19764:35:0;;::::1;::::0;::::1;::::0;;;19425:3335:::1;;;19829:21;19816:9;:34;;;;;;;;:::i;:::-;;19812:2948;;;19875:57;19888:17;19907:14;19923:8;19875:12;:57::i;:::-;19871:217;;;-1:-1:-1::0;;;;;19944:27:0;::::1;19974:1;19944:27:::0;;;:17:::1;:27;::::0;;;;:31;19990:37:::1;20003:13;19962:8:::0;19990:12:::1;:37::i;:::-;19985:95;;20041:13;:28:::0;;::::1;::::0;::::1;::::0;;-1:-1:-1;20041:28:0;;;;;::::1;::::0;;-1:-1:-1;;;;;;20041:28:0::1;-1:-1:-1::0;;;;;20041:28:0;::::1;;::::0;;19985:95:::1;-1:-1:-1::0;;;;;;20105:24:0;::::1;;::::0;;;:14:::1;:24;::::0;;;;;;::::1;::::0;::::1;20104:25;-1:-1:-1::0;;20137:33:0;;::::1;::::0;::::1;::::0;;;19812:2948:::1;;;20200:23;20187:9;:36;;;;;;;;:::i;:::-;;20183:2577;;;20248:61;20261:19;20282:16;20300:8;20248:12;:61::i;:::-;20244:267;;;20321:15;:30:::0;;::::1;::::0;::::1;::::0;;;::::1;::::0;;-1:-1:-1;;;;;;20321:30:0::1;-1:-1:-1::0;;;;;20321:30:0;::::1;::::0;;::::1;::::0;;;-1:-1:-1;20361:29:0;;;:19:::1;20321:30;20361:29:::0;;;;:33;20409:39:::1;::::0;20321:30;20409:12:::1;:39::i;:::-;20404:99;;20462:15;:30:::0;;::::1;::::0;::::1;::::0;;-1:-1:-1;20462:30:0;;;;;::::1;::::0;;-1:-1:-1;;;;;;20462:30:0::1;-1:-1:-1::0;;;;;20462:30:0;::::1;;::::0;;20404:99:::1;-1:-1:-1::0;;;;;;20528:26:0;::::1;;::::0;;;:16:::1;:26;::::0;;;;;;::::1;::::0;::::1;20527:27;-1:-1:-1::0;;20562:35:0;;::::1;::::0;::::1;::::0;;;20183:2577:::1;;;20627:27;20614:9;:40;;;;;;;;:::i;:::-;;20610:2150;;;20688:69;20701:23;20726:20;20748:8;20688:12;:69::i;:::-;20675:307;;;20776:19;:34:::0;;::::1;::::0;::::1;::::0;;;::::1;::::0;;-1:-1:-1;;;;;;20776:34:0::1;-1:-1:-1::0;;;;;20776:34:0;::::1;::::0;;::::1;::::0;;;-1:-1:-1;20820:33:0;;;:23:::1;20776:34;20820:33:::0;;;;:37;20872:43:::1;::::0;20776:34;20872:12:::1;:43::i;:::-;20867:107;;20929:19;:34:::0;;::::1;::::0;::::1;::::0;;-1:-1:-1;20929:34:0;;;;;::::1;::::0;;-1:-1:-1;;;;;;20929:34:0::1;-1:-1:-1::0;;;;;20929:34:0;::::1;;::::0;;20867:107:::1;-1:-1:-1::0;;;;;;20999:30:0;::::1;;::::0;;;:20:::1;:30;::::0;;;;;;::::1;::::0;::::1;20998:31;-1:-1:-1::0;;21037:39:0;;::::1;::::0;::::1;::::0;;;20610:2150:::1;;;21106:23;21093:9;:36;;;;;;;;:::i;:::-;;21089:1671;;;21154:61;21167:19;21188:16;21206:8;21154:12;:61::i;:::-;21150:227;;;-1:-1:-1::0;;;;;21227:29:0;::::1;21259:1;21227:29:::0;;;:19:::1;:29;::::0;;;;:33;21275:39:::1;21288:15;21247:8:::0;21275:12:::1;:39::i;:::-;21270:99;;21328:15;:30:::0;;::::1;::::0;::::1;::::0;;-1:-1:-1;21328:30:0;;;;;::::1;::::0;;-1:-1:-1;;;;;;21328:30:0::1;-1:-1:-1::0;;;;;21328:30:0;::::1;;::::0;;21270:99:::1;-1:-1:-1::0;;;;;;21394:26:0;;::::1;;::::0;;;:16:::1;:26;::::0;;;;;;;;;::::1;::::0;::::1;21393:27;-1:-1:-1::0;;21428:35:0;;::::1;::::0;::::1;::::0;;;21471:14:::1;:24:::0;;;;;;:38;;-1:-1:-1;;;;;;21471:38:0::1;::::0;;::::1;::::0;;;::::1;::::0;;;21089:1671:::1;;;21539:25;21526:9;:38;;;;;;;;:::i;:::-;;21522:1238;;;21589:65;21602:21;21625:18;21645:8;21589:12;:65::i;:::-;21585:237;;;-1:-1:-1::0;;;;;21666:31:0;::::1;21700:1;21666:31:::0;;;:21:::1;:31;::::0;;;;:35;21716:41:::1;21729:17;21688:8:::0;21716:12:::1;:41::i;:::-;21711:103;;21771:17;:32:::0;;::::1;::::0;::::1;::::0;;-1:-1:-1;21771:32:0;;;;;::::1;::::0;;-1:-1:-1;;;;;;21771:32:0::1;-1:-1:-1::0;;;;;21771:32:0;::::1;;::::0;;21711:103:::1;-1:-1:-1::0;;;;;;21839:28:0;::::1;;::::0;;;:18:::1;:28;::::0;;;;;;::::1;::::0;::::1;21838:29;-1:-1:-1::0;;21875:37:0;;::::1;::::0;::::1;::::0;;;21522:1238:::1;;;21942:15;21929:9;:28;;;;;;;;:::i;:::-;;21925:835;;;21982:45;21995:11;22008:8;22018;21982:12;:45::i;:::-;21978:187;;;-1:-1:-1::0;;;;;22039:21:0;::::1;22063:1;22039:21:::0;;;:11:::1;:21;::::0;;;;:25;22079:31:::1;22092:7;22051:8:::0;22079:12:::1;:31::i;:::-;22074:83;;22124:7;:22:::0;;::::1;::::0;::::1;::::0;;-1:-1:-1;22124:22:0;;;;;::::1;::::0;;-1:-1:-1;;;;;;22124:22:0::1;-1:-1:-1::0;;;;;22124:22:0;::::1;;::::0;;22074:83:::1;-1:-1:-1::0;;;;;;22182:18:0;::::1;;::::0;;;:8:::1;:18;::::0;;;;;;::::1;::::0;::::1;22181:19;-1:-1:-1::0;;22208:27:0;;::::1;::::0;::::1;::::0;;;21925:835:::1;;;22265:22;22252:9;:35;;;;;;;;:::i;:::-;;22248:512;;;22312:59;22325:18;22345:15;22362:8;22312:12;:59::i;:::-;22308:222;;;-1:-1:-1::0;;;;;22383:28:0;::::1;22414:1;22383:28:::0;;;:18:::1;:28;::::0;;;;:32;22430:38:::1;22443:14;22402:8:::0;22430:12:::1;:38::i;:::-;22425:97;;22482:14;:29:::0;;::::1;::::0;::::1;::::0;;-1:-1:-1;22482:29:0;;;;;::::1;::::0;;-1:-1:-1;;;;;;22482:29:0::1;-1:-1:-1::0;;;;;22482:29:0;::::1;;::::0;;22425:97:::1;-1:-1:-1::0;;;;;;22547:25:0;::::1;;::::0;;;:15:::1;:25;::::0;;;;;;::::1;::::0;::::1;22546:26;-1:-1:-1::0;;22580:34:0;;::::1;::::0;::::1;::::0;;;22248:512:::1;;;22644:13;22631:9;:26;;;;;;;;:::i;:::-;;22627:133;;;-1:-1:-1::0;22690:1:0::1;22678:9;:13:::0;22699:4:::1;:15:::0;;-1:-1:-1;;;;;;22699:15:0::1;-1:-1:-1::0;;;;;22699:15:0;::::1;;::::0;;-1:-1:-1;22627:133:0::1;;;22755:5;22748:12;;;;;22627:133;22788:9;22772:44;;;;;;;;:::i;:::-;;::::0;;-1:-1:-1;;;;;8726:32:1;;8708:51;;8802:14;;8795:22;8790:2;8775:18;;8768:50;22772:44:0::1;::::0;8681:18:1;22772:44:0::1;;;;;;;22829:4;22822:11;;;3734:1;18835:4003:::0;;;;;:::o;8225:32::-;;;;;;;;;;;;244:128;302:7;324:43;328:1;331;324:43;;;;;;;;;;;;;;;;;:3;:43::i;5074:203::-;5208:58;;-1:-1:-1;;;;;3664:32:1;;5208:58:0;;;3646:51:1;3713:18;;;3706:34;;;5168:104:0;;5195:5;;-1:-1:-1;;;5231:23:0;3619:18:1;;5208:58:0;;;;-1:-1:-1;;5208:58:0;;;;;;;;;;;;;;-1:-1:-1;;;;;5208:58:0;-1:-1:-1;;;;;;5208:58:0;;;;;;;;;;5168:19;:104::i;:::-;5074:203;;;:::o;78:162::-;136:7;;163:5;167:1;163;:5;:::i;:::-;151:17;;187:1;182;:6;;174:46;;;;-1:-1:-1;;;174:46:0;;9164:2:1;174:46:0;;;9146:21:1;9203:2;9183:18;;;9176:30;9242:29;9222:18;;;9215:57;9289:18;;174:46:0;8962:351:1;5281:235:0;5437:68;;-1:-1:-1;;;;;9576:15:1;;;5437:68:0;;;9558:34:1;9628:15;;9608:18;;;9601:43;9660:18;;;9653:34;;;5397:114:0;;5424:5;;-1:-1:-1;;;5460:27:0;9493:18:1;;5437:68:0;9318:375:1;5397:114:0;5281:235;;;;:::o;569:213::-;627:7;646:6;642:35;;-1:-1:-1;669:1:0;662:8;;642:35;683:9;695:5;699:1;695;:5;:::i;:::-;683:17;-1:-1:-1;723:1:0;714:5;718:1;683:17;714:5;:::i;:::-;:10;706:56;;;;-1:-1:-1;;;706:56:0;;10295:2:1;706:56:0;;;10277:21:1;10334:2;10314:18;;;10307:30;10373:34;10353:18;;;10346:62;-1:-1:-1;;;10424:18:1;;;10417:31;10465:19;;706:56:0;10093:397:1;786:124:0;844:7;866:39;870:1;873;866:39;;;;;;;;;;;;;;;;;:3;:39::i;23073:371::-;-1:-1:-1;;;;;23255:17:0;;23238:4;23255:17;;;;;;;;;;;;;23250:172;;-1:-1:-1;;;;;23290:16:0;;;;;;;;;;;;;;23282:44;;;;-1:-1:-1;;;23282:44:0;;10697:2:1;23282:44:0;;;10679:21:1;10736:2;10716:18;;;10709:30;-1:-1:-1;;;10755:18:1;;;10748:40;10805:18;;23282:44:0;10495:334:1;23282:44:0;-1:-1:-1;;;;;23342:16:0;;;;;;;;;;;;;;23362:12;-1:-1:-1;23342:32:0;23334:62;;;;-1:-1:-1;;;23334:62:0;;11036:2:1;23334:62:0;;;11018:21:1;11075:2;11055:18;;;11048:30;-1:-1:-1;;;11094:18:1;;;11087:47;11151:18;;23334:62:0;10834:341:1;23334:62:0;-1:-1:-1;23411:4:0;23404:11;;23250:172;-1:-1:-1;23434:5:0;23073:371;;;;;:::o;23601:245::-;23699:4;;23713:111;23737:12;;23733:16;;23713:111;;;23780:6;-1:-1:-1;;;;;23768:18:0;:5;23774:1;23768:8;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;23768:8:0;:18;23764:54;;;23805:4;23798:11;;;;;23764:54;23751:3;;;;:::i;:::-;;;;23713:111;;376:189;478:7;509:12;501:6;;;;493:29;;;;-1:-1:-1;;;493:29:0;;;;;;;;:::i;:::-;-1:-1:-1;528:9:0;540:5;544:1;540;:5;:::i;:::-;528:17;376:189;-1:-1:-1;;;;;376:189:0:o;5520:434::-;5596:23;5622:87;5657:4;5622:87;;;;;;;;;;;;;;;;;5630:5;-1:-1:-1;;;;;5622:27:0;;;:87;;;;;:::i;:::-;5719:17;;5596:113;;-1:-1:-1;5719:21:0;5715:235;;5862:10;5851:30;;;;;;;;;;;;:::i;:::-;5834:109;;;;-1:-1:-1;;;5834:109:0;;12163:2:1;5834:109:0;;;12145:21:1;12202:2;12182:18;;;12175:30;12241:34;12221:18;;;12214:62;-1:-1:-1;;;12292:18:1;;;12285:40;12342:19;;5834:109:0;11961:406:1;914:187:0;1016:7;1046:12;1039:5;1031:28;;;;-1:-1:-1;;;1031:28:0;;;;;;;;:::i;:::-;-1:-1:-1;1065:9:0;1077:5;1081:1;1077;:5;:::i;1522:204::-;1641:12;1668:53;1691:6;1699:4;1705:1;1708:12;1668:22;:53::i;:::-;1661:60;1522:204;-1:-1:-1;;;;1522:204:0:o;1730:727::-;1880:12;1467:20;;1900:60;;;;-1:-1:-1;;;1900:60:0;;12574:2:1;1900:60:0;;;12556:21:1;12613:2;12593:18;;;12586:30;12652:31;12632:18;;;12625:59;12701:18;;1900:60:0;12372:353:1;1900:60:0;2023:12;2037:23;2064:6;-1:-1:-1;;;;;2064:11:0;2083:8;2100:4;2064:46;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2022:88;;;;2120:7;2116:337;;;2144:10;-1:-1:-1;2137:17:0;;-1:-1:-1;2137:17:0;2116:337;2179:17;;:21;2175:272;;2318:10;2312:17;2368:15;2355:10;2351:2;2347:19;2340:44;2175:272;2425:12;2418:20;;-1:-1:-1;;;2418:20:0;;;;;;;;:::i;14:173:1:-;82:20;;-1:-1:-1;;;;;131:31:1;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:254::-;260:6;268;321:2;309:9;300:7;296:23;292:32;289:52;;;337:1;334;327:12;289:52;373:9;360:23;350:33;;402:38;436:2;425:9;421:18;402:38;:::i;:::-;392:48;;192:254;;;;;:::o;451:180::-;510:6;563:2;551:9;542:7;538:23;534:32;531:52;;;579:1;576;569:12;531:52;-1:-1:-1;602:23:1;;451:180;-1:-1:-1;451:180:1:o;844:186::-;903:6;956:2;944:9;935:7;931:23;927:32;924:52;;;972:1;969;962:12;924:52;995:29;1014:9;995:29;:::i;1217:254::-;1285:6;1293;1346:2;1334:9;1325:7;1321:23;1317:32;1314:52;;;1362:1;1359;1352:12;1314:52;1385:29;1404:9;1385:29;:::i;:::-;1375:39;1461:2;1446:18;;;;1433:32;;-1:-1:-1;;;1217:254:1:o;1668:322::-;1745:6;1753;1761;1814:2;1802:9;1793:7;1789:23;1785:32;1782:52;;;1830:1;1827;1820:12;1782:52;1866:9;1853:23;1843:33;;1895:38;1929:2;1918:9;1914:18;1895:38;:::i;:::-;1885:48;;1980:2;1969:9;1965:18;1952:32;1942:42;;1668:322;;;;;:::o;1995:150::-;2069:20;;2118:2;2108:13;;2098:41;;2135:1;2132;2125:12;2150:278;2230:6;2238;2291:2;2279:9;2270:7;2266:23;2262:32;2259:52;;;2307:1;2304;2297:12;2259:52;2330:35;2355:9;2330:35;:::i;:::-;2320:45;;2384:38;2418:2;2407:9;2403:18;2384:38;:::i;2433:352::-;2522:6;2530;2538;2591:2;2579:9;2570:7;2566:23;2562:32;2559:52;;;2607:1;2604;2597:12;2559:52;2630:35;2655:9;2630:35;:::i;:::-;2620:45;;2684:38;2718:2;2707:9;2703:18;2684:38;:::i;:::-;2674:48;;2741:38;2775:2;2764:9;2760:18;2741:38;:::i;:::-;2731:48;;2433:352;;;;;:::o;2790:336::-;2992:2;2974:21;;;3031:2;3011:18;;;3004:30;-1:-1:-1;;;3065:2:1;3050:18;;3043:42;3117:2;3102:18;;2790:336::o;3131:::-;3333:2;3315:21;;;3372:2;3352:18;;;3345:30;-1:-1:-1;;;3406:2:1;3391:18;;3384:42;3458:2;3443:18;;3131:336::o;4004:356::-;4206:2;4188:21;;;4225:18;;;4218:30;4284:34;4279:2;4264:18;;4257:62;4351:2;4336:18;;4004:356::o;4715:184::-;4785:6;4838:2;4826:9;4817:7;4813:23;4809:32;4806:52;;;4854:1;4851;4844:12;4806:52;-1:-1:-1;4877:16:1;;4715:184;-1:-1:-1;4715:184:1:o;5251:277::-;5318:6;5371:2;5359:9;5350:7;5346:23;5342:32;5339:52;;;5387:1;5384;5377:12;5339:52;5419:9;5413:16;5472:5;5465:13;5458:21;5451:5;5448:32;5438:60;;5494:1;5491;5484:12;5533:127;5594:10;5589:3;5585:20;5582:1;5575:31;5625:4;5622:1;5615:15;5649:4;5646:1;5639:15;5665:127;5726:10;5721:3;5717:20;5714:1;5707:31;5757:4;5754:1;5747:15;5781:4;5778:1;5771:15;5797:135;5836:3;-1:-1:-1;;5857:17:1;;5854:43;;;5877:18;;:::i;:::-;-1:-1:-1;5924:1:1;5913:13;;5797:135::o;6747:273::-;6815:6;6868:2;6856:9;6847:7;6843:23;6839:32;6836:52;;;6884:1;6881;6874:12;6836:52;6916:9;6910:16;6966:4;6959:5;6955:16;6948:5;6945:27;6935:55;;6986:1;6983;6976:12;7025:422;7114:1;7157:5;7114:1;7171:270;7192:7;7182:8;7179:21;7171:270;;;7251:4;7247:1;7243:6;7239:17;7233:4;7230:27;7227:53;;;7260:18;;:::i;:::-;7310:7;7300:8;7296:22;7293:55;;;7330:16;;;;7293:55;7409:22;;;;7369:15;;;;7171:270;;;7175:3;7025:422;;;;;:::o;7452:806::-;7501:5;7531:8;7521:80;;-1:-1:-1;7572:1:1;7586:5;;7521:80;7620:4;7610:76;;-1:-1:-1;7657:1:1;7671:5;;7610:76;7702:4;7720:1;7715:59;;;;7788:1;7783:130;;;;7695:218;;7715:59;7745:1;7736:10;;7759:5;;;7783:130;7820:3;7810:8;7807:17;7804:43;;;7827:18;;:::i;:::-;-1:-1:-1;;7883:1:1;7869:16;;7898:5;;7695:218;;7997:2;7987:8;7984:16;7978:3;7972:4;7969:13;7965:36;7959:2;7949:8;7946:16;7941:2;7935:4;7932:12;7928:35;7925:77;7922:159;;;-1:-1:-1;8034:19:1;;;8066:5;;7922:159;8113:34;8138:8;8132:4;8113:34;:::i;:::-;8183:6;8179:1;8175:6;8171:19;8162:7;8159:32;8156:58;;;8194:18;;:::i;:::-;8232:20;;7452:806;-1:-1:-1;;;7452:806:1:o;8263:140::-;8321:5;8350:47;8391:4;8381:8;8377:19;8371:4;8350:47;:::i;8408:127::-;8469:10;8464:3;8460:20;8457:1;8450:31;8500:4;8497:1;8490:15;8524:4;8521:1;8514:15;8829:128;8869:3;8900:1;8896:6;8893:1;8890:13;8887:39;;;8906:18;;:::i;:::-;-1:-1:-1;8942:9:1;;8829:128::o;9698:168::-;9738:7;9804:1;9800;9796:6;9792:14;9789:1;9786:21;9781:1;9774:9;9767:17;9763:45;9760:71;;;9811:18;;:::i;:::-;-1:-1:-1;9851:9:1;;9698:168::o;9871:217::-;9911:1;9937;9927:132;;9981:10;9976:3;9972:20;9969:1;9962:31;10016:4;10013:1;10006:15;10044:4;10041:1;10034:15;9927:132;-1:-1:-1;10073:9:1;;9871:217::o;11180:258::-;11252:1;11262:113;11276:6;11273:1;11270:13;11262:113;;;11352:11;;;11346:18;11333:11;;;11326:39;11298:2;11291:10;11262:113;;;11393:6;11390:1;11387:13;11384:48;;;-1:-1:-1;;11428:1:1;11410:16;;11403:27;11180:258::o;11443:383::-;11592:2;11581:9;11574:21;11555:4;11624:6;11618:13;11667:6;11662:2;11651:9;11647:18;11640:34;11683:66;11742:6;11737:2;11726:9;11722:18;11717:2;11709:6;11705:15;11683:66;:::i;:::-;11810:2;11789:15;-1:-1:-1;;11785:29:1;11770:45;;;;11817:2;11766:54;;11443:383;-1:-1:-1;;11443:383:1:o;11831:125::-;11871:4;11899:1;11896;11893:8;11890:34;;;11904:18;;:::i;:::-;-1:-1:-1;11941:9:1;;11831:125::o;12730:274::-;12859:3;12897:6;12891:13;12913:53;12959:6;12954:3;12947:4;12939:6;12935:17;12913:53;:::i;:::-;12982:16;;;;;12730:274;-1:-1:-1;;12730:274:1:o"
            },
            "gasEstimates": {
              "creation": {
                "codeDepositCost": "2549000",
                "executionCost": "infinite",
                "totalCost": "infinite"
              },
              "external": {
                "LiquidityDepositorQueue(address)": "2655",
                "LiquidityManagerQueue(address)": "2613",
                "LiquidityTokenQueue(address)": "2569",
                "OHM()": "infinite",
                "ReserveManagerQueue(address)": "2635",
                "auditReserves()": "infinite",
                "blocksNeededForQueue()": "infinite",
                "bondCalculator(address)": "2685",
                "debtorBalance(address)": "2636",
                "debtorQueue(address)": "2656",
                "debtors(uint256)": "4714",
                "deposit(uint256,address,uint256)": "infinite",
                "excessReserves()": "infinite",
                "incurDebt(uint256,address)": "infinite",
                "isDebtor(address)": "2624",
                "isLiquidityDepositor(address)": "2669",
                "isLiquidityManager(address)": "2668",
                "isLiquidityToken(address)": "2691",
                "isReserveDepositor(address)": "2603",
                "isReserveManager(address)": "2602",
                "isReserveSpender(address)": "2668",
                "isReserveToken(address)": "2603",
                "isRewardManager(address)": "2669",
                "liquidityDepositors(uint256)": "4671",
                "liquidityManagers(uint256)": "4670",
                "liquidityTokens(uint256)": "4713",
                "manage(address,uint256)": "infinite",
                "manager()": "2432",
                "mintRewards(address,uint256)": "infinite",
                "pullManagement()": "34569",
                "pushManagement(address)": "30494",
                "queue(uint8,address)": "infinite",
                "renounceManagement()": "30256",
                "repayDebtWithOHM(uint256)": "infinite",
                "repayDebtWithReserve(uint256,address)": "infinite",
                "reserveDepositorQueue(address)": "2635",
                "reserveDepositors(uint256)": "4715",
                "reserveManagers(uint256)": "4672",
                "reserveSpenderQueue(address)": "2634",
                "reserveSpenders(uint256)": "4671",
                "reserveTokenQueue(address)": "2612",
                "reserveTokens(uint256)": "4648",
                "rewardManagerQueue(address)": "2634",
                "rewardManagers(uint256)": "4670",
                "sOHM()": "2438",
                "sOHMQueue()": "2451",
                "toggle(uint8,address,address)": "infinite",
                "totalDebt()": "2383",
                "totalReserves()": "2385",
                "valueOfToken(address,uint256)": "infinite",
                "withdraw(uint256,address)": "infinite"
              },
              "internal": {
                "listContains(address[] storage pointer,address)": "infinite",
                "requirements(mapping(address => uint256),mapping(address => bool),address)": "infinite"
              }
            },
            "methodIdentifiers": {
              "LiquidityDepositorQueue(address)": "fff9ee87",
              "LiquidityManagerQueue(address)": "ab319c9a",
              "LiquidityTokenQueue(address)": "8f59c727",
              "OHM()": "a6c41fec",
              "ReserveManagerQueue(address)": "b1bd38b0",
              "auditReserves()": "2b7ce500",
              "blocksNeededForQueue()": "d07f390f",
              "bondCalculator(address)": "1af4da70",
              "debtorBalance(address)": "094a8651",
              "debtorQueue(address)": "cd85641a",
              "debtors(uint256)": "869871bf",
              "deposit(uint256,address,uint256)": "bc157ac1",
              "excessReserves()": "0c3513a8",
              "incurDebt(uint256,address)": "12422d23",
              "isDebtor(address)": "ee4e19a1",
              "isLiquidityDepositor(address)": "a1210a2d",
              "isLiquidityManager(address)": "df89b344",
              "isLiquidityToken(address)": "a569e571",
              "isReserveDepositor(address)": "124154ca",
              "isReserveManager(address)": "ebd83cd8",
              "isReserveSpender(address)": "87d67dff",
              "isReserveToken(address)": "68c31dd5",
              "isRewardManager(address)": "4e83423c",
              "liquidityDepositors(uint256)": "8f6a7b57",
              "liquidityManagers(uint256)": "70a0502a",
              "liquidityTokens(uint256)": "fd1ec010",
              "manage(address,uint256)": "0b0eee30",
              "manager()": "481c6a75",
              "mintRewards(address,uint256)": "6a20de92",
              "pullManagement()": "5a96ac0a",
              "pushManagement(address)": "46f68ee9",
              "queue(uint8,address)": "e83afee3",
              "renounceManagement()": "089208d8",
              "repayDebtWithOHM(uint256)": "0f70431f",
              "repayDebtWithReserve(uint256,address)": "d796ffb8",
              "reserveDepositorQueue(address)": "932cc8c3",
              "reserveDepositors(uint256)": "6b5e40a7",
              "reserveManagers(uint256)": "0619aff1",
              "reserveSpenderQueue(address)": "c24ad43e",
              "reserveSpenders(uint256)": "437f7912",
              "reserveTokenQueue(address)": "788c6c01",
              "reserveTokens(uint256)": "d031370b",
              "rewardManagerQueue(address)": "fb939588",
              "rewardManagers(uint256)": "b5b1d560",
              "sOHM()": "15079925",
              "sOHMQueue()": "2789de37",
              "toggle(uint8,address,address)": "fbfd393b",
              "totalDebt()": "fc7b9c18",
              "totalReserves()": "8f840ddd",
              "valueOfToken(address,uint256)": "d1b317e5",
              "withdraw(uint256,address)": "00f714ce"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_OHM\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_DAI\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_Frax\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_blocksNeededForQueue\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"enum MockOlympusTreasury.MANAGING\",\"name\":\"managing\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"activated\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"name\":\"ChangeActivated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"enum MockOlympusTreasury.MANAGING\",\"name\":\"managing\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"queued\",\"type\":\"address\"}],\"name\":\"ChangeQueued\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"debtor\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"CreateDebt\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipPulled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipPushed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"debtor\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"RepayDebt\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"totalReserves\",\"type\":\"uint256\"}],\"name\":\"ReservesAudited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ReservesManaged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"totalReserves\",\"type\":\"uint256\"}],\"name\":\"ReservesUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RewardsMinted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Withdrawal\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"LiquidityDepositorQueue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"LiquidityManagerQueue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"LiquidityTokenQueue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"OHM\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"ReserveManagerQueue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"auditReserves\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"blocksNeededForQueue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"bondCalculator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"debtorBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"debtorQueue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"debtors\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_profit\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"send_\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excessReserves\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"incurDebt\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isDebtor\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isLiquidityDepositor\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isLiquidityManager\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isLiquidityToken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isReserveDepositor\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isReserveManager\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isReserveSpender\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isReserveToken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isRewardManager\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"liquidityDepositors\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"liquidityManagers\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"liquidityTokens\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"manage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"manager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mintRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pullManagement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner_\",\"type\":\"address\"}],\"name\":\"pushManagement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum MockOlympusTreasury.MANAGING\",\"name\":\"_managing\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"queue\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceManagement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"repayDebtWithOHM\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"repayDebtWithReserve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"reserveDepositorQueue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"reserveDepositors\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"reserveManagers\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"reserveSpenderQueue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"reserveSpenders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"reserveTokenQueue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"reserveTokens\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"rewardManagerQueue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"rewardManagers\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sOHM\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sOHMQueue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum MockOlympusTreasury.MANAGING\",\"name\":\"_managing\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_calculator\",\"type\":\"address\"}],\"name\":\"toggle\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalDebt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalReserves\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"valueOfToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"value_\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"deposit(uint256,address,uint256)\":{\"params\":{\"_amount\":\"uint\",\"_profit\":\"uint\",\"_token\":\"address\"},\"returns\":{\"send_\":\"uint\"}},\"excessReserves()\":{\"returns\":{\"_0\":\"uint\"}},\"incurDebt(uint256,address)\":{\"params\":{\"_amount\":\"uint\",\"_token\":\"address\"}},\"manage(address,uint256)\":{\"params\":{\"_amount\":\"uint\",\"_token\":\"address\"}},\"queue(uint8,address)\":{\"params\":{\"_address\":\"address\",\"_managing\":\"MANAGING\"},\"returns\":{\"_0\":\"bool\"}},\"repayDebtWithOHM(uint256)\":{\"params\":{\"_amount\":\"uint\"}},\"repayDebtWithReserve(uint256,address)\":{\"params\":{\"_amount\":\"uint\",\"_token\":\"address\"}},\"toggle(uint8,address,address)\":{\"params\":{\"_address\":\"address\",\"_calculator\":\"address\",\"_managing\":\"MANAGING\"},\"returns\":{\"_0\":\"bool\"}},\"valueOfToken(address,uint256)\":{\"params\":{\"_amount\":\"uint\",\"_token\":\"address\"},\"returns\":{\"value_\":\"uint\"}},\"withdraw(uint256,address)\":{\"params\":{\"_amount\":\"uint\",\"_token\":\"address\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"auditReserves()\":{\"notice\":\"takes inventory of all tracked assetsalways consolidate to recognized reserves before audit\"},\"deposit(uint256,address,uint256)\":{\"notice\":\"allow approved address to deposit an asset for OHM\"},\"excessReserves()\":{\"notice\":\"returns excess reserves not backing tokens\"},\"incurDebt(uint256,address)\":{\"notice\":\"allow approved address to borrow reserves\"},\"manage(address,uint256)\":{\"notice\":\"allow approved address to withdraw assets\"},\"mintRewards(address,uint256)\":{\"notice\":\"send epoch reward to staking contract\"},\"queue(uint8,address)\":{\"notice\":\"queue address to change boolean in mapping\"},\"repayDebtWithOHM(uint256)\":{\"notice\":\"allow approved address to repay borrowed reserves with OHM\"},\"repayDebtWithReserve(uint256,address)\":{\"notice\":\"allow approved address to repay borrowed reserves with reserves\"},\"toggle(uint8,address,address)\":{\"notice\":\"verify queue then set boolean in mapping\"},\"valueOfToken(address,uint256)\":{\"notice\":\"returns OHM valuation of asset\"},\"withdraw(uint256,address)\":{\"notice\":\"allow approved address to burn OHM for reserves\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/mocks/MockTreasury.sol\":\"MockOlympusTreasury\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/mocks/MockTreasury.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.10;\\n\\nlibrary SafeMath {\\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n    uint256 c = a + b;\\n    require(c >= a, \\\"SafeMath: addition overflow\\\");\\n\\n    return c;\\n  }\\n\\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n    return sub(a, b, \\\"SafeMath: subtraction overflow\\\");\\n  }\\n\\n  function sub(\\n    uint256 a,\\n    uint256 b,\\n    string memory errorMessage\\n  ) internal pure returns (uint256) {\\n    require(b <= a, errorMessage);\\n    uint256 c = a - b;\\n\\n    return c;\\n  }\\n\\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n    if (a == 0) {\\n      return 0;\\n    }\\n\\n    uint256 c = a * b;\\n    require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\n\\n    return c;\\n  }\\n\\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n    return div(a, b, \\\"SafeMath: division by zero\\\");\\n  }\\n\\n  function div(\\n    uint256 a,\\n    uint256 b,\\n    string memory errorMessage\\n  ) internal pure returns (uint256) {\\n    require(b > 0, errorMessage);\\n    uint256 c = a / b;\\n    return c;\\n  }\\n}\\n\\nlibrary Address {\\n  function isContract(address account) internal view returns (bool) {\\n    // This method relies in extcodesize, which returns 0 for contracts in\\n    // construction, since the code is only stored at the end of the\\n    // constructor execution.\\n\\n    uint256 size;\\n    // solhint-disable-next-line no-inline-assembly\\n    assembly {\\n      size := extcodesize(account)\\n    }\\n    return size > 0;\\n  }\\n\\n  function functionCall(\\n    address target,\\n    bytes memory data,\\n    string memory errorMessage\\n  ) internal returns (bytes memory) {\\n    return _functionCallWithValue(target, data, 0, errorMessage);\\n  }\\n\\n  function _functionCallWithValue(\\n    address target,\\n    bytes memory data,\\n    uint256 weiValue,\\n    string memory errorMessage\\n  ) private returns (bytes memory) {\\n    require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n    // solhint-disable-next-line avoid-low-level-calls\\n    (bool success, bytes memory returndata) = target.call{value: weiValue}(\\n      data\\n    );\\n    if (success) {\\n      return returndata;\\n    } else {\\n      if (returndata.length > 0) {\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n          let returndata_size := mload(returndata)\\n          revert(add(32, returndata), returndata_size)\\n        }\\n      } else {\\n        revert(errorMessage);\\n      }\\n    }\\n  }\\n\\n  function _verifyCallResult(\\n    bool success,\\n    bytes memory returndata,\\n    string memory errorMessage\\n  ) private pure returns (bytes memory) {\\n    if (success) {\\n      return returndata;\\n    } else {\\n      if (returndata.length > 0) {\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n          let returndata_size := mload(returndata)\\n          revert(add(32, returndata), returndata_size)\\n        }\\n      } else {\\n        revert(errorMessage);\\n      }\\n    }\\n  }\\n}\\n\\ninterface IOwnable {\\n  function manager() external view returns (address);\\n\\n  function renounceManagement() external;\\n\\n  function pushManagement(address newOwner_) external;\\n\\n  function pullManagement() external;\\n}\\n\\ncontract Ownable is IOwnable {\\n  address internal _owner;\\n  address internal _newOwner;\\n\\n  event OwnershipPushed(\\n    address indexed previousOwner,\\n    address indexed newOwner\\n  );\\n  event OwnershipPulled(\\n    address indexed previousOwner,\\n    address indexed newOwner\\n  );\\n\\n  constructor() {\\n    _owner = msg.sender;\\n    emit OwnershipPushed(address(0), _owner);\\n  }\\n\\n  function manager() public view override returns (address) {\\n    return _owner;\\n  }\\n\\n  modifier onlyManager() {\\n    require(_owner == msg.sender, \\\"Ownable: caller is not the owner\\\");\\n    _;\\n  }\\n\\n  function renounceManagement() public virtual override onlyManager {\\n    emit OwnershipPushed(_owner, address(0));\\n    _owner = address(0);\\n  }\\n\\n  function pushManagement(address newOwner_)\\n    public\\n    virtual\\n    override\\n    onlyManager\\n  {\\n    require(newOwner_ != address(0), \\\"Ownable: new owner is the zero address\\\");\\n    emit OwnershipPushed(_owner, newOwner_);\\n    _newOwner = newOwner_;\\n  }\\n\\n  function pullManagement() public virtual override {\\n    require(msg.sender == _newOwner, \\\"Ownable: must be new owner to pull\\\");\\n    emit OwnershipPulled(_owner, _newOwner);\\n    _owner = _newOwner;\\n  }\\n}\\n\\ninterface IERC20 {\\n  function decimals() external view returns (uint8);\\n\\n  function balanceOf(address account) external view returns (uint256);\\n\\n  function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n  function approve(address spender, uint256 amount) external returns (bool);\\n\\n  function totalSupply() external view returns (uint256);\\n\\n  function transferFrom(\\n    address sender,\\n    address recipient,\\n    uint256 amount\\n  ) external returns (bool);\\n\\n  event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n  event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\\nlibrary SafeERC20 {\\n  using SafeMath for uint256;\\n  using Address for address;\\n\\n  function safeTransfer(\\n    IERC20 token,\\n    address to,\\n    uint256 value\\n  ) internal {\\n    _callOptionalReturn(\\n      token,\\n      abi.encodeWithSelector(token.transfer.selector, to, value)\\n    );\\n  }\\n\\n  function safeTransferFrom(\\n    IERC20 token,\\n    address from,\\n    address to,\\n    uint256 value\\n  ) internal {\\n    _callOptionalReturn(\\n      token,\\n      abi.encodeWithSelector(token.transferFrom.selector, from, to, value)\\n    );\\n  }\\n\\n  function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n    bytes memory returndata = address(token).functionCall(\\n      data,\\n      \\\"SafeERC20: low-level call failed\\\"\\n    );\\n    if (returndata.length > 0) {\\n      // Return data is optional\\n      // solhint-disable-next-line max-line-length\\n      require(\\n        abi.decode(returndata, (bool)),\\n        \\\"SafeERC20: ERC20 operation did not succeed\\\"\\n      );\\n    }\\n  }\\n}\\n\\ninterface IERC20Mintable {\\n  function mint(uint256 amount_) external;\\n\\n  function mint(address account_, uint256 ammount_) external;\\n}\\n\\ninterface IOHMERC20 {\\n  function burnFrom(address account_, uint256 amount_) external;\\n}\\n\\ninterface IBondCalculator {\\n  function valuation(address pair_, uint256 amount_)\\n    external\\n    view\\n    returns (uint256 _value);\\n}\\n\\ncontract MockOlympusTreasury is Ownable {\\n  using SafeMath for uint256;\\n  using SafeERC20 for IERC20;\\n\\n  event Deposit(address indexed token, uint256 amount, uint256 value);\\n  event Withdrawal(address indexed token, uint256 amount, uint256 value);\\n  event CreateDebt(\\n    address indexed debtor,\\n    address indexed token,\\n    uint256 amount,\\n    uint256 value\\n  );\\n  event RepayDebt(\\n    address indexed debtor,\\n    address indexed token,\\n    uint256 amount,\\n    uint256 value\\n  );\\n  event ReservesManaged(address indexed token, uint256 amount);\\n  event ReservesUpdated(uint256 indexed totalReserves);\\n  event ReservesAudited(uint256 indexed totalReserves);\\n  event RewardsMinted(\\n    address indexed caller,\\n    address indexed recipient,\\n    uint256 amount\\n  );\\n  event ChangeQueued(MANAGING indexed managing, address queued);\\n  event ChangeActivated(\\n    MANAGING indexed managing,\\n    address activated,\\n    bool result\\n  );\\n\\n  enum MANAGING {\\n    RESERVEDEPOSITOR,\\n    RESERVESPENDER,\\n    RESERVETOKEN,\\n    RESERVEMANAGER,\\n    LIQUIDITYDEPOSITOR,\\n    LIQUIDITYTOKEN,\\n    LIQUIDITYMANAGER,\\n    DEBTOR,\\n    REWARDMANAGER,\\n    SOHM\\n  }\\n\\n  address public immutable OHM;\\n  uint256 public immutable blocksNeededForQueue;\\n\\n  address[] public reserveTokens; // Push only, beware false-positives.\\n  mapping(address => bool) public isReserveToken;\\n  mapping(address => uint256) public reserveTokenQueue; // Delays changes to mapping.\\n\\n  address[] public reserveDepositors; // Push only, beware false-positives. Only for viewing.\\n  mapping(address => bool) public isReserveDepositor;\\n  mapping(address => uint256) public reserveDepositorQueue; // Delays changes to mapping.\\n\\n  address[] public reserveSpenders; // Push only, beware false-positives. Only for viewing.\\n  mapping(address => bool) public isReserveSpender;\\n  mapping(address => uint256) public reserveSpenderQueue; // Delays changes to mapping.\\n\\n  address[] public liquidityTokens; // Push only, beware false-positives.\\n  mapping(address => bool) public isLiquidityToken;\\n  mapping(address => uint256) public LiquidityTokenQueue; // Delays changes to mapping.\\n\\n  address[] public liquidityDepositors; // Push only, beware false-positives. Only for viewing.\\n  mapping(address => bool) public isLiquidityDepositor;\\n  mapping(address => uint256) public LiquidityDepositorQueue; // Delays changes to mapping.\\n\\n  mapping(address => address) public bondCalculator; // bond calculator for liquidity token\\n\\n  address[] public reserveManagers; // Push only, beware false-positives. Only for viewing.\\n  mapping(address => bool) public isReserveManager;\\n  mapping(address => uint256) public ReserveManagerQueue; // Delays changes to mapping.\\n\\n  address[] public liquidityManagers; // Push only, beware false-positives. Only for viewing.\\n  mapping(address => bool) public isLiquidityManager;\\n  mapping(address => uint256) public LiquidityManagerQueue; // Delays changes to mapping.\\n\\n  address[] public debtors; // Push only, beware false-positives. Only for viewing.\\n  mapping(address => bool) public isDebtor;\\n  mapping(address => uint256) public debtorQueue; // Delays changes to mapping.\\n  mapping(address => uint256) public debtorBalance;\\n\\n  address[] public rewardManagers; // Push only, beware false-positives. Only for viewing.\\n  mapping(address => bool) public isRewardManager;\\n  mapping(address => uint256) public rewardManagerQueue; // Delays changes to mapping.\\n\\n  address public sOHM;\\n  uint256 public sOHMQueue; // Delays change to sOHM address\\n\\n  uint256 public totalReserves; // Risk-free value of all assets\\n  uint256 public totalDebt;\\n\\n  constructor(\\n    address _OHM,\\n    address _DAI,\\n    address _Frax,\\n    //address _OHMDAI,\\n    uint256 _blocksNeededForQueue\\n  ) {\\n    require(_OHM != address(0));\\n    OHM = _OHM;\\n\\n    isReserveToken[_DAI] = true;\\n    reserveTokens.push(_DAI);\\n\\n    isReserveToken[_Frax] = true;\\n    reserveTokens.push(_Frax);\\n\\n    // isLiquidityToken[ _OHMDAI ] = true;\\n    // liquidityTokens.push( _OHMDAI );\\n\\n    blocksNeededForQueue = _blocksNeededForQueue;\\n  }\\n\\n  /**\\n        @notice allow approved address to deposit an asset for OHM\\n        @param _amount uint\\n        @param _token address\\n        @param _profit uint\\n        @return send_ uint\\n     */\\n  function deposit(\\n    uint256 _amount,\\n    address _token,\\n    uint256 _profit\\n  ) external returns (uint256 send_) {\\n    require(isReserveToken[_token] || isLiquidityToken[_token], \\\"Not accepted\\\");\\n    IERC20(_token).safeTransferFrom(msg.sender, address(this), _amount);\\n\\n    if (isReserveToken[_token]) {\\n      require(isReserveDepositor[msg.sender], \\\"Not approved\\\");\\n    } else {\\n      require(isLiquidityDepositor[msg.sender], \\\"Not approved\\\");\\n    }\\n\\n    uint256 value = valueOfToken(_token, _amount);\\n    (_token, _amount);\\n    // mint OHM needed and store amount of rewards for distribution\\n    send_ = value.sub(_profit);\\n    IERC20Mintable(OHM).mint(msg.sender, send_);\\n\\n    totalReserves = totalReserves.add(value);\\n    emit ReservesUpdated(totalReserves);\\n\\n    emit Deposit(_token, _amount, value);\\n  }\\n\\n  /**\\n        @notice allow approved address to burn OHM for reserves\\n        @param _amount uint\\n        @param _token address\\n     */\\n  function withdraw(uint256 _amount, address _token) external {\\n    require(isReserveToken[_token], \\\"Not accepted\\\"); // Only reserves can be used for redemptions\\n    require(isReserveSpender[msg.sender] == true, \\\"Not approved\\\");\\n\\n    uint256 value = valueOfToken(_token, _amount);\\n    IOHMERC20(OHM).burnFrom(msg.sender, value);\\n\\n    totalReserves = totalReserves.sub(value);\\n    emit ReservesUpdated(totalReserves);\\n\\n    IERC20(_token).safeTransfer(msg.sender, _amount);\\n\\n    emit Withdrawal(_token, _amount, value);\\n  }\\n\\n  /**\\n        @notice allow approved address to borrow reserves\\n        @param _amount uint\\n        @param _token address\\n     */\\n  function incurDebt(uint256 _amount, address _token) external {\\n    require(isDebtor[msg.sender], \\\"Not approved\\\");\\n    require(isReserveToken[_token], \\\"Not accepted\\\");\\n\\n    uint256 value = valueOfToken(_token, _amount);\\n\\n    uint256 maximumDebt = IERC20(sOHM).balanceOf(msg.sender); // Can only borrow against sOHM held\\n    uint256 availableDebt = maximumDebt.sub(debtorBalance[msg.sender]);\\n    require(value <= availableDebt, \\\"Exceeds debt limit\\\");\\n\\n    debtorBalance[msg.sender] = debtorBalance[msg.sender].add(value);\\n    totalDebt = totalDebt.add(value);\\n\\n    totalReserves = totalReserves.sub(value);\\n    emit ReservesUpdated(totalReserves);\\n\\n    IERC20(_token).transfer(msg.sender, _amount);\\n\\n    emit CreateDebt(msg.sender, _token, _amount, value);\\n  }\\n\\n  /**\\n        @notice allow approved address to repay borrowed reserves with reserves\\n        @param _amount uint\\n        @param _token address\\n     */\\n  function repayDebtWithReserve(uint256 _amount, address _token) external {\\n    require(isDebtor[msg.sender], \\\"Not approved\\\");\\n    require(isReserveToken[_token], \\\"Not accepted\\\");\\n\\n    IERC20(_token).safeTransferFrom(msg.sender, address(this), _amount);\\n\\n    uint256 value = valueOfToken(_token, _amount);\\n    debtorBalance[msg.sender] = debtorBalance[msg.sender].sub(value);\\n    totalDebt = totalDebt.sub(value);\\n\\n    totalReserves = totalReserves.add(value);\\n    emit ReservesUpdated(totalReserves);\\n\\n    emit RepayDebt(msg.sender, _token, _amount, value);\\n  }\\n\\n  /**\\n        @notice allow approved address to repay borrowed reserves with OHM\\n        @param _amount uint\\n     */\\n  function repayDebtWithOHM(uint256 _amount) external {\\n    require(isDebtor[msg.sender], \\\"Not approved\\\");\\n\\n    IOHMERC20(OHM).burnFrom(msg.sender, _amount);\\n\\n    debtorBalance[msg.sender] = debtorBalance[msg.sender].sub(_amount);\\n    totalDebt = totalDebt.sub(_amount);\\n\\n    emit RepayDebt(msg.sender, OHM, _amount, _amount);\\n  }\\n\\n  /**\\n        @notice allow approved address to withdraw assets\\n        @param _token address\\n        @param _amount uint\\n     */\\n  function manage(address _token, uint256 _amount) external {\\n    if (isLiquidityToken[_token]) {\\n      require(isLiquidityManager[msg.sender], \\\"Not approved\\\");\\n    } else {\\n      require(isReserveManager[msg.sender], \\\"Not approved\\\");\\n    }\\n\\n    uint256 value = valueOfToken(_token, _amount);\\n    (_token, _amount);\\n    require(value <= excessReserves(), \\\"Insufficient reserves\\\");\\n\\n    totalReserves = totalReserves.sub(value);\\n    emit ReservesUpdated(totalReserves);\\n\\n    IERC20(_token).safeTransfer(msg.sender, _amount);\\n\\n    emit ReservesManaged(_token, _amount);\\n  }\\n\\n  /**\\n        @notice send epoch reward to staking contract\\n     */\\n  function mintRewards(address _recipient, uint256 _amount) external {\\n    require(isRewardManager[msg.sender], \\\"Not approved\\\");\\n    require(_amount <= excessReserves(), \\\"Insufficient reserves\\\");\\n\\n    IERC20Mintable(OHM).mint(_recipient, _amount);\\n\\n    emit RewardsMinted(msg.sender, _recipient, _amount);\\n  }\\n\\n  /**\\n        @notice returns excess reserves not backing tokens\\n        @return uint\\n     */\\n  function excessReserves() public view returns (uint256) {\\n    return totalReserves.sub(IERC20(OHM).totalSupply().sub(totalDebt));\\n  }\\n\\n  /**\\n        @notice takes inventory of all tracked assets\\n        @notice always consolidate to recognized reserves before audit\\n     */\\n  function auditReserves() external onlyManager {\\n    uint256 reserves;\\n    for (uint256 i = 0; i < reserveTokens.length; i++) {\\n      reserves = reserves.add(\\n        valueOfToken(\\n          reserveTokens[i],\\n          IERC20(reserveTokens[i]).balanceOf(address(this))\\n        )\\n      );\\n    }\\n    for (uint256 i = 0; i < liquidityTokens.length; i++) {\\n      reserves = reserves.add(\\n        valueOfToken(\\n          liquidityTokens[i],\\n          IERC20(liquidityTokens[i]).balanceOf(address(this))\\n        )\\n      );\\n    }\\n    totalReserves = reserves;\\n    emit ReservesUpdated(reserves);\\n    emit ReservesAudited(reserves);\\n  }\\n\\n  /**\\n        @notice returns OHM valuation of asset\\n        @param _token address\\n        @param _amount uint\\n        @return value_ uint\\n     */\\n  function valueOfToken(address _token, uint256 _amount)\\n    public\\n    view\\n    returns (uint256 value_)\\n  {\\n    if (isReserveToken[_token]) {\\n      // convert amount to match OHM decimals\\n      value_ = _amount.mul(10**IERC20(OHM).decimals()).div(\\n        10**IERC20(_token).decimals()\\n      );\\n    } else if (isLiquidityToken[_token]) {\\n      value_ = IBondCalculator(bondCalculator[_token]).valuation(\\n        _token,\\n        _amount\\n      );\\n    }\\n  }\\n\\n  /**\\n        @notice queue address to change boolean in mapping\\n        @param _managing MANAGING\\n        @param _address address\\n        @return bool\\n     */\\n  function queue(MANAGING _managing, address _address)\\n    external\\n    onlyManager\\n    returns (bool)\\n  {\\n    require(_address != address(0));\\n    if (_managing == MANAGING.RESERVEDEPOSITOR) {\\n      // 0\\n      reserveDepositorQueue[_address] = block.number.add(blocksNeededForQueue);\\n    } else if (_managing == MANAGING.RESERVESPENDER) {\\n      // 1\\n      reserveSpenderQueue[_address] = block.number.add(blocksNeededForQueue);\\n    } else if (_managing == MANAGING.RESERVETOKEN) {\\n      // 2\\n      reserveTokenQueue[_address] = block.number.add(blocksNeededForQueue);\\n    } else if (_managing == MANAGING.RESERVEMANAGER) {\\n      // 3\\n      ReserveManagerQueue[_address] = block.number.add(\\n        blocksNeededForQueue.mul(2)\\n      );\\n    } else if (_managing == MANAGING.LIQUIDITYDEPOSITOR) {\\n      // 4\\n      LiquidityDepositorQueue[_address] = block.number.add(\\n        blocksNeededForQueue\\n      );\\n    } else if (_managing == MANAGING.LIQUIDITYTOKEN) {\\n      // 5\\n      LiquidityTokenQueue[_address] = block.number.add(blocksNeededForQueue);\\n    } else if (_managing == MANAGING.LIQUIDITYMANAGER) {\\n      // 6\\n      LiquidityManagerQueue[_address] = block.number.add(\\n        blocksNeededForQueue.mul(2)\\n      );\\n    } else if (_managing == MANAGING.DEBTOR) {\\n      // 7\\n      debtorQueue[_address] = block.number.add(blocksNeededForQueue);\\n    } else if (_managing == MANAGING.REWARDMANAGER) {\\n      // 8\\n      rewardManagerQueue[_address] = block.number.add(blocksNeededForQueue);\\n    } else if (_managing == MANAGING.SOHM) {\\n      // 9\\n      sOHMQueue = block.number.add(blocksNeededForQueue);\\n    } else return false;\\n\\n    emit ChangeQueued(_managing, _address);\\n    return true;\\n  }\\n\\n  /**\\n        @notice verify queue then set boolean in mapping\\n        @param _managing MANAGING\\n        @param _address address\\n        @param _calculator address\\n        @return bool\\n     */\\n  function toggle(\\n    MANAGING _managing,\\n    address _address,\\n    address _calculator\\n  ) external onlyManager returns (bool) {\\n    require(_address != address(0));\\n    bool result;\\n    if (_managing == MANAGING.RESERVEDEPOSITOR) {\\n      // 0\\n      if (requirements(reserveDepositorQueue, isReserveDepositor, _address)) {\\n        reserveDepositorQueue[_address] = 0;\\n        if (!listContains(reserveDepositors, _address)) {\\n          reserveDepositors.push(_address);\\n        }\\n      }\\n      result = !isReserveDepositor[_address];\\n      isReserveDepositor[_address] = result;\\n    } else if (_managing == MANAGING.RESERVESPENDER) {\\n      // 1\\n      if (requirements(reserveSpenderQueue, isReserveSpender, _address)) {\\n        reserveSpenderQueue[_address] = 0;\\n        if (!listContains(reserveSpenders, _address)) {\\n          reserveSpenders.push(_address);\\n        }\\n      }\\n      result = !isReserveSpender[_address];\\n      isReserveSpender[_address] = result;\\n    } else if (_managing == MANAGING.RESERVETOKEN) {\\n      // 2\\n      if (requirements(reserveTokenQueue, isReserveToken, _address)) {\\n        reserveTokenQueue[_address] = 0;\\n        if (!listContains(reserveTokens, _address)) {\\n          reserveTokens.push(_address);\\n        }\\n      }\\n      result = !isReserveToken[_address];\\n      isReserveToken[_address] = result;\\n    } else if (_managing == MANAGING.RESERVEMANAGER) {\\n      // 3\\n      if (requirements(ReserveManagerQueue, isReserveManager, _address)) {\\n        reserveManagers.push(_address);\\n        ReserveManagerQueue[_address] = 0;\\n        if (!listContains(reserveManagers, _address)) {\\n          reserveManagers.push(_address);\\n        }\\n      }\\n      result = !isReserveManager[_address];\\n      isReserveManager[_address] = result;\\n    } else if (_managing == MANAGING.LIQUIDITYDEPOSITOR) {\\n      // 4\\n      if (\\n        requirements(LiquidityDepositorQueue, isLiquidityDepositor, _address)\\n      ) {\\n        liquidityDepositors.push(_address);\\n        LiquidityDepositorQueue[_address] = 0;\\n        if (!listContains(liquidityDepositors, _address)) {\\n          liquidityDepositors.push(_address);\\n        }\\n      }\\n      result = !isLiquidityDepositor[_address];\\n      isLiquidityDepositor[_address] = result;\\n    } else if (_managing == MANAGING.LIQUIDITYTOKEN) {\\n      // 5\\n      if (requirements(LiquidityTokenQueue, isLiquidityToken, _address)) {\\n        LiquidityTokenQueue[_address] = 0;\\n        if (!listContains(liquidityTokens, _address)) {\\n          liquidityTokens.push(_address);\\n        }\\n      }\\n      result = !isLiquidityToken[_address];\\n      isLiquidityToken[_address] = result;\\n      bondCalculator[_address] = _calculator;\\n    } else if (_managing == MANAGING.LIQUIDITYMANAGER) {\\n      // 6\\n      if (requirements(LiquidityManagerQueue, isLiquidityManager, _address)) {\\n        LiquidityManagerQueue[_address] = 0;\\n        if (!listContains(liquidityManagers, _address)) {\\n          liquidityManagers.push(_address);\\n        }\\n      }\\n      result = !isLiquidityManager[_address];\\n      isLiquidityManager[_address] = result;\\n    } else if (_managing == MANAGING.DEBTOR) {\\n      // 7\\n      if (requirements(debtorQueue, isDebtor, _address)) {\\n        debtorQueue[_address] = 0;\\n        if (!listContains(debtors, _address)) {\\n          debtors.push(_address);\\n        }\\n      }\\n      result = !isDebtor[_address];\\n      isDebtor[_address] = result;\\n    } else if (_managing == MANAGING.REWARDMANAGER) {\\n      // 8\\n      if (requirements(rewardManagerQueue, isRewardManager, _address)) {\\n        rewardManagerQueue[_address] = 0;\\n        if (!listContains(rewardManagers, _address)) {\\n          rewardManagers.push(_address);\\n        }\\n      }\\n      result = !isRewardManager[_address];\\n      isRewardManager[_address] = result;\\n    } else if (_managing == MANAGING.SOHM) {\\n      // 9\\n      sOHMQueue = 0;\\n      sOHM = _address;\\n      result = true;\\n    } else return false;\\n\\n    emit ChangeActivated(_managing, _address, result);\\n    return true;\\n  }\\n\\n  /**\\n        @notice checks requirements and returns altered structs\\n        @param queue_ mapping( address => uint )\\n        @param status_ mapping( address => bool )\\n        @param _address address\\n        @return bool \\n     */\\n  function requirements(\\n    mapping(address => uint256) storage queue_,\\n    mapping(address => bool) storage status_,\\n    address _address\\n  ) internal view returns (bool) {\\n    if (!status_[_address]) {\\n      require(queue_[_address] != 0, \\\"Must queue\\\");\\n      require(queue_[_address] <= block.number, \\\"Queue not expired\\\");\\n      return true;\\n    }\\n    return false;\\n  }\\n\\n  /**\\n        @notice checks array to ensure against duplicate\\n        @param _list address[]\\n        @param _token address\\n        @return bool\\n     */\\n  function listContains(address[] storage _list, address _token)\\n    internal\\n    view\\n    returns (bool)\\n  {\\n    for (uint256 i = 0; i < _list.length; i++) {\\n      if (_list[i] == _token) {\\n        return true;\\n      }\\n    }\\n    return false;\\n  }\\n}\\n\",\"keccak256\":\"0x02db9e69fb4f8c1d1c9dc5c99e26fadc4373cef48acd8949c016aae2a74e45fb\",\"license\":\"MIT\"}},\"version\":1}",
          "storageLayout": {
            "storage": [
              {
                "astId": 284,
                "contract": "contracts/mocks/MockTreasury.sol:MockOlympusTreasury",
                "label": "_owner",
                "offset": 0,
                "slot": "0",
                "type": "t_address"
              },
              {
                "astId": 286,
                "contract": "contracts/mocks/MockTreasury.sol:MockOlympusTreasury",
                "label": "_newOwner",
                "offset": 0,
                "slot": "1",
                "type": "t_address"
              },
              {
                "astId": 697,
                "contract": "contracts/mocks/MockTreasury.sol:MockOlympusTreasury",
                "label": "reserveTokens",
                "offset": 0,
                "slot": "2",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "astId": 701,
                "contract": "contracts/mocks/MockTreasury.sol:MockOlympusTreasury",
                "label": "isReserveToken",
                "offset": 0,
                "slot": "3",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "astId": 705,
                "contract": "contracts/mocks/MockTreasury.sol:MockOlympusTreasury",
                "label": "reserveTokenQueue",
                "offset": 0,
                "slot": "4",
                "type": "t_mapping(t_address,t_uint256)"
              },
              {
                "astId": 708,
                "contract": "contracts/mocks/MockTreasury.sol:MockOlympusTreasury",
                "label": "reserveDepositors",
                "offset": 0,
                "slot": "5",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "astId": 712,
                "contract": "contracts/mocks/MockTreasury.sol:MockOlympusTreasury",
                "label": "isReserveDepositor",
                "offset": 0,
                "slot": "6",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "astId": 716,
                "contract": "contracts/mocks/MockTreasury.sol:MockOlympusTreasury",
                "label": "reserveDepositorQueue",
                "offset": 0,
                "slot": "7",
                "type": "t_mapping(t_address,t_uint256)"
              },
              {
                "astId": 719,
                "contract": "contracts/mocks/MockTreasury.sol:MockOlympusTreasury",
                "label": "reserveSpenders",
                "offset": 0,
                "slot": "8",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "astId": 723,
                "contract": "contracts/mocks/MockTreasury.sol:MockOlympusTreasury",
                "label": "isReserveSpender",
                "offset": 0,
                "slot": "9",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "astId": 727,
                "contract": "contracts/mocks/MockTreasury.sol:MockOlympusTreasury",
                "label": "reserveSpenderQueue",
                "offset": 0,
                "slot": "10",
                "type": "t_mapping(t_address,t_uint256)"
              },
              {
                "astId": 730,
                "contract": "contracts/mocks/MockTreasury.sol:MockOlympusTreasury",
                "label": "liquidityTokens",
                "offset": 0,
                "slot": "11",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "astId": 734,
                "contract": "contracts/mocks/MockTreasury.sol:MockOlympusTreasury",
                "label": "isLiquidityToken",
                "offset": 0,
                "slot": "12",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "astId": 738,
                "contract": "contracts/mocks/MockTreasury.sol:MockOlympusTreasury",
                "label": "LiquidityTokenQueue",
                "offset": 0,
                "slot": "13",
                "type": "t_mapping(t_address,t_uint256)"
              },
              {
                "astId": 741,
                "contract": "contracts/mocks/MockTreasury.sol:MockOlympusTreasury",
                "label": "liquidityDepositors",
                "offset": 0,
                "slot": "14",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "astId": 745,
                "contract": "contracts/mocks/MockTreasury.sol:MockOlympusTreasury",
                "label": "isLiquidityDepositor",
                "offset": 0,
                "slot": "15",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "astId": 749,
                "contract": "contracts/mocks/MockTreasury.sol:MockOlympusTreasury",
                "label": "LiquidityDepositorQueue",
                "offset": 0,
                "slot": "16",
                "type": "t_mapping(t_address,t_uint256)"
              },
              {
                "astId": 753,
                "contract": "contracts/mocks/MockTreasury.sol:MockOlympusTreasury",
                "label": "bondCalculator",
                "offset": 0,
                "slot": "17",
                "type": "t_mapping(t_address,t_address)"
              },
              {
                "astId": 756,
                "contract": "contracts/mocks/MockTreasury.sol:MockOlympusTreasury",
                "label": "reserveManagers",
                "offset": 0,
                "slot": "18",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "astId": 760,
                "contract": "contracts/mocks/MockTreasury.sol:MockOlympusTreasury",
                "label": "isReserveManager",
                "offset": 0,
                "slot": "19",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "astId": 764,
                "contract": "contracts/mocks/MockTreasury.sol:MockOlympusTreasury",
                "label": "ReserveManagerQueue",
                "offset": 0,
                "slot": "20",
                "type": "t_mapping(t_address,t_uint256)"
              },
              {
                "astId": 767,
                "contract": "contracts/mocks/MockTreasury.sol:MockOlympusTreasury",
                "label": "liquidityManagers",
                "offset": 0,
                "slot": "21",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "astId": 771,
                "contract": "contracts/mocks/MockTreasury.sol:MockOlympusTreasury",
                "label": "isLiquidityManager",
                "offset": 0,
                "slot": "22",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "astId": 775,
                "contract": "contracts/mocks/MockTreasury.sol:MockOlympusTreasury",
                "label": "LiquidityManagerQueue",
                "offset": 0,
                "slot": "23",
                "type": "t_mapping(t_address,t_uint256)"
              },
              {
                "astId": 778,
                "contract": "contracts/mocks/MockTreasury.sol:MockOlympusTreasury",
                "label": "debtors",
                "offset": 0,
                "slot": "24",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "astId": 782,
                "contract": "contracts/mocks/MockTreasury.sol:MockOlympusTreasury",
                "label": "isDebtor",
                "offset": 0,
                "slot": "25",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "astId": 786,
                "contract": "contracts/mocks/MockTreasury.sol:MockOlympusTreasury",
                "label": "debtorQueue",
                "offset": 0,
                "slot": "26",
                "type": "t_mapping(t_address,t_uint256)"
              },
              {
                "astId": 790,
                "contract": "contracts/mocks/MockTreasury.sol:MockOlympusTreasury",
                "label": "debtorBalance",
                "offset": 0,
                "slot": "27",
                "type": "t_mapping(t_address,t_uint256)"
              },
              {
                "astId": 793,
                "contract": "contracts/mocks/MockTreasury.sol:MockOlympusTreasury",
                "label": "rewardManagers",
                "offset": 0,
                "slot": "28",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "astId": 797,
                "contract": "contracts/mocks/MockTreasury.sol:MockOlympusTreasury",
                "label": "isRewardManager",
                "offset": 0,
                "slot": "29",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "astId": 801,
                "contract": "contracts/mocks/MockTreasury.sol:MockOlympusTreasury",
                "label": "rewardManagerQueue",
                "offset": 0,
                "slot": "30",
                "type": "t_mapping(t_address,t_uint256)"
              },
              {
                "astId": 803,
                "contract": "contracts/mocks/MockTreasury.sol:MockOlympusTreasury",
                "label": "sOHM",
                "offset": 0,
                "slot": "31",
                "type": "t_address"
              },
              {
                "astId": 805,
                "contract": "contracts/mocks/MockTreasury.sol:MockOlympusTreasury",
                "label": "sOHMQueue",
                "offset": 0,
                "slot": "32",
                "type": "t_uint256"
              },
              {
                "astId": 807,
                "contract": "contracts/mocks/MockTreasury.sol:MockOlympusTreasury",
                "label": "totalReserves",
                "offset": 0,
                "slot": "33",
                "type": "t_uint256"
              },
              {
                "astId": 809,
                "contract": "contracts/mocks/MockTreasury.sol:MockOlympusTreasury",
                "label": "totalDebt",
                "offset": 0,
                "slot": "34",
                "type": "t_uint256"
              }
            ],
            "types": {
              "t_address": {
                "encoding": "inplace",
                "label": "address",
                "numberOfBytes": "20"
              },
              "t_array(t_address)dyn_storage": {
                "base": "t_address",
                "encoding": "dynamic_array",
                "label": "address[]",
                "numberOfBytes": "32"
              },
              "t_bool": {
                "encoding": "inplace",
                "label": "bool",
                "numberOfBytes": "1"
              },
              "t_mapping(t_address,t_address)": {
                "encoding": "mapping",
                "key": "t_address",
                "label": "mapping(address => address)",
                "numberOfBytes": "32",
                "value": "t_address"
              },
              "t_mapping(t_address,t_bool)": {
                "encoding": "mapping",
                "key": "t_address",
                "label": "mapping(address => bool)",
                "numberOfBytes": "32",
                "value": "t_bool"
              },
              "t_mapping(t_address,t_uint256)": {
                "encoding": "mapping",
                "key": "t_address",
                "label": "mapping(address => uint256)",
                "numberOfBytes": "32",
                "value": "t_uint256"
              },
              "t_uint256": {
                "encoding": "inplace",
                "label": "uint256",
                "numberOfBytes": "32"
              }
            }
          },
          "userdoc": {
            "kind": "user",
            "methods": {
              "auditReserves()": {
                "notice": "takes inventory of all tracked assetsalways consolidate to recognized reserves before audit"
              },
              "deposit(uint256,address,uint256)": {
                "notice": "allow approved address to deposit an asset for OHM"
              },
              "excessReserves()": {
                "notice": "returns excess reserves not backing tokens"
              },
              "incurDebt(uint256,address)": {
                "notice": "allow approved address to borrow reserves"
              },
              "manage(address,uint256)": {
                "notice": "allow approved address to withdraw assets"
              },
              "mintRewards(address,uint256)": {
                "notice": "send epoch reward to staking contract"
              },
              "queue(uint8,address)": {
                "notice": "queue address to change boolean in mapping"
              },
              "repayDebtWithOHM(uint256)": {
                "notice": "allow approved address to repay borrowed reserves with OHM"
              },
              "repayDebtWithReserve(uint256,address)": {
                "notice": "allow approved address to repay borrowed reserves with reserves"
              },
              "toggle(uint8,address,address)": {
                "notice": "verify queue then set boolean in mapping"
              },
              "valueOfToken(address,uint256)": {
                "notice": "returns OHM valuation of asset"
              },
              "withdraw(uint256,address)": {
                "notice": "allow approved address to burn OHM for reserves"
              }
            },
            "version": 1
          }
        },
        "Ownable": {
          "abi": [
            {
              "inputs": [],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipPulled",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipPushed",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "manager",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "pullManagement",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner_",
                  "type": "address"
                }
              ],
              "name": "pushManagement",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceManagement",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "devdoc": {
            "kind": "dev",
            "methods": {},
            "version": 1
          },
          "evm": {
            "bytecode": {
              "functionDebugData": {
                "@_315": {
                  "entryPoint": null,
                  "id": 315,
                  "parameterSlots": 0,
                  "returnSlots": 0
                }
              },
              "generatedSources": [],
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b50600080546001600160a01b0319163390811782556040519091907fea8258f2d9ddb679928cf34b78cf645b7feda9acc828e4dd82d014eaae270eba908290a36103848061005f6000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c8063089208d81461005157806346f68ee91461005b578063481c6a751461006e5780635a96ac0a1461008d575b600080fd5b610059610095565b005b61005961006936600461031e565b61013e565b600054604080516001600160a01b039092168252519081900360200190f35b610059610258565b6000546001600160a01b031633146100f45760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b600080546040516001600160a01b03909116907fea8258f2d9ddb679928cf34b78cf645b7feda9acc828e4dd82d014eaae270eba908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146101985760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016100eb565b6001600160a01b0381166101fd5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016100eb565b600080546040516001600160a01b03808516939216917fea8258f2d9ddb679928cf34b78cf645b7feda9acc828e4dd82d014eaae270eba91a3600180546001600160a01b0319166001600160a01b0392909216919091179055565b6001546001600160a01b031633146102bd5760405162461bcd60e51b815260206004820152602260248201527f4f776e61626c653a206d757374206265206e6577206f776e657220746f2070756044820152611b1b60f21b60648201526084016100eb565b600154600080546040516001600160a01b0393841693909116917faa151555690c956fc3ea32f106bb9f119b5237a061eaa8557cff3e51e3792c8d91a3600154600080546001600160a01b0319166001600160a01b03909216919091179055565b60006020828403121561033057600080fd5b81356001600160a01b038116811461034757600080fd5b939250505056fea264697066735822122008c9d608cce02a60779a02f2c86fcea04bf9ac531845836f9f2478f4982dcedc64736f6c634300080a0033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER SWAP1 DUP2 OR DUP3 SSTORE PUSH1 0x40 MLOAD SWAP1 SWAP2 SWAP1 PUSH32 0xEA8258F2D9DDB679928CF34B78CF645B7FEDA9ACC828E4DD82D014EAAE270EBA SWAP1 DUP3 SWAP1 LOG3 PUSH2 0x384 DUP1 PUSH2 0x5F PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x89208D8 EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x46F68EE9 EQ PUSH2 0x5B JUMPI DUP1 PUSH4 0x481C6A75 EQ PUSH2 0x6E JUMPI DUP1 PUSH4 0x5A96AC0A EQ PUSH2 0x8D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x59 PUSH2 0x95 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x59 PUSH2 0x69 CALLDATASIZE PUSH1 0x4 PUSH2 0x31E JUMP JUMPDEST PUSH2 0x13E JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x59 PUSH2 0x258 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xF4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0xEA8258F2D9DDB679928CF34B78CF645B7FEDA9ACC828E4DD82D014EAAE270EBA SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x198 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xEB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1FD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xEB JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0xEA8258F2D9DDB679928CF34B78CF645B7FEDA9ACC828E4DD82D014EAAE270EBA SWAP2 LOG3 PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2BD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206D757374206265206E6577206F776E657220746F207075 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x1B1B PUSH1 0xF2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xEB JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND SWAP4 SWAP1 SWAP2 AND SWAP2 PUSH32 0xAA151555690C956FC3EA32F106BB9F119B5237A061EAA8557CFF3E51E3792C8D SWAP2 LOG3 PUSH1 0x1 SLOAD PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x330 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x347 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADDMOD 0xC9 0xD6 ADDMOD 0xCC 0xE0 0x2A PUSH1 0x77 SWAP11 MUL CALLCODE 0xC8 PUSH16 0xCEA04BF9AC531845836F9F2478F4982D 0xCE 0xDC PUSH5 0x736F6C6343 STOP ADDMOD EXP STOP CALLER ",
              "sourceMap": "3174:1176:0:-:0;;;3454:90;;;;;;;;;-1:-1:-1;3474:6:0;:19;;-1:-1:-1;;;;;;3474:19:0;3483:10;3474:19;;;;;3504:35;;3483:10;;3474:6;3504:35;;3474:6;;3504:35;3174:1176;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "@manager_324": {
                  "entryPoint": null,
                  "id": 324,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@pullManagement_408": {
                  "entryPoint": 600,
                  "id": 408,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@pushManagement_386": {
                  "entryPoint": 318,
                  "id": 386,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@renounceManagement_358": {
                  "entryPoint": 149,
                  "id": 358,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "abi_decode_tuple_t_address": {
                  "entryPoint": 798,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_4de71fbd3469e1b7fc89a70805ae86972c680281e629f271ab7471fd6321445c__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                }
              },
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:1681:1",
                    "statements": [
                      {
                        "nodeType": "YulBlock",
                        "src": "6:3:1",
                        "statements": []
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "84:216:1",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "130:16:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "139:1:1",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "142:1:1",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "132:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "132:12:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "132:12:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "105:7:1"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "114:9:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "101:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "101:23:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "126:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "97:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "97:32:1"
                              },
                              "nodeType": "YulIf",
                              "src": "94:52:1"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "155:36:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "181:9:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "168:12:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "168:23:1"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nodeType": "YulTypedName",
                                  "src": "159:5:1",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "254:16:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "263:1:1",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "266:1:1",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "256:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "256:12:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "256:12:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "213:5:1"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "224:5:1"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "239:3:1",
                                                    "type": "",
                                                    "value": "160"
                                                  },
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "244:1:1",
                                                    "type": "",
                                                    "value": "1"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "shl",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "235:3:1"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "235:11:1"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "248:1:1",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "sub",
                                              "nodeType": "YulIdentifier",
                                              "src": "231:3:1"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "231:19:1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "220:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "220:31:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "210:2:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "210:42:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "203:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "203:50:1"
                              },
                              "nodeType": "YulIf",
                              "src": "200:70:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "279:15:1",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "289:5:1"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "279:6:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "50:9:1",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "61:7:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "73:6:1",
                            "type": ""
                          }
                        ],
                        "src": "14:286:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "406:102:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "416:26:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "428:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "439:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "424:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "424:18:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "416:4:1"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "458:9:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "473:6:1"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "489:3:1",
                                                "type": "",
                                                "value": "160"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "494:1:1",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shl",
                                              "nodeType": "YulIdentifier",
                                              "src": "485:3:1"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "485:11:1"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "498:1:1",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nodeType": "YulIdentifier",
                                          "src": "481:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "481:19:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "469:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "469:32:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "451:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "451:51:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "451:51:1"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "375:9:1",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "386:6:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "397:4:1",
                            "type": ""
                          }
                        ],
                        "src": "305:203:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "687:182:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "704:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "715:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "697:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "697:21:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "697:21:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "738:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "749:2:1",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "734:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "734:18:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "754:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "727:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "727:30:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "727:30:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "777:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "788:2:1",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "773:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "773:18:1"
                                  },
                                  {
                                    "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "793:34:1",
                                    "type": "",
                                    "value": "Ownable: caller is not the owner"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "766:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "766:62:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "766:62:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "837:26:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "849:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "860:2:1",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "845:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "845:18:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "837:4:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "664:9:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "678:4:1",
                            "type": ""
                          }
                        ],
                        "src": "513:356:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1048:228:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1065:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1076:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1058:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1058:21:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1058:21:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1099:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1110:2:1",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1095:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1095:18:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1115:2:1",
                                    "type": "",
                                    "value": "38"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1088:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1088:30:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1088:30:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1138:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1149:2:1",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1134:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1134:18:1"
                                  },
                                  {
                                    "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "1154:34:1",
                                    "type": "",
                                    "value": "Ownable: new owner is the zero a"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1127:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1127:62:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1127:62:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1209:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1220:2:1",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1205:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1205:18:1"
                                  },
                                  {
                                    "hexValue": "646472657373",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "1225:8:1",
                                    "type": "",
                                    "value": "ddress"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1198:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1198:36:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1198:36:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1243:27:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1255:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1266:3:1",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1251:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1251:19:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "1243:4:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1025:9:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "1039:4:1",
                            "type": ""
                          }
                        ],
                        "src": "874:402:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1455:224:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1472:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1483:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1465:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1465:21:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1465:21:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1506:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1517:2:1",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1502:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1502:18:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1522:2:1",
                                    "type": "",
                                    "value": "34"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1495:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1495:30:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1495:30:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1545:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1556:2:1",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1541:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1541:18:1"
                                  },
                                  {
                                    "hexValue": "4f776e61626c653a206d757374206265206e6577206f776e657220746f207075",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "1561:34:1",
                                    "type": "",
                                    "value": "Ownable: must be new owner to pu"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1534:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1534:62:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1534:62:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1616:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1627:2:1",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1612:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1612:18:1"
                                  },
                                  {
                                    "hexValue": "6c6c",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "1632:4:1",
                                    "type": "",
                                    "value": "ll"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1605:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1605:32:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1605:32:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1646:27:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1658:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1669:3:1",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1654:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1654:19:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "1646:4:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_4de71fbd3469e1b7fc89a70805ae86972c680281e629f271ab7471fd6321445c__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1432:9:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "1446:4:1",
                            "type": ""
                          }
                        ],
                        "src": "1281:398:1"
                      }
                    ]
                  },
                  "contents": "{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4de71fbd3469e1b7fc89a70805ae86972c680281e629f271ab7471fd6321445c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"Ownable: must be new owner to pu\")\n        mstore(add(headStart, 96), \"ll\")\n        tail := add(headStart, 128)\n    }\n}",
                  "id": 1,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b506004361061004c5760003560e01c8063089208d81461005157806346f68ee91461005b578063481c6a751461006e5780635a96ac0a1461008d575b600080fd5b610059610095565b005b61005961006936600461031e565b61013e565b600054604080516001600160a01b039092168252519081900360200190f35b610059610258565b6000546001600160a01b031633146100f45760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b600080546040516001600160a01b03909116907fea8258f2d9ddb679928cf34b78cf645b7feda9acc828e4dd82d014eaae270eba908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146101985760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016100eb565b6001600160a01b0381166101fd5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016100eb565b600080546040516001600160a01b03808516939216917fea8258f2d9ddb679928cf34b78cf645b7feda9acc828e4dd82d014eaae270eba91a3600180546001600160a01b0319166001600160a01b0392909216919091179055565b6001546001600160a01b031633146102bd5760405162461bcd60e51b815260206004820152602260248201527f4f776e61626c653a206d757374206265206e6577206f776e657220746f2070756044820152611b1b60f21b60648201526084016100eb565b600154600080546040516001600160a01b0393841693909116917faa151555690c956fc3ea32f106bb9f119b5237a061eaa8557cff3e51e3792c8d91a3600154600080546001600160a01b0319166001600160a01b03909216919091179055565b60006020828403121561033057600080fd5b81356001600160a01b038116811461034757600080fd5b939250505056fea264697066735822122008c9d608cce02a60779a02f2c86fcea04bf9ac531845836f9f2478f4982dcedc64736f6c634300080a0033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x89208D8 EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x46F68EE9 EQ PUSH2 0x5B JUMPI DUP1 PUSH4 0x481C6A75 EQ PUSH2 0x6E JUMPI DUP1 PUSH4 0x5A96AC0A EQ PUSH2 0x8D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x59 PUSH2 0x95 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x59 PUSH2 0x69 CALLDATASIZE PUSH1 0x4 PUSH2 0x31E JUMP JUMPDEST PUSH2 0x13E JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x59 PUSH2 0x258 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xF4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0xEA8258F2D9DDB679928CF34B78CF645B7FEDA9ACC828E4DD82D014EAAE270EBA SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x198 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xEB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1FD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xEB JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0xEA8258F2D9DDB679928CF34B78CF645B7FEDA9ACC828E4DD82D014EAAE270EBA SWAP2 LOG3 PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2BD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206D757374206265206E6577206F776E657220746F207075 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x1B1B PUSH1 0xF2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xEB JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND SWAP4 SWAP1 SWAP2 AND SWAP2 PUSH32 0xAA151555690C956FC3EA32F106BB9F119B5237A061EAA8557CFF3E51E3792C8D SWAP2 LOG3 PUSH1 0x1 SLOAD PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x330 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x347 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADDMOD 0xC9 0xD6 ADDMOD 0xCC 0xE0 0x2A PUSH1 0x77 SWAP11 MUL CALLCODE 0xC8 PUSH16 0xCEA04BF9AC531845836F9F2478F4982D 0xCE 0xDC PUSH5 0x736F6C6343 STOP ADDMOD EXP STOP CALLER ",
              "sourceMap": "3174:1176:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3744:142;;;:::i;:::-;;3890:254;;;;;;:::i;:::-;;:::i;3548:82::-;3597:7;3619:6;3548:82;;;-1:-1:-1;;;;;3619:6:0;;;451:51:1;;3548:82:0;;;;;439:2:1;3548:82:0;;;4148:200;;;:::i;3744:142::-;3671:6;;-1:-1:-1;;;;;3671:6:0;3681:10;3671:20;3663:65;;;;-1:-1:-1;;;3663:65:0;;715:2:1;3663:65:0;;;697:21:1;;;734:18;;;727:30;793:34;773:18;;;766:62;845:18;;3663:65:0;;;;;;;;;3853:1:::1;3837:6:::0;;3821:35:::1;::::0;-1:-1:-1;;;;;3837:6:0;;::::1;::::0;3821:35:::1;::::0;3853:1;;3821:35:::1;3879:1;3862:19:::0;;-1:-1:-1;;;;;;3862:19:0::1;::::0;;3744:142::o;3890:254::-;3671:6;;-1:-1:-1;;;;;3671:6:0;3681:10;3671:20;3663:65;;;;-1:-1:-1;;;3663:65:0;;715:2:1;3663:65:0;;;697:21:1;;;734:18;;;727:30;793:34;773:18;;;766:62;845:18;;3663:65:0;513:356:1;3663:65:0;-1:-1:-1;;;;;4001:23:0;::::1;3993:74;;;::::0;-1:-1:-1;;;3993:74:0;;1076:2:1;3993:74:0::1;::::0;::::1;1058:21:1::0;1115:2;1095:18;;;1088:30;1154:34;1134:18;;;1127:62;-1:-1:-1;;;1205:18:1;;;1198:36;1251:19;;3993:74:0::1;874:402:1::0;3993:74:0::1;4094:6;::::0;;4078:34:::1;::::0;-1:-1:-1;;;;;4078:34:0;;::::1;::::0;4094:6;::::1;::::0;4078:34:::1;::::0;::::1;4118:9;:21:::0;;-1:-1:-1;;;;;;4118:21:0::1;-1:-1:-1::0;;;;;4118:21:0;;;::::1;::::0;;;::::1;::::0;;3890:254::o;4148:200::-;4226:9;;-1:-1:-1;;;;;4226:9:0;4212:10;:23;4204:70;;;;-1:-1:-1;;;4204:70:0;;1483:2:1;4204:70:0;;;1465:21:1;1522:2;1502:18;;;1495:30;1561:34;1541:18;;;1534:62;-1:-1:-1;;;1612:18:1;;;1605:32;1654:19;;4204:70:0;1281:398:1;4204:70:0;4309:9;;;4301:6;;4285:34;;-1:-1:-1;;;;;4309:9:0;;;;4301:6;;;;4285:34;;;4334:9;;;4325:18;;-1:-1:-1;;;;;;4325:18:0;-1:-1:-1;;;;;4334:9:0;;;4325:18;;;;;;4148:200::o;14:286:1:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;168:23;;-1:-1:-1;;;;;220:31:1;;210:42;;200:70;;266:1;263;256:12;200:70;289:5;14:286;-1:-1:-1;;;14:286:1:o"
            },
            "gasEstimates": {
              "creation": {
                "codeDepositCost": "180000",
                "executionCost": "25994",
                "totalCost": "205994"
              },
              "external": {
                "manager()": "2314",
                "pullManagement()": "34457",
                "pushManagement(address)": "30365",
                "renounceManagement()": "30143"
              }
            },
            "methodIdentifiers": {
              "manager()": "481c6a75",
              "pullManagement()": "5a96ac0a",
              "pushManagement(address)": "46f68ee9",
              "renounceManagement()": "089208d8"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipPulled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipPushed\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"manager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pullManagement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner_\",\"type\":\"address\"}],\"name\":\"pushManagement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceManagement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/mocks/MockTreasury.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/mocks/MockTreasury.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.10;\\n\\nlibrary SafeMath {\\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n    uint256 c = a + b;\\n    require(c >= a, \\\"SafeMath: addition overflow\\\");\\n\\n    return c;\\n  }\\n\\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n    return sub(a, b, \\\"SafeMath: subtraction overflow\\\");\\n  }\\n\\n  function sub(\\n    uint256 a,\\n    uint256 b,\\n    string memory errorMessage\\n  ) internal pure returns (uint256) {\\n    require(b <= a, errorMessage);\\n    uint256 c = a - b;\\n\\n    return c;\\n  }\\n\\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n    if (a == 0) {\\n      return 0;\\n    }\\n\\n    uint256 c = a * b;\\n    require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\n\\n    return c;\\n  }\\n\\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n    return div(a, b, \\\"SafeMath: division by zero\\\");\\n  }\\n\\n  function div(\\n    uint256 a,\\n    uint256 b,\\n    string memory errorMessage\\n  ) internal pure returns (uint256) {\\n    require(b > 0, errorMessage);\\n    uint256 c = a / b;\\n    return c;\\n  }\\n}\\n\\nlibrary Address {\\n  function isContract(address account) internal view returns (bool) {\\n    // This method relies in extcodesize, which returns 0 for contracts in\\n    // construction, since the code is only stored at the end of the\\n    // constructor execution.\\n\\n    uint256 size;\\n    // solhint-disable-next-line no-inline-assembly\\n    assembly {\\n      size := extcodesize(account)\\n    }\\n    return size > 0;\\n  }\\n\\n  function functionCall(\\n    address target,\\n    bytes memory data,\\n    string memory errorMessage\\n  ) internal returns (bytes memory) {\\n    return _functionCallWithValue(target, data, 0, errorMessage);\\n  }\\n\\n  function _functionCallWithValue(\\n    address target,\\n    bytes memory data,\\n    uint256 weiValue,\\n    string memory errorMessage\\n  ) private returns (bytes memory) {\\n    require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n    // solhint-disable-next-line avoid-low-level-calls\\n    (bool success, bytes memory returndata) = target.call{value: weiValue}(\\n      data\\n    );\\n    if (success) {\\n      return returndata;\\n    } else {\\n      if (returndata.length > 0) {\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n          let returndata_size := mload(returndata)\\n          revert(add(32, returndata), returndata_size)\\n        }\\n      } else {\\n        revert(errorMessage);\\n      }\\n    }\\n  }\\n\\n  function _verifyCallResult(\\n    bool success,\\n    bytes memory returndata,\\n    string memory errorMessage\\n  ) private pure returns (bytes memory) {\\n    if (success) {\\n      return returndata;\\n    } else {\\n      if (returndata.length > 0) {\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n          let returndata_size := mload(returndata)\\n          revert(add(32, returndata), returndata_size)\\n        }\\n      } else {\\n        revert(errorMessage);\\n      }\\n    }\\n  }\\n}\\n\\ninterface IOwnable {\\n  function manager() external view returns (address);\\n\\n  function renounceManagement() external;\\n\\n  function pushManagement(address newOwner_) external;\\n\\n  function pullManagement() external;\\n}\\n\\ncontract Ownable is IOwnable {\\n  address internal _owner;\\n  address internal _newOwner;\\n\\n  event OwnershipPushed(\\n    address indexed previousOwner,\\n    address indexed newOwner\\n  );\\n  event OwnershipPulled(\\n    address indexed previousOwner,\\n    address indexed newOwner\\n  );\\n\\n  constructor() {\\n    _owner = msg.sender;\\n    emit OwnershipPushed(address(0), _owner);\\n  }\\n\\n  function manager() public view override returns (address) {\\n    return _owner;\\n  }\\n\\n  modifier onlyManager() {\\n    require(_owner == msg.sender, \\\"Ownable: caller is not the owner\\\");\\n    _;\\n  }\\n\\n  function renounceManagement() public virtual override onlyManager {\\n    emit OwnershipPushed(_owner, address(0));\\n    _owner = address(0);\\n  }\\n\\n  function pushManagement(address newOwner_)\\n    public\\n    virtual\\n    override\\n    onlyManager\\n  {\\n    require(newOwner_ != address(0), \\\"Ownable: new owner is the zero address\\\");\\n    emit OwnershipPushed(_owner, newOwner_);\\n    _newOwner = newOwner_;\\n  }\\n\\n  function pullManagement() public virtual override {\\n    require(msg.sender == _newOwner, \\\"Ownable: must be new owner to pull\\\");\\n    emit OwnershipPulled(_owner, _newOwner);\\n    _owner = _newOwner;\\n  }\\n}\\n\\ninterface IERC20 {\\n  function decimals() external view returns (uint8);\\n\\n  function balanceOf(address account) external view returns (uint256);\\n\\n  function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n  function approve(address spender, uint256 amount) external returns (bool);\\n\\n  function totalSupply() external view returns (uint256);\\n\\n  function transferFrom(\\n    address sender,\\n    address recipient,\\n    uint256 amount\\n  ) external returns (bool);\\n\\n  event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n  event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\\nlibrary SafeERC20 {\\n  using SafeMath for uint256;\\n  using Address for address;\\n\\n  function safeTransfer(\\n    IERC20 token,\\n    address to,\\n    uint256 value\\n  ) internal {\\n    _callOptionalReturn(\\n      token,\\n      abi.encodeWithSelector(token.transfer.selector, to, value)\\n    );\\n  }\\n\\n  function safeTransferFrom(\\n    IERC20 token,\\n    address from,\\n    address to,\\n    uint256 value\\n  ) internal {\\n    _callOptionalReturn(\\n      token,\\n      abi.encodeWithSelector(token.transferFrom.selector, from, to, value)\\n    );\\n  }\\n\\n  function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n    bytes memory returndata = address(token).functionCall(\\n      data,\\n      \\\"SafeERC20: low-level call failed\\\"\\n    );\\n    if (returndata.length > 0) {\\n      // Return data is optional\\n      // solhint-disable-next-line max-line-length\\n      require(\\n        abi.decode(returndata, (bool)),\\n        \\\"SafeERC20: ERC20 operation did not succeed\\\"\\n      );\\n    }\\n  }\\n}\\n\\ninterface IERC20Mintable {\\n  function mint(uint256 amount_) external;\\n\\n  function mint(address account_, uint256 ammount_) external;\\n}\\n\\ninterface IOHMERC20 {\\n  function burnFrom(address account_, uint256 amount_) external;\\n}\\n\\ninterface IBondCalculator {\\n  function valuation(address pair_, uint256 amount_)\\n    external\\n    view\\n    returns (uint256 _value);\\n}\\n\\ncontract MockOlympusTreasury is Ownable {\\n  using SafeMath for uint256;\\n  using SafeERC20 for IERC20;\\n\\n  event Deposit(address indexed token, uint256 amount, uint256 value);\\n  event Withdrawal(address indexed token, uint256 amount, uint256 value);\\n  event CreateDebt(\\n    address indexed debtor,\\n    address indexed token,\\n    uint256 amount,\\n    uint256 value\\n  );\\n  event RepayDebt(\\n    address indexed debtor,\\n    address indexed token,\\n    uint256 amount,\\n    uint256 value\\n  );\\n  event ReservesManaged(address indexed token, uint256 amount);\\n  event ReservesUpdated(uint256 indexed totalReserves);\\n  event ReservesAudited(uint256 indexed totalReserves);\\n  event RewardsMinted(\\n    address indexed caller,\\n    address indexed recipient,\\n    uint256 amount\\n  );\\n  event ChangeQueued(MANAGING indexed managing, address queued);\\n  event ChangeActivated(\\n    MANAGING indexed managing,\\n    address activated,\\n    bool result\\n  );\\n\\n  enum MANAGING {\\n    RESERVEDEPOSITOR,\\n    RESERVESPENDER,\\n    RESERVETOKEN,\\n    RESERVEMANAGER,\\n    LIQUIDITYDEPOSITOR,\\n    LIQUIDITYTOKEN,\\n    LIQUIDITYMANAGER,\\n    DEBTOR,\\n    REWARDMANAGER,\\n    SOHM\\n  }\\n\\n  address public immutable OHM;\\n  uint256 public immutable blocksNeededForQueue;\\n\\n  address[] public reserveTokens; // Push only, beware false-positives.\\n  mapping(address => bool) public isReserveToken;\\n  mapping(address => uint256) public reserveTokenQueue; // Delays changes to mapping.\\n\\n  address[] public reserveDepositors; // Push only, beware false-positives. Only for viewing.\\n  mapping(address => bool) public isReserveDepositor;\\n  mapping(address => uint256) public reserveDepositorQueue; // Delays changes to mapping.\\n\\n  address[] public reserveSpenders; // Push only, beware false-positives. Only for viewing.\\n  mapping(address => bool) public isReserveSpender;\\n  mapping(address => uint256) public reserveSpenderQueue; // Delays changes to mapping.\\n\\n  address[] public liquidityTokens; // Push only, beware false-positives.\\n  mapping(address => bool) public isLiquidityToken;\\n  mapping(address => uint256) public LiquidityTokenQueue; // Delays changes to mapping.\\n\\n  address[] public liquidityDepositors; // Push only, beware false-positives. Only for viewing.\\n  mapping(address => bool) public isLiquidityDepositor;\\n  mapping(address => uint256) public LiquidityDepositorQueue; // Delays changes to mapping.\\n\\n  mapping(address => address) public bondCalculator; // bond calculator for liquidity token\\n\\n  address[] public reserveManagers; // Push only, beware false-positives. Only for viewing.\\n  mapping(address => bool) public isReserveManager;\\n  mapping(address => uint256) public ReserveManagerQueue; // Delays changes to mapping.\\n\\n  address[] public liquidityManagers; // Push only, beware false-positives. Only for viewing.\\n  mapping(address => bool) public isLiquidityManager;\\n  mapping(address => uint256) public LiquidityManagerQueue; // Delays changes to mapping.\\n\\n  address[] public debtors; // Push only, beware false-positives. Only for viewing.\\n  mapping(address => bool) public isDebtor;\\n  mapping(address => uint256) public debtorQueue; // Delays changes to mapping.\\n  mapping(address => uint256) public debtorBalance;\\n\\n  address[] public rewardManagers; // Push only, beware false-positives. Only for viewing.\\n  mapping(address => bool) public isRewardManager;\\n  mapping(address => uint256) public rewardManagerQueue; // Delays changes to mapping.\\n\\n  address public sOHM;\\n  uint256 public sOHMQueue; // Delays change to sOHM address\\n\\n  uint256 public totalReserves; // Risk-free value of all assets\\n  uint256 public totalDebt;\\n\\n  constructor(\\n    address _OHM,\\n    address _DAI,\\n    address _Frax,\\n    //address _OHMDAI,\\n    uint256 _blocksNeededForQueue\\n  ) {\\n    require(_OHM != address(0));\\n    OHM = _OHM;\\n\\n    isReserveToken[_DAI] = true;\\n    reserveTokens.push(_DAI);\\n\\n    isReserveToken[_Frax] = true;\\n    reserveTokens.push(_Frax);\\n\\n    // isLiquidityToken[ _OHMDAI ] = true;\\n    // liquidityTokens.push( _OHMDAI );\\n\\n    blocksNeededForQueue = _blocksNeededForQueue;\\n  }\\n\\n  /**\\n        @notice allow approved address to deposit an asset for OHM\\n        @param _amount uint\\n        @param _token address\\n        @param _profit uint\\n        @return send_ uint\\n     */\\n  function deposit(\\n    uint256 _amount,\\n    address _token,\\n    uint256 _profit\\n  ) external returns (uint256 send_) {\\n    require(isReserveToken[_token] || isLiquidityToken[_token], \\\"Not accepted\\\");\\n    IERC20(_token).safeTransferFrom(msg.sender, address(this), _amount);\\n\\n    if (isReserveToken[_token]) {\\n      require(isReserveDepositor[msg.sender], \\\"Not approved\\\");\\n    } else {\\n      require(isLiquidityDepositor[msg.sender], \\\"Not approved\\\");\\n    }\\n\\n    uint256 value = valueOfToken(_token, _amount);\\n    (_token, _amount);\\n    // mint OHM needed and store amount of rewards for distribution\\n    send_ = value.sub(_profit);\\n    IERC20Mintable(OHM).mint(msg.sender, send_);\\n\\n    totalReserves = totalReserves.add(value);\\n    emit ReservesUpdated(totalReserves);\\n\\n    emit Deposit(_token, _amount, value);\\n  }\\n\\n  /**\\n        @notice allow approved address to burn OHM for reserves\\n        @param _amount uint\\n        @param _token address\\n     */\\n  function withdraw(uint256 _amount, address _token) external {\\n    require(isReserveToken[_token], \\\"Not accepted\\\"); // Only reserves can be used for redemptions\\n    require(isReserveSpender[msg.sender] == true, \\\"Not approved\\\");\\n\\n    uint256 value = valueOfToken(_token, _amount);\\n    IOHMERC20(OHM).burnFrom(msg.sender, value);\\n\\n    totalReserves = totalReserves.sub(value);\\n    emit ReservesUpdated(totalReserves);\\n\\n    IERC20(_token).safeTransfer(msg.sender, _amount);\\n\\n    emit Withdrawal(_token, _amount, value);\\n  }\\n\\n  /**\\n        @notice allow approved address to borrow reserves\\n        @param _amount uint\\n        @param _token address\\n     */\\n  function incurDebt(uint256 _amount, address _token) external {\\n    require(isDebtor[msg.sender], \\\"Not approved\\\");\\n    require(isReserveToken[_token], \\\"Not accepted\\\");\\n\\n    uint256 value = valueOfToken(_token, _amount);\\n\\n    uint256 maximumDebt = IERC20(sOHM).balanceOf(msg.sender); // Can only borrow against sOHM held\\n    uint256 availableDebt = maximumDebt.sub(debtorBalance[msg.sender]);\\n    require(value <= availableDebt, \\\"Exceeds debt limit\\\");\\n\\n    debtorBalance[msg.sender] = debtorBalance[msg.sender].add(value);\\n    totalDebt = totalDebt.add(value);\\n\\n    totalReserves = totalReserves.sub(value);\\n    emit ReservesUpdated(totalReserves);\\n\\n    IERC20(_token).transfer(msg.sender, _amount);\\n\\n    emit CreateDebt(msg.sender, _token, _amount, value);\\n  }\\n\\n  /**\\n        @notice allow approved address to repay borrowed reserves with reserves\\n        @param _amount uint\\n        @param _token address\\n     */\\n  function repayDebtWithReserve(uint256 _amount, address _token) external {\\n    require(isDebtor[msg.sender], \\\"Not approved\\\");\\n    require(isReserveToken[_token], \\\"Not accepted\\\");\\n\\n    IERC20(_token).safeTransferFrom(msg.sender, address(this), _amount);\\n\\n    uint256 value = valueOfToken(_token, _amount);\\n    debtorBalance[msg.sender] = debtorBalance[msg.sender].sub(value);\\n    totalDebt = totalDebt.sub(value);\\n\\n    totalReserves = totalReserves.add(value);\\n    emit ReservesUpdated(totalReserves);\\n\\n    emit RepayDebt(msg.sender, _token, _amount, value);\\n  }\\n\\n  /**\\n        @notice allow approved address to repay borrowed reserves with OHM\\n        @param _amount uint\\n     */\\n  function repayDebtWithOHM(uint256 _amount) external {\\n    require(isDebtor[msg.sender], \\\"Not approved\\\");\\n\\n    IOHMERC20(OHM).burnFrom(msg.sender, _amount);\\n\\n    debtorBalance[msg.sender] = debtorBalance[msg.sender].sub(_amount);\\n    totalDebt = totalDebt.sub(_amount);\\n\\n    emit RepayDebt(msg.sender, OHM, _amount, _amount);\\n  }\\n\\n  /**\\n        @notice allow approved address to withdraw assets\\n        @param _token address\\n        @param _amount uint\\n     */\\n  function manage(address _token, uint256 _amount) external {\\n    if (isLiquidityToken[_token]) {\\n      require(isLiquidityManager[msg.sender], \\\"Not approved\\\");\\n    } else {\\n      require(isReserveManager[msg.sender], \\\"Not approved\\\");\\n    }\\n\\n    uint256 value = valueOfToken(_token, _amount);\\n    (_token, _amount);\\n    require(value <= excessReserves(), \\\"Insufficient reserves\\\");\\n\\n    totalReserves = totalReserves.sub(value);\\n    emit ReservesUpdated(totalReserves);\\n\\n    IERC20(_token).safeTransfer(msg.sender, _amount);\\n\\n    emit ReservesManaged(_token, _amount);\\n  }\\n\\n  /**\\n        @notice send epoch reward to staking contract\\n     */\\n  function mintRewards(address _recipient, uint256 _amount) external {\\n    require(isRewardManager[msg.sender], \\\"Not approved\\\");\\n    require(_amount <= excessReserves(), \\\"Insufficient reserves\\\");\\n\\n    IERC20Mintable(OHM).mint(_recipient, _amount);\\n\\n    emit RewardsMinted(msg.sender, _recipient, _amount);\\n  }\\n\\n  /**\\n        @notice returns excess reserves not backing tokens\\n        @return uint\\n     */\\n  function excessReserves() public view returns (uint256) {\\n    return totalReserves.sub(IERC20(OHM).totalSupply().sub(totalDebt));\\n  }\\n\\n  /**\\n        @notice takes inventory of all tracked assets\\n        @notice always consolidate to recognized reserves before audit\\n     */\\n  function auditReserves() external onlyManager {\\n    uint256 reserves;\\n    for (uint256 i = 0; i < reserveTokens.length; i++) {\\n      reserves = reserves.add(\\n        valueOfToken(\\n          reserveTokens[i],\\n          IERC20(reserveTokens[i]).balanceOf(address(this))\\n        )\\n      );\\n    }\\n    for (uint256 i = 0; i < liquidityTokens.length; i++) {\\n      reserves = reserves.add(\\n        valueOfToken(\\n          liquidityTokens[i],\\n          IERC20(liquidityTokens[i]).balanceOf(address(this))\\n        )\\n      );\\n    }\\n    totalReserves = reserves;\\n    emit ReservesUpdated(reserves);\\n    emit ReservesAudited(reserves);\\n  }\\n\\n  /**\\n        @notice returns OHM valuation of asset\\n        @param _token address\\n        @param _amount uint\\n        @return value_ uint\\n     */\\n  function valueOfToken(address _token, uint256 _amount)\\n    public\\n    view\\n    returns (uint256 value_)\\n  {\\n    if (isReserveToken[_token]) {\\n      // convert amount to match OHM decimals\\n      value_ = _amount.mul(10**IERC20(OHM).decimals()).div(\\n        10**IERC20(_token).decimals()\\n      );\\n    } else if (isLiquidityToken[_token]) {\\n      value_ = IBondCalculator(bondCalculator[_token]).valuation(\\n        _token,\\n        _amount\\n      );\\n    }\\n  }\\n\\n  /**\\n        @notice queue address to change boolean in mapping\\n        @param _managing MANAGING\\n        @param _address address\\n        @return bool\\n     */\\n  function queue(MANAGING _managing, address _address)\\n    external\\n    onlyManager\\n    returns (bool)\\n  {\\n    require(_address != address(0));\\n    if (_managing == MANAGING.RESERVEDEPOSITOR) {\\n      // 0\\n      reserveDepositorQueue[_address] = block.number.add(blocksNeededForQueue);\\n    } else if (_managing == MANAGING.RESERVESPENDER) {\\n      // 1\\n      reserveSpenderQueue[_address] = block.number.add(blocksNeededForQueue);\\n    } else if (_managing == MANAGING.RESERVETOKEN) {\\n      // 2\\n      reserveTokenQueue[_address] = block.number.add(blocksNeededForQueue);\\n    } else if (_managing == MANAGING.RESERVEMANAGER) {\\n      // 3\\n      ReserveManagerQueue[_address] = block.number.add(\\n        blocksNeededForQueue.mul(2)\\n      );\\n    } else if (_managing == MANAGING.LIQUIDITYDEPOSITOR) {\\n      // 4\\n      LiquidityDepositorQueue[_address] = block.number.add(\\n        blocksNeededForQueue\\n      );\\n    } else if (_managing == MANAGING.LIQUIDITYTOKEN) {\\n      // 5\\n      LiquidityTokenQueue[_address] = block.number.add(blocksNeededForQueue);\\n    } else if (_managing == MANAGING.LIQUIDITYMANAGER) {\\n      // 6\\n      LiquidityManagerQueue[_address] = block.number.add(\\n        blocksNeededForQueue.mul(2)\\n      );\\n    } else if (_managing == MANAGING.DEBTOR) {\\n      // 7\\n      debtorQueue[_address] = block.number.add(blocksNeededForQueue);\\n    } else if (_managing == MANAGING.REWARDMANAGER) {\\n      // 8\\n      rewardManagerQueue[_address] = block.number.add(blocksNeededForQueue);\\n    } else if (_managing == MANAGING.SOHM) {\\n      // 9\\n      sOHMQueue = block.number.add(blocksNeededForQueue);\\n    } else return false;\\n\\n    emit ChangeQueued(_managing, _address);\\n    return true;\\n  }\\n\\n  /**\\n        @notice verify queue then set boolean in mapping\\n        @param _managing MANAGING\\n        @param _address address\\n        @param _calculator address\\n        @return bool\\n     */\\n  function toggle(\\n    MANAGING _managing,\\n    address _address,\\n    address _calculator\\n  ) external onlyManager returns (bool) {\\n    require(_address != address(0));\\n    bool result;\\n    if (_managing == MANAGING.RESERVEDEPOSITOR) {\\n      // 0\\n      if (requirements(reserveDepositorQueue, isReserveDepositor, _address)) {\\n        reserveDepositorQueue[_address] = 0;\\n        if (!listContains(reserveDepositors, _address)) {\\n          reserveDepositors.push(_address);\\n        }\\n      }\\n      result = !isReserveDepositor[_address];\\n      isReserveDepositor[_address] = result;\\n    } else if (_managing == MANAGING.RESERVESPENDER) {\\n      // 1\\n      if (requirements(reserveSpenderQueue, isReserveSpender, _address)) {\\n        reserveSpenderQueue[_address] = 0;\\n        if (!listContains(reserveSpenders, _address)) {\\n          reserveSpenders.push(_address);\\n        }\\n      }\\n      result = !isReserveSpender[_address];\\n      isReserveSpender[_address] = result;\\n    } else if (_managing == MANAGING.RESERVETOKEN) {\\n      // 2\\n      if (requirements(reserveTokenQueue, isReserveToken, _address)) {\\n        reserveTokenQueue[_address] = 0;\\n        if (!listContains(reserveTokens, _address)) {\\n          reserveTokens.push(_address);\\n        }\\n      }\\n      result = !isReserveToken[_address];\\n      isReserveToken[_address] = result;\\n    } else if (_managing == MANAGING.RESERVEMANAGER) {\\n      // 3\\n      if (requirements(ReserveManagerQueue, isReserveManager, _address)) {\\n        reserveManagers.push(_address);\\n        ReserveManagerQueue[_address] = 0;\\n        if (!listContains(reserveManagers, _address)) {\\n          reserveManagers.push(_address);\\n        }\\n      }\\n      result = !isReserveManager[_address];\\n      isReserveManager[_address] = result;\\n    } else if (_managing == MANAGING.LIQUIDITYDEPOSITOR) {\\n      // 4\\n      if (\\n        requirements(LiquidityDepositorQueue, isLiquidityDepositor, _address)\\n      ) {\\n        liquidityDepositors.push(_address);\\n        LiquidityDepositorQueue[_address] = 0;\\n        if (!listContains(liquidityDepositors, _address)) {\\n          liquidityDepositors.push(_address);\\n        }\\n      }\\n      result = !isLiquidityDepositor[_address];\\n      isLiquidityDepositor[_address] = result;\\n    } else if (_managing == MANAGING.LIQUIDITYTOKEN) {\\n      // 5\\n      if (requirements(LiquidityTokenQueue, isLiquidityToken, _address)) {\\n        LiquidityTokenQueue[_address] = 0;\\n        if (!listContains(liquidityTokens, _address)) {\\n          liquidityTokens.push(_address);\\n        }\\n      }\\n      result = !isLiquidityToken[_address];\\n      isLiquidityToken[_address] = result;\\n      bondCalculator[_address] = _calculator;\\n    } else if (_managing == MANAGING.LIQUIDITYMANAGER) {\\n      // 6\\n      if (requirements(LiquidityManagerQueue, isLiquidityManager, _address)) {\\n        LiquidityManagerQueue[_address] = 0;\\n        if (!listContains(liquidityManagers, _address)) {\\n          liquidityManagers.push(_address);\\n        }\\n      }\\n      result = !isLiquidityManager[_address];\\n      isLiquidityManager[_address] = result;\\n    } else if (_managing == MANAGING.DEBTOR) {\\n      // 7\\n      if (requirements(debtorQueue, isDebtor, _address)) {\\n        debtorQueue[_address] = 0;\\n        if (!listContains(debtors, _address)) {\\n          debtors.push(_address);\\n        }\\n      }\\n      result = !isDebtor[_address];\\n      isDebtor[_address] = result;\\n    } else if (_managing == MANAGING.REWARDMANAGER) {\\n      // 8\\n      if (requirements(rewardManagerQueue, isRewardManager, _address)) {\\n        rewardManagerQueue[_address] = 0;\\n        if (!listContains(rewardManagers, _address)) {\\n          rewardManagers.push(_address);\\n        }\\n      }\\n      result = !isRewardManager[_address];\\n      isRewardManager[_address] = result;\\n    } else if (_managing == MANAGING.SOHM) {\\n      // 9\\n      sOHMQueue = 0;\\n      sOHM = _address;\\n      result = true;\\n    } else return false;\\n\\n    emit ChangeActivated(_managing, _address, result);\\n    return true;\\n  }\\n\\n  /**\\n        @notice checks requirements and returns altered structs\\n        @param queue_ mapping( address => uint )\\n        @param status_ mapping( address => bool )\\n        @param _address address\\n        @return bool \\n     */\\n  function requirements(\\n    mapping(address => uint256) storage queue_,\\n    mapping(address => bool) storage status_,\\n    address _address\\n  ) internal view returns (bool) {\\n    if (!status_[_address]) {\\n      require(queue_[_address] != 0, \\\"Must queue\\\");\\n      require(queue_[_address] <= block.number, \\\"Queue not expired\\\");\\n      return true;\\n    }\\n    return false;\\n  }\\n\\n  /**\\n        @notice checks array to ensure against duplicate\\n        @param _list address[]\\n        @param _token address\\n        @return bool\\n     */\\n  function listContains(address[] storage _list, address _token)\\n    internal\\n    view\\n    returns (bool)\\n  {\\n    for (uint256 i = 0; i < _list.length; i++) {\\n      if (_list[i] == _token) {\\n        return true;\\n      }\\n    }\\n    return false;\\n  }\\n}\\n\",\"keccak256\":\"0x02db9e69fb4f8c1d1c9dc5c99e26fadc4373cef48acd8949c016aae2a74e45fb\",\"license\":\"MIT\"}},\"version\":1}",
          "storageLayout": {
            "storage": [
              {
                "astId": 284,
                "contract": "contracts/mocks/MockTreasury.sol:Ownable",
                "label": "_owner",
                "offset": 0,
                "slot": "0",
                "type": "t_address"
              },
              {
                "astId": 286,
                "contract": "contracts/mocks/MockTreasury.sol:Ownable",
                "label": "_newOwner",
                "offset": 0,
                "slot": "1",
                "type": "t_address"
              }
            ],
            "types": {
              "t_address": {
                "encoding": "inplace",
                "label": "address",
                "numberOfBytes": "20"
              }
            }
          },
          "userdoc": {
            "kind": "user",
            "methods": {},
            "version": 1
          }
        },
        "SafeERC20": {
          "abi": [],
          "devdoc": {
            "kind": "dev",
            "methods": {},
            "version": 1
          },
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220cba10a1317f98b86aa68dc46ca53fb323e43ed4c8269b651f7670725c34b637564736f6c634300080a0033",
              "opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCB LOG1 EXP SGT OR 0xF9 DUP12 DUP7 0xAA PUSH9 0xDC46CA53FB323E43ED 0x4C DUP3 PUSH10 0xB651F7670725C34B6375 PUSH5 0x736F6C6343 STOP ADDMOD EXP STOP CALLER ",
              "sourceMap": "4992:964:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;4992:964:0;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220cba10a1317f98b86aa68dc46ca53fb323e43ed4c8269b651f7670725c34b637564736f6c634300080a0033",
              "opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCB LOG1 EXP SGT OR 0xF9 DUP12 DUP7 0xAA PUSH9 0xDC46CA53FB323E43ED 0x4C DUP3 PUSH10 0xB651F7670725C34B6375 PUSH5 0x736F6C6343 STOP ADDMOD EXP STOP CALLER ",
              "sourceMap": "4992:964:0:-:0;;;;;;;;"
            },
            "gasEstimates": {
              "creation": {
                "codeDepositCost": "17200",
                "executionCost": "103",
                "totalCost": "17303"
              },
              "internal": {
                "_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
                "safeTransfer(contract IERC20,address,uint256)": "infinite",
                "safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
              }
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/mocks/MockTreasury.sol\":\"SafeERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/mocks/MockTreasury.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.10;\\n\\nlibrary SafeMath {\\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n    uint256 c = a + b;\\n    require(c >= a, \\\"SafeMath: addition overflow\\\");\\n\\n    return c;\\n  }\\n\\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n    return sub(a, b, \\\"SafeMath: subtraction overflow\\\");\\n  }\\n\\n  function sub(\\n    uint256 a,\\n    uint256 b,\\n    string memory errorMessage\\n  ) internal pure returns (uint256) {\\n    require(b <= a, errorMessage);\\n    uint256 c = a - b;\\n\\n    return c;\\n  }\\n\\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n    if (a == 0) {\\n      return 0;\\n    }\\n\\n    uint256 c = a * b;\\n    require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\n\\n    return c;\\n  }\\n\\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n    return div(a, b, \\\"SafeMath: division by zero\\\");\\n  }\\n\\n  function div(\\n    uint256 a,\\n    uint256 b,\\n    string memory errorMessage\\n  ) internal pure returns (uint256) {\\n    require(b > 0, errorMessage);\\n    uint256 c = a / b;\\n    return c;\\n  }\\n}\\n\\nlibrary Address {\\n  function isContract(address account) internal view returns (bool) {\\n    // This method relies in extcodesize, which returns 0 for contracts in\\n    // construction, since the code is only stored at the end of the\\n    // constructor execution.\\n\\n    uint256 size;\\n    // solhint-disable-next-line no-inline-assembly\\n    assembly {\\n      size := extcodesize(account)\\n    }\\n    return size > 0;\\n  }\\n\\n  function functionCall(\\n    address target,\\n    bytes memory data,\\n    string memory errorMessage\\n  ) internal returns (bytes memory) {\\n    return _functionCallWithValue(target, data, 0, errorMessage);\\n  }\\n\\n  function _functionCallWithValue(\\n    address target,\\n    bytes memory data,\\n    uint256 weiValue,\\n    string memory errorMessage\\n  ) private returns (bytes memory) {\\n    require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n    // solhint-disable-next-line avoid-low-level-calls\\n    (bool success, bytes memory returndata) = target.call{value: weiValue}(\\n      data\\n    );\\n    if (success) {\\n      return returndata;\\n    } else {\\n      if (returndata.length > 0) {\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n          let returndata_size := mload(returndata)\\n          revert(add(32, returndata), returndata_size)\\n        }\\n      } else {\\n        revert(errorMessage);\\n      }\\n    }\\n  }\\n\\n  function _verifyCallResult(\\n    bool success,\\n    bytes memory returndata,\\n    string memory errorMessage\\n  ) private pure returns (bytes memory) {\\n    if (success) {\\n      return returndata;\\n    } else {\\n      if (returndata.length > 0) {\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n          let returndata_size := mload(returndata)\\n          revert(add(32, returndata), returndata_size)\\n        }\\n      } else {\\n        revert(errorMessage);\\n      }\\n    }\\n  }\\n}\\n\\ninterface IOwnable {\\n  function manager() external view returns (address);\\n\\n  function renounceManagement() external;\\n\\n  function pushManagement(address newOwner_) external;\\n\\n  function pullManagement() external;\\n}\\n\\ncontract Ownable is IOwnable {\\n  address internal _owner;\\n  address internal _newOwner;\\n\\n  event OwnershipPushed(\\n    address indexed previousOwner,\\n    address indexed newOwner\\n  );\\n  event OwnershipPulled(\\n    address indexed previousOwner,\\n    address indexed newOwner\\n  );\\n\\n  constructor() {\\n    _owner = msg.sender;\\n    emit OwnershipPushed(address(0), _owner);\\n  }\\n\\n  function manager() public view override returns (address) {\\n    return _owner;\\n  }\\n\\n  modifier onlyManager() {\\n    require(_owner == msg.sender, \\\"Ownable: caller is not the owner\\\");\\n    _;\\n  }\\n\\n  function renounceManagement() public virtual override onlyManager {\\n    emit OwnershipPushed(_owner, address(0));\\n    _owner = address(0);\\n  }\\n\\n  function pushManagement(address newOwner_)\\n    public\\n    virtual\\n    override\\n    onlyManager\\n  {\\n    require(newOwner_ != address(0), \\\"Ownable: new owner is the zero address\\\");\\n    emit OwnershipPushed(_owner, newOwner_);\\n    _newOwner = newOwner_;\\n  }\\n\\n  function pullManagement() public virtual override {\\n    require(msg.sender == _newOwner, \\\"Ownable: must be new owner to pull\\\");\\n    emit OwnershipPulled(_owner, _newOwner);\\n    _owner = _newOwner;\\n  }\\n}\\n\\ninterface IERC20 {\\n  function decimals() external view returns (uint8);\\n\\n  function balanceOf(address account) external view returns (uint256);\\n\\n  function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n  function approve(address spender, uint256 amount) external returns (bool);\\n\\n  function totalSupply() external view returns (uint256);\\n\\n  function transferFrom(\\n    address sender,\\n    address recipient,\\n    uint256 amount\\n  ) external returns (bool);\\n\\n  event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n  event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\\nlibrary SafeERC20 {\\n  using SafeMath for uint256;\\n  using Address for address;\\n\\n  function safeTransfer(\\n    IERC20 token,\\n    address to,\\n    uint256 value\\n  ) internal {\\n    _callOptionalReturn(\\n      token,\\n      abi.encodeWithSelector(token.transfer.selector, to, value)\\n    );\\n  }\\n\\n  function safeTransferFrom(\\n    IERC20 token,\\n    address from,\\n    address to,\\n    uint256 value\\n  ) internal {\\n    _callOptionalReturn(\\n      token,\\n      abi.encodeWithSelector(token.transferFrom.selector, from, to, value)\\n    );\\n  }\\n\\n  function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n    bytes memory returndata = address(token).functionCall(\\n      data,\\n      \\\"SafeERC20: low-level call failed\\\"\\n    );\\n    if (returndata.length > 0) {\\n      // Return data is optional\\n      // solhint-disable-next-line max-line-length\\n      require(\\n        abi.decode(returndata, (bool)),\\n        \\\"SafeERC20: ERC20 operation did not succeed\\\"\\n      );\\n    }\\n  }\\n}\\n\\ninterface IERC20Mintable {\\n  function mint(uint256 amount_) external;\\n\\n  function mint(address account_, uint256 ammount_) external;\\n}\\n\\ninterface IOHMERC20 {\\n  function burnFrom(address account_, uint256 amount_) external;\\n}\\n\\ninterface IBondCalculator {\\n  function valuation(address pair_, uint256 amount_)\\n    external\\n    view\\n    returns (uint256 _value);\\n}\\n\\ncontract MockOlympusTreasury is Ownable {\\n  using SafeMath for uint256;\\n  using SafeERC20 for IERC20;\\n\\n  event Deposit(address indexed token, uint256 amount, uint256 value);\\n  event Withdrawal(address indexed token, uint256 amount, uint256 value);\\n  event CreateDebt(\\n    address indexed debtor,\\n    address indexed token,\\n    uint256 amount,\\n    uint256 value\\n  );\\n  event RepayDebt(\\n    address indexed debtor,\\n    address indexed token,\\n    uint256 amount,\\n    uint256 value\\n  );\\n  event ReservesManaged(address indexed token, uint256 amount);\\n  event ReservesUpdated(uint256 indexed totalReserves);\\n  event ReservesAudited(uint256 indexed totalReserves);\\n  event RewardsMinted(\\n    address indexed caller,\\n    address indexed recipient,\\n    uint256 amount\\n  );\\n  event ChangeQueued(MANAGING indexed managing, address queued);\\n  event ChangeActivated(\\n    MANAGING indexed managing,\\n    address activated,\\n    bool result\\n  );\\n\\n  enum MANAGING {\\n    RESERVEDEPOSITOR,\\n    RESERVESPENDER,\\n    RESERVETOKEN,\\n    RESERVEMANAGER,\\n    LIQUIDITYDEPOSITOR,\\n    LIQUIDITYTOKEN,\\n    LIQUIDITYMANAGER,\\n    DEBTOR,\\n    REWARDMANAGER,\\n    SOHM\\n  }\\n\\n  address public immutable OHM;\\n  uint256 public immutable blocksNeededForQueue;\\n\\n  address[] public reserveTokens; // Push only, beware false-positives.\\n  mapping(address => bool) public isReserveToken;\\n  mapping(address => uint256) public reserveTokenQueue; // Delays changes to mapping.\\n\\n  address[] public reserveDepositors; // Push only, beware false-positives. Only for viewing.\\n  mapping(address => bool) public isReserveDepositor;\\n  mapping(address => uint256) public reserveDepositorQueue; // Delays changes to mapping.\\n\\n  address[] public reserveSpenders; // Push only, beware false-positives. Only for viewing.\\n  mapping(address => bool) public isReserveSpender;\\n  mapping(address => uint256) public reserveSpenderQueue; // Delays changes to mapping.\\n\\n  address[] public liquidityTokens; // Push only, beware false-positives.\\n  mapping(address => bool) public isLiquidityToken;\\n  mapping(address => uint256) public LiquidityTokenQueue; // Delays changes to mapping.\\n\\n  address[] public liquidityDepositors; // Push only, beware false-positives. Only for viewing.\\n  mapping(address => bool) public isLiquidityDepositor;\\n  mapping(address => uint256) public LiquidityDepositorQueue; // Delays changes to mapping.\\n\\n  mapping(address => address) public bondCalculator; // bond calculator for liquidity token\\n\\n  address[] public reserveManagers; // Push only, beware false-positives. Only for viewing.\\n  mapping(address => bool) public isReserveManager;\\n  mapping(address => uint256) public ReserveManagerQueue; // Delays changes to mapping.\\n\\n  address[] public liquidityManagers; // Push only, beware false-positives. Only for viewing.\\n  mapping(address => bool) public isLiquidityManager;\\n  mapping(address => uint256) public LiquidityManagerQueue; // Delays changes to mapping.\\n\\n  address[] public debtors; // Push only, beware false-positives. Only for viewing.\\n  mapping(address => bool) public isDebtor;\\n  mapping(address => uint256) public debtorQueue; // Delays changes to mapping.\\n  mapping(address => uint256) public debtorBalance;\\n\\n  address[] public rewardManagers; // Push only, beware false-positives. Only for viewing.\\n  mapping(address => bool) public isRewardManager;\\n  mapping(address => uint256) public rewardManagerQueue; // Delays changes to mapping.\\n\\n  address public sOHM;\\n  uint256 public sOHMQueue; // Delays change to sOHM address\\n\\n  uint256 public totalReserves; // Risk-free value of all assets\\n  uint256 public totalDebt;\\n\\n  constructor(\\n    address _OHM,\\n    address _DAI,\\n    address _Frax,\\n    //address _OHMDAI,\\n    uint256 _blocksNeededForQueue\\n  ) {\\n    require(_OHM != address(0));\\n    OHM = _OHM;\\n\\n    isReserveToken[_DAI] = true;\\n    reserveTokens.push(_DAI);\\n\\n    isReserveToken[_Frax] = true;\\n    reserveTokens.push(_Frax);\\n\\n    // isLiquidityToken[ _OHMDAI ] = true;\\n    // liquidityTokens.push( _OHMDAI );\\n\\n    blocksNeededForQueue = _blocksNeededForQueue;\\n  }\\n\\n  /**\\n        @notice allow approved address to deposit an asset for OHM\\n        @param _amount uint\\n        @param _token address\\n        @param _profit uint\\n        @return send_ uint\\n     */\\n  function deposit(\\n    uint256 _amount,\\n    address _token,\\n    uint256 _profit\\n  ) external returns (uint256 send_) {\\n    require(isReserveToken[_token] || isLiquidityToken[_token], \\\"Not accepted\\\");\\n    IERC20(_token).safeTransferFrom(msg.sender, address(this), _amount);\\n\\n    if (isReserveToken[_token]) {\\n      require(isReserveDepositor[msg.sender], \\\"Not approved\\\");\\n    } else {\\n      require(isLiquidityDepositor[msg.sender], \\\"Not approved\\\");\\n    }\\n\\n    uint256 value = valueOfToken(_token, _amount);\\n    (_token, _amount);\\n    // mint OHM needed and store amount of rewards for distribution\\n    send_ = value.sub(_profit);\\n    IERC20Mintable(OHM).mint(msg.sender, send_);\\n\\n    totalReserves = totalReserves.add(value);\\n    emit ReservesUpdated(totalReserves);\\n\\n    emit Deposit(_token, _amount, value);\\n  }\\n\\n  /**\\n        @notice allow approved address to burn OHM for reserves\\n        @param _amount uint\\n        @param _token address\\n     */\\n  function withdraw(uint256 _amount, address _token) external {\\n    require(isReserveToken[_token], \\\"Not accepted\\\"); // Only reserves can be used for redemptions\\n    require(isReserveSpender[msg.sender] == true, \\\"Not approved\\\");\\n\\n    uint256 value = valueOfToken(_token, _amount);\\n    IOHMERC20(OHM).burnFrom(msg.sender, value);\\n\\n    totalReserves = totalReserves.sub(value);\\n    emit ReservesUpdated(totalReserves);\\n\\n    IERC20(_token).safeTransfer(msg.sender, _amount);\\n\\n    emit Withdrawal(_token, _amount, value);\\n  }\\n\\n  /**\\n        @notice allow approved address to borrow reserves\\n        @param _amount uint\\n        @param _token address\\n     */\\n  function incurDebt(uint256 _amount, address _token) external {\\n    require(isDebtor[msg.sender], \\\"Not approved\\\");\\n    require(isReserveToken[_token], \\\"Not accepted\\\");\\n\\n    uint256 value = valueOfToken(_token, _amount);\\n\\n    uint256 maximumDebt = IERC20(sOHM).balanceOf(msg.sender); // Can only borrow against sOHM held\\n    uint256 availableDebt = maximumDebt.sub(debtorBalance[msg.sender]);\\n    require(value <= availableDebt, \\\"Exceeds debt limit\\\");\\n\\n    debtorBalance[msg.sender] = debtorBalance[msg.sender].add(value);\\n    totalDebt = totalDebt.add(value);\\n\\n    totalReserves = totalReserves.sub(value);\\n    emit ReservesUpdated(totalReserves);\\n\\n    IERC20(_token).transfer(msg.sender, _amount);\\n\\n    emit CreateDebt(msg.sender, _token, _amount, value);\\n  }\\n\\n  /**\\n        @notice allow approved address to repay borrowed reserves with reserves\\n        @param _amount uint\\n        @param _token address\\n     */\\n  function repayDebtWithReserve(uint256 _amount, address _token) external {\\n    require(isDebtor[msg.sender], \\\"Not approved\\\");\\n    require(isReserveToken[_token], \\\"Not accepted\\\");\\n\\n    IERC20(_token).safeTransferFrom(msg.sender, address(this), _amount);\\n\\n    uint256 value = valueOfToken(_token, _amount);\\n    debtorBalance[msg.sender] = debtorBalance[msg.sender].sub(value);\\n    totalDebt = totalDebt.sub(value);\\n\\n    totalReserves = totalReserves.add(value);\\n    emit ReservesUpdated(totalReserves);\\n\\n    emit RepayDebt(msg.sender, _token, _amount, value);\\n  }\\n\\n  /**\\n        @notice allow approved address to repay borrowed reserves with OHM\\n        @param _amount uint\\n     */\\n  function repayDebtWithOHM(uint256 _amount) external {\\n    require(isDebtor[msg.sender], \\\"Not approved\\\");\\n\\n    IOHMERC20(OHM).burnFrom(msg.sender, _amount);\\n\\n    debtorBalance[msg.sender] = debtorBalance[msg.sender].sub(_amount);\\n    totalDebt = totalDebt.sub(_amount);\\n\\n    emit RepayDebt(msg.sender, OHM, _amount, _amount);\\n  }\\n\\n  /**\\n        @notice allow approved address to withdraw assets\\n        @param _token address\\n        @param _amount uint\\n     */\\n  function manage(address _token, uint256 _amount) external {\\n    if (isLiquidityToken[_token]) {\\n      require(isLiquidityManager[msg.sender], \\\"Not approved\\\");\\n    } else {\\n      require(isReserveManager[msg.sender], \\\"Not approved\\\");\\n    }\\n\\n    uint256 value = valueOfToken(_token, _amount);\\n    (_token, _amount);\\n    require(value <= excessReserves(), \\\"Insufficient reserves\\\");\\n\\n    totalReserves = totalReserves.sub(value);\\n    emit ReservesUpdated(totalReserves);\\n\\n    IERC20(_token).safeTransfer(msg.sender, _amount);\\n\\n    emit ReservesManaged(_token, _amount);\\n  }\\n\\n  /**\\n        @notice send epoch reward to staking contract\\n     */\\n  function mintRewards(address _recipient, uint256 _amount) external {\\n    require(isRewardManager[msg.sender], \\\"Not approved\\\");\\n    require(_amount <= excessReserves(), \\\"Insufficient reserves\\\");\\n\\n    IERC20Mintable(OHM).mint(_recipient, _amount);\\n\\n    emit RewardsMinted(msg.sender, _recipient, _amount);\\n  }\\n\\n  /**\\n        @notice returns excess reserves not backing tokens\\n        @return uint\\n     */\\n  function excessReserves() public view returns (uint256) {\\n    return totalReserves.sub(IERC20(OHM).totalSupply().sub(totalDebt));\\n  }\\n\\n  /**\\n        @notice takes inventory of all tracked assets\\n        @notice always consolidate to recognized reserves before audit\\n     */\\n  function auditReserves() external onlyManager {\\n    uint256 reserves;\\n    for (uint256 i = 0; i < reserveTokens.length; i++) {\\n      reserves = reserves.add(\\n        valueOfToken(\\n          reserveTokens[i],\\n          IERC20(reserveTokens[i]).balanceOf(address(this))\\n        )\\n      );\\n    }\\n    for (uint256 i = 0; i < liquidityTokens.length; i++) {\\n      reserves = reserves.add(\\n        valueOfToken(\\n          liquidityTokens[i],\\n          IERC20(liquidityTokens[i]).balanceOf(address(this))\\n        )\\n      );\\n    }\\n    totalReserves = reserves;\\n    emit ReservesUpdated(reserves);\\n    emit ReservesAudited(reserves);\\n  }\\n\\n  /**\\n        @notice returns OHM valuation of asset\\n        @param _token address\\n        @param _amount uint\\n        @return value_ uint\\n     */\\n  function valueOfToken(address _token, uint256 _amount)\\n    public\\n    view\\n    returns (uint256 value_)\\n  {\\n    if (isReserveToken[_token]) {\\n      // convert amount to match OHM decimals\\n      value_ = _amount.mul(10**IERC20(OHM).decimals()).div(\\n        10**IERC20(_token).decimals()\\n      );\\n    } else if (isLiquidityToken[_token]) {\\n      value_ = IBondCalculator(bondCalculator[_token]).valuation(\\n        _token,\\n        _amount\\n      );\\n    }\\n  }\\n\\n  /**\\n        @notice queue address to change boolean in mapping\\n        @param _managing MANAGING\\n        @param _address address\\n        @return bool\\n     */\\n  function queue(MANAGING _managing, address _address)\\n    external\\n    onlyManager\\n    returns (bool)\\n  {\\n    require(_address != address(0));\\n    if (_managing == MANAGING.RESERVEDEPOSITOR) {\\n      // 0\\n      reserveDepositorQueue[_address] = block.number.add(blocksNeededForQueue);\\n    } else if (_managing == MANAGING.RESERVESPENDER) {\\n      // 1\\n      reserveSpenderQueue[_address] = block.number.add(blocksNeededForQueue);\\n    } else if (_managing == MANAGING.RESERVETOKEN) {\\n      // 2\\n      reserveTokenQueue[_address] = block.number.add(blocksNeededForQueue);\\n    } else if (_managing == MANAGING.RESERVEMANAGER) {\\n      // 3\\n      ReserveManagerQueue[_address] = block.number.add(\\n        blocksNeededForQueue.mul(2)\\n      );\\n    } else if (_managing == MANAGING.LIQUIDITYDEPOSITOR) {\\n      // 4\\n      LiquidityDepositorQueue[_address] = block.number.add(\\n        blocksNeededForQueue\\n      );\\n    } else if (_managing == MANAGING.LIQUIDITYTOKEN) {\\n      // 5\\n      LiquidityTokenQueue[_address] = block.number.add(blocksNeededForQueue);\\n    } else if (_managing == MANAGING.LIQUIDITYMANAGER) {\\n      // 6\\n      LiquidityManagerQueue[_address] = block.number.add(\\n        blocksNeededForQueue.mul(2)\\n      );\\n    } else if (_managing == MANAGING.DEBTOR) {\\n      // 7\\n      debtorQueue[_address] = block.number.add(blocksNeededForQueue);\\n    } else if (_managing == MANAGING.REWARDMANAGER) {\\n      // 8\\n      rewardManagerQueue[_address] = block.number.add(blocksNeededForQueue);\\n    } else if (_managing == MANAGING.SOHM) {\\n      // 9\\n      sOHMQueue = block.number.add(blocksNeededForQueue);\\n    } else return false;\\n\\n    emit ChangeQueued(_managing, _address);\\n    return true;\\n  }\\n\\n  /**\\n        @notice verify queue then set boolean in mapping\\n        @param _managing MANAGING\\n        @param _address address\\n        @param _calculator address\\n        @return bool\\n     */\\n  function toggle(\\n    MANAGING _managing,\\n    address _address,\\n    address _calculator\\n  ) external onlyManager returns (bool) {\\n    require(_address != address(0));\\n    bool result;\\n    if (_managing == MANAGING.RESERVEDEPOSITOR) {\\n      // 0\\n      if (requirements(reserveDepositorQueue, isReserveDepositor, _address)) {\\n        reserveDepositorQueue[_address] = 0;\\n        if (!listContains(reserveDepositors, _address)) {\\n          reserveDepositors.push(_address);\\n        }\\n      }\\n      result = !isReserveDepositor[_address];\\n      isReserveDepositor[_address] = result;\\n    } else if (_managing == MANAGING.RESERVESPENDER) {\\n      // 1\\n      if (requirements(reserveSpenderQueue, isReserveSpender, _address)) {\\n        reserveSpenderQueue[_address] = 0;\\n        if (!listContains(reserveSpenders, _address)) {\\n          reserveSpenders.push(_address);\\n        }\\n      }\\n      result = !isReserveSpender[_address];\\n      isReserveSpender[_address] = result;\\n    } else if (_managing == MANAGING.RESERVETOKEN) {\\n      // 2\\n      if (requirements(reserveTokenQueue, isReserveToken, _address)) {\\n        reserveTokenQueue[_address] = 0;\\n        if (!listContains(reserveTokens, _address)) {\\n          reserveTokens.push(_address);\\n        }\\n      }\\n      result = !isReserveToken[_address];\\n      isReserveToken[_address] = result;\\n    } else if (_managing == MANAGING.RESERVEMANAGER) {\\n      // 3\\n      if (requirements(ReserveManagerQueue, isReserveManager, _address)) {\\n        reserveManagers.push(_address);\\n        ReserveManagerQueue[_address] = 0;\\n        if (!listContains(reserveManagers, _address)) {\\n          reserveManagers.push(_address);\\n        }\\n      }\\n      result = !isReserveManager[_address];\\n      isReserveManager[_address] = result;\\n    } else if (_managing == MANAGING.LIQUIDITYDEPOSITOR) {\\n      // 4\\n      if (\\n        requirements(LiquidityDepositorQueue, isLiquidityDepositor, _address)\\n      ) {\\n        liquidityDepositors.push(_address);\\n        LiquidityDepositorQueue[_address] = 0;\\n        if (!listContains(liquidityDepositors, _address)) {\\n          liquidityDepositors.push(_address);\\n        }\\n      }\\n      result = !isLiquidityDepositor[_address];\\n      isLiquidityDepositor[_address] = result;\\n    } else if (_managing == MANAGING.LIQUIDITYTOKEN) {\\n      // 5\\n      if (requirements(LiquidityTokenQueue, isLiquidityToken, _address)) {\\n        LiquidityTokenQueue[_address] = 0;\\n        if (!listContains(liquidityTokens, _address)) {\\n          liquidityTokens.push(_address);\\n        }\\n      }\\n      result = !isLiquidityToken[_address];\\n      isLiquidityToken[_address] = result;\\n      bondCalculator[_address] = _calculator;\\n    } else if (_managing == MANAGING.LIQUIDITYMANAGER) {\\n      // 6\\n      if (requirements(LiquidityManagerQueue, isLiquidityManager, _address)) {\\n        LiquidityManagerQueue[_address] = 0;\\n        if (!listContains(liquidityManagers, _address)) {\\n          liquidityManagers.push(_address);\\n        }\\n      }\\n      result = !isLiquidityManager[_address];\\n      isLiquidityManager[_address] = result;\\n    } else if (_managing == MANAGING.DEBTOR) {\\n      // 7\\n      if (requirements(debtorQueue, isDebtor, _address)) {\\n        debtorQueue[_address] = 0;\\n        if (!listContains(debtors, _address)) {\\n          debtors.push(_address);\\n        }\\n      }\\n      result = !isDebtor[_address];\\n      isDebtor[_address] = result;\\n    } else if (_managing == MANAGING.REWARDMANAGER) {\\n      // 8\\n      if (requirements(rewardManagerQueue, isRewardManager, _address)) {\\n        rewardManagerQueue[_address] = 0;\\n        if (!listContains(rewardManagers, _address)) {\\n          rewardManagers.push(_address);\\n        }\\n      }\\n      result = !isRewardManager[_address];\\n      isRewardManager[_address] = result;\\n    } else if (_managing == MANAGING.SOHM) {\\n      // 9\\n      sOHMQueue = 0;\\n      sOHM = _address;\\n      result = true;\\n    } else return false;\\n\\n    emit ChangeActivated(_managing, _address, result);\\n    return true;\\n  }\\n\\n  /**\\n        @notice checks requirements and returns altered structs\\n        @param queue_ mapping( address => uint )\\n        @param status_ mapping( address => bool )\\n        @param _address address\\n        @return bool \\n     */\\n  function requirements(\\n    mapping(address => uint256) storage queue_,\\n    mapping(address => bool) storage status_,\\n    address _address\\n  ) internal view returns (bool) {\\n    if (!status_[_address]) {\\n      require(queue_[_address] != 0, \\\"Must queue\\\");\\n      require(queue_[_address] <= block.number, \\\"Queue not expired\\\");\\n      return true;\\n    }\\n    return false;\\n  }\\n\\n  /**\\n        @notice checks array to ensure against duplicate\\n        @param _list address[]\\n        @param _token address\\n        @return bool\\n     */\\n  function listContains(address[] storage _list, address _token)\\n    internal\\n    view\\n    returns (bool)\\n  {\\n    for (uint256 i = 0; i < _list.length; i++) {\\n      if (_list[i] == _token) {\\n        return true;\\n      }\\n    }\\n    return false;\\n  }\\n}\\n\",\"keccak256\":\"0x02db9e69fb4f8c1d1c9dc5c99e26fadc4373cef48acd8949c016aae2a74e45fb\",\"license\":\"MIT\"}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          },
          "userdoc": {
            "kind": "user",
            "methods": {},
            "version": 1
          }
        },
        "SafeMath": {
          "abi": [],
          "devdoc": {
            "kind": "dev",
            "methods": {},
            "version": 1
          },
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122082c4e2a263511851f8d86f7d9292a270904124aa8bae268003cb129afb2be7e964736f6c634300080a0033",
              "opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP3 0xC4 0xE2 LOG2 PUSH4 0x511851F8 0xD8 PUSH16 0x7D9292A270904124AA8BAE268003CB12 SWAP11 0xFB 0x2B 0xE7 0xE9 PUSH5 0x736F6C6343 STOP ADDMOD EXP STOP CALLER ",
              "sourceMap": "57:1046:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;57:1046:0;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122082c4e2a263511851f8d86f7d9292a270904124aa8bae268003cb129afb2be7e964736f6c634300080a0033",
              "opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP3 0xC4 0xE2 LOG2 PUSH4 0x511851F8 0xD8 PUSH16 0x7D9292A270904124AA8BAE268003CB12 SWAP11 0xFB 0x2B 0xE7 0xE9 PUSH5 0x736F6C6343 STOP ADDMOD EXP STOP CALLER ",
              "sourceMap": "57:1046:0:-:0;;;;;;;;"
            },
            "gasEstimates": {
              "creation": {
                "codeDepositCost": "17200",
                "executionCost": "103",
                "totalCost": "17303"
              },
              "internal": {
                "add(uint256,uint256)": "infinite",
                "div(uint256,uint256)": "infinite",
                "div(uint256,uint256,string memory)": "infinite",
                "mul(uint256,uint256)": "infinite",
                "sub(uint256,uint256)": "infinite",
                "sub(uint256,uint256,string memory)": "infinite"
              }
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/mocks/MockTreasury.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/mocks/MockTreasury.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.10;\\n\\nlibrary SafeMath {\\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n    uint256 c = a + b;\\n    require(c >= a, \\\"SafeMath: addition overflow\\\");\\n\\n    return c;\\n  }\\n\\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n    return sub(a, b, \\\"SafeMath: subtraction overflow\\\");\\n  }\\n\\n  function sub(\\n    uint256 a,\\n    uint256 b,\\n    string memory errorMessage\\n  ) internal pure returns (uint256) {\\n    require(b <= a, errorMessage);\\n    uint256 c = a - b;\\n\\n    return c;\\n  }\\n\\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n    if (a == 0) {\\n      return 0;\\n    }\\n\\n    uint256 c = a * b;\\n    require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\n\\n    return c;\\n  }\\n\\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n    return div(a, b, \\\"SafeMath: division by zero\\\");\\n  }\\n\\n  function div(\\n    uint256 a,\\n    uint256 b,\\n    string memory errorMessage\\n  ) internal pure returns (uint256) {\\n    require(b > 0, errorMessage);\\n    uint256 c = a / b;\\n    return c;\\n  }\\n}\\n\\nlibrary Address {\\n  function isContract(address account) internal view returns (bool) {\\n    // This method relies in extcodesize, which returns 0 for contracts in\\n    // construction, since the code is only stored at the end of the\\n    // constructor execution.\\n\\n    uint256 size;\\n    // solhint-disable-next-line no-inline-assembly\\n    assembly {\\n      size := extcodesize(account)\\n    }\\n    return size > 0;\\n  }\\n\\n  function functionCall(\\n    address target,\\n    bytes memory data,\\n    string memory errorMessage\\n  ) internal returns (bytes memory) {\\n    return _functionCallWithValue(target, data, 0, errorMessage);\\n  }\\n\\n  function _functionCallWithValue(\\n    address target,\\n    bytes memory data,\\n    uint256 weiValue,\\n    string memory errorMessage\\n  ) private returns (bytes memory) {\\n    require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n    // solhint-disable-next-line avoid-low-level-calls\\n    (bool success, bytes memory returndata) = target.call{value: weiValue}(\\n      data\\n    );\\n    if (success) {\\n      return returndata;\\n    } else {\\n      if (returndata.length > 0) {\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n          let returndata_size := mload(returndata)\\n          revert(add(32, returndata), returndata_size)\\n        }\\n      } else {\\n        revert(errorMessage);\\n      }\\n    }\\n  }\\n\\n  function _verifyCallResult(\\n    bool success,\\n    bytes memory returndata,\\n    string memory errorMessage\\n  ) private pure returns (bytes memory) {\\n    if (success) {\\n      return returndata;\\n    } else {\\n      if (returndata.length > 0) {\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n          let returndata_size := mload(returndata)\\n          revert(add(32, returndata), returndata_size)\\n        }\\n      } else {\\n        revert(errorMessage);\\n      }\\n    }\\n  }\\n}\\n\\ninterface IOwnable {\\n  function manager() external view returns (address);\\n\\n  function renounceManagement() external;\\n\\n  function pushManagement(address newOwner_) external;\\n\\n  function pullManagement() external;\\n}\\n\\ncontract Ownable is IOwnable {\\n  address internal _owner;\\n  address internal _newOwner;\\n\\n  event OwnershipPushed(\\n    address indexed previousOwner,\\n    address indexed newOwner\\n  );\\n  event OwnershipPulled(\\n    address indexed previousOwner,\\n    address indexed newOwner\\n  );\\n\\n  constructor() {\\n    _owner = msg.sender;\\n    emit OwnershipPushed(address(0), _owner);\\n  }\\n\\n  function manager() public view override returns (address) {\\n    return _owner;\\n  }\\n\\n  modifier onlyManager() {\\n    require(_owner == msg.sender, \\\"Ownable: caller is not the owner\\\");\\n    _;\\n  }\\n\\n  function renounceManagement() public virtual override onlyManager {\\n    emit OwnershipPushed(_owner, address(0));\\n    _owner = address(0);\\n  }\\n\\n  function pushManagement(address newOwner_)\\n    public\\n    virtual\\n    override\\n    onlyManager\\n  {\\n    require(newOwner_ != address(0), \\\"Ownable: new owner is the zero address\\\");\\n    emit OwnershipPushed(_owner, newOwner_);\\n    _newOwner = newOwner_;\\n  }\\n\\n  function pullManagement() public virtual override {\\n    require(msg.sender == _newOwner, \\\"Ownable: must be new owner to pull\\\");\\n    emit OwnershipPulled(_owner, _newOwner);\\n    _owner = _newOwner;\\n  }\\n}\\n\\ninterface IERC20 {\\n  function decimals() external view returns (uint8);\\n\\n  function balanceOf(address account) external view returns (uint256);\\n\\n  function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n  function approve(address spender, uint256 amount) external returns (bool);\\n\\n  function totalSupply() external view returns (uint256);\\n\\n  function transferFrom(\\n    address sender,\\n    address recipient,\\n    uint256 amount\\n  ) external returns (bool);\\n\\n  event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n  event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\\nlibrary SafeERC20 {\\n  using SafeMath for uint256;\\n  using Address for address;\\n\\n  function safeTransfer(\\n    IERC20 token,\\n    address to,\\n    uint256 value\\n  ) internal {\\n    _callOptionalReturn(\\n      token,\\n      abi.encodeWithSelector(token.transfer.selector, to, value)\\n    );\\n  }\\n\\n  function safeTransferFrom(\\n    IERC20 token,\\n    address from,\\n    address to,\\n    uint256 value\\n  ) internal {\\n    _callOptionalReturn(\\n      token,\\n      abi.encodeWithSelector(token.transferFrom.selector, from, to, value)\\n    );\\n  }\\n\\n  function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n    bytes memory returndata = address(token).functionCall(\\n      data,\\n      \\\"SafeERC20: low-level call failed\\\"\\n    );\\n    if (returndata.length > 0) {\\n      // Return data is optional\\n      // solhint-disable-next-line max-line-length\\n      require(\\n        abi.decode(returndata, (bool)),\\n        \\\"SafeERC20: ERC20 operation did not succeed\\\"\\n      );\\n    }\\n  }\\n}\\n\\ninterface IERC20Mintable {\\n  function mint(uint256 amount_) external;\\n\\n  function mint(address account_, uint256 ammount_) external;\\n}\\n\\ninterface IOHMERC20 {\\n  function burnFrom(address account_, uint256 amount_) external;\\n}\\n\\ninterface IBondCalculator {\\n  function valuation(address pair_, uint256 amount_)\\n    external\\n    view\\n    returns (uint256 _value);\\n}\\n\\ncontract MockOlympusTreasury is Ownable {\\n  using SafeMath for uint256;\\n  using SafeERC20 for IERC20;\\n\\n  event Deposit(address indexed token, uint256 amount, uint256 value);\\n  event Withdrawal(address indexed token, uint256 amount, uint256 value);\\n  event CreateDebt(\\n    address indexed debtor,\\n    address indexed token,\\n    uint256 amount,\\n    uint256 value\\n  );\\n  event RepayDebt(\\n    address indexed debtor,\\n    address indexed token,\\n    uint256 amount,\\n    uint256 value\\n  );\\n  event ReservesManaged(address indexed token, uint256 amount);\\n  event ReservesUpdated(uint256 indexed totalReserves);\\n  event ReservesAudited(uint256 indexed totalReserves);\\n  event RewardsMinted(\\n    address indexed caller,\\n    address indexed recipient,\\n    uint256 amount\\n  );\\n  event ChangeQueued(MANAGING indexed managing, address queued);\\n  event ChangeActivated(\\n    MANAGING indexed managing,\\n    address activated,\\n    bool result\\n  );\\n\\n  enum MANAGING {\\n    RESERVEDEPOSITOR,\\n    RESERVESPENDER,\\n    RESERVETOKEN,\\n    RESERVEMANAGER,\\n    LIQUIDITYDEPOSITOR,\\n    LIQUIDITYTOKEN,\\n    LIQUIDITYMANAGER,\\n    DEBTOR,\\n    REWARDMANAGER,\\n    SOHM\\n  }\\n\\n  address public immutable OHM;\\n  uint256 public immutable blocksNeededForQueue;\\n\\n  address[] public reserveTokens; // Push only, beware false-positives.\\n  mapping(address => bool) public isReserveToken;\\n  mapping(address => uint256) public reserveTokenQueue; // Delays changes to mapping.\\n\\n  address[] public reserveDepositors; // Push only, beware false-positives. Only for viewing.\\n  mapping(address => bool) public isReserveDepositor;\\n  mapping(address => uint256) public reserveDepositorQueue; // Delays changes to mapping.\\n\\n  address[] public reserveSpenders; // Push only, beware false-positives. Only for viewing.\\n  mapping(address => bool) public isReserveSpender;\\n  mapping(address => uint256) public reserveSpenderQueue; // Delays changes to mapping.\\n\\n  address[] public liquidityTokens; // Push only, beware false-positives.\\n  mapping(address => bool) public isLiquidityToken;\\n  mapping(address => uint256) public LiquidityTokenQueue; // Delays changes to mapping.\\n\\n  address[] public liquidityDepositors; // Push only, beware false-positives. Only for viewing.\\n  mapping(address => bool) public isLiquidityDepositor;\\n  mapping(address => uint256) public LiquidityDepositorQueue; // Delays changes to mapping.\\n\\n  mapping(address => address) public bondCalculator; // bond calculator for liquidity token\\n\\n  address[] public reserveManagers; // Push only, beware false-positives. Only for viewing.\\n  mapping(address => bool) public isReserveManager;\\n  mapping(address => uint256) public ReserveManagerQueue; // Delays changes to mapping.\\n\\n  address[] public liquidityManagers; // Push only, beware false-positives. Only for viewing.\\n  mapping(address => bool) public isLiquidityManager;\\n  mapping(address => uint256) public LiquidityManagerQueue; // Delays changes to mapping.\\n\\n  address[] public debtors; // Push only, beware false-positives. Only for viewing.\\n  mapping(address => bool) public isDebtor;\\n  mapping(address => uint256) public debtorQueue; // Delays changes to mapping.\\n  mapping(address => uint256) public debtorBalance;\\n\\n  address[] public rewardManagers; // Push only, beware false-positives. Only for viewing.\\n  mapping(address => bool) public isRewardManager;\\n  mapping(address => uint256) public rewardManagerQueue; // Delays changes to mapping.\\n\\n  address public sOHM;\\n  uint256 public sOHMQueue; // Delays change to sOHM address\\n\\n  uint256 public totalReserves; // Risk-free value of all assets\\n  uint256 public totalDebt;\\n\\n  constructor(\\n    address _OHM,\\n    address _DAI,\\n    address _Frax,\\n    //address _OHMDAI,\\n    uint256 _blocksNeededForQueue\\n  ) {\\n    require(_OHM != address(0));\\n    OHM = _OHM;\\n\\n    isReserveToken[_DAI] = true;\\n    reserveTokens.push(_DAI);\\n\\n    isReserveToken[_Frax] = true;\\n    reserveTokens.push(_Frax);\\n\\n    // isLiquidityToken[ _OHMDAI ] = true;\\n    // liquidityTokens.push( _OHMDAI );\\n\\n    blocksNeededForQueue = _blocksNeededForQueue;\\n  }\\n\\n  /**\\n        @notice allow approved address to deposit an asset for OHM\\n        @param _amount uint\\n        @param _token address\\n        @param _profit uint\\n        @return send_ uint\\n     */\\n  function deposit(\\n    uint256 _amount,\\n    address _token,\\n    uint256 _profit\\n  ) external returns (uint256 send_) {\\n    require(isReserveToken[_token] || isLiquidityToken[_token], \\\"Not accepted\\\");\\n    IERC20(_token).safeTransferFrom(msg.sender, address(this), _amount);\\n\\n    if (isReserveToken[_token]) {\\n      require(isReserveDepositor[msg.sender], \\\"Not approved\\\");\\n    } else {\\n      require(isLiquidityDepositor[msg.sender], \\\"Not approved\\\");\\n    }\\n\\n    uint256 value = valueOfToken(_token, _amount);\\n    (_token, _amount);\\n    // mint OHM needed and store amount of rewards for distribution\\n    send_ = value.sub(_profit);\\n    IERC20Mintable(OHM).mint(msg.sender, send_);\\n\\n    totalReserves = totalReserves.add(value);\\n    emit ReservesUpdated(totalReserves);\\n\\n    emit Deposit(_token, _amount, value);\\n  }\\n\\n  /**\\n        @notice allow approved address to burn OHM for reserves\\n        @param _amount uint\\n        @param _token address\\n     */\\n  function withdraw(uint256 _amount, address _token) external {\\n    require(isReserveToken[_token], \\\"Not accepted\\\"); // Only reserves can be used for redemptions\\n    require(isReserveSpender[msg.sender] == true, \\\"Not approved\\\");\\n\\n    uint256 value = valueOfToken(_token, _amount);\\n    IOHMERC20(OHM).burnFrom(msg.sender, value);\\n\\n    totalReserves = totalReserves.sub(value);\\n    emit ReservesUpdated(totalReserves);\\n\\n    IERC20(_token).safeTransfer(msg.sender, _amount);\\n\\n    emit Withdrawal(_token, _amount, value);\\n  }\\n\\n  /**\\n        @notice allow approved address to borrow reserves\\n        @param _amount uint\\n        @param _token address\\n     */\\n  function incurDebt(uint256 _amount, address _token) external {\\n    require(isDebtor[msg.sender], \\\"Not approved\\\");\\n    require(isReserveToken[_token], \\\"Not accepted\\\");\\n\\n    uint256 value = valueOfToken(_token, _amount);\\n\\n    uint256 maximumDebt = IERC20(sOHM).balanceOf(msg.sender); // Can only borrow against sOHM held\\n    uint256 availableDebt = maximumDebt.sub(debtorBalance[msg.sender]);\\n    require(value <= availableDebt, \\\"Exceeds debt limit\\\");\\n\\n    debtorBalance[msg.sender] = debtorBalance[msg.sender].add(value);\\n    totalDebt = totalDebt.add(value);\\n\\n    totalReserves = totalReserves.sub(value);\\n    emit ReservesUpdated(totalReserves);\\n\\n    IERC20(_token).transfer(msg.sender, _amount);\\n\\n    emit CreateDebt(msg.sender, _token, _amount, value);\\n  }\\n\\n  /**\\n        @notice allow approved address to repay borrowed reserves with reserves\\n        @param _amount uint\\n        @param _token address\\n     */\\n  function repayDebtWithReserve(uint256 _amount, address _token) external {\\n    require(isDebtor[msg.sender], \\\"Not approved\\\");\\n    require(isReserveToken[_token], \\\"Not accepted\\\");\\n\\n    IERC20(_token).safeTransferFrom(msg.sender, address(this), _amount);\\n\\n    uint256 value = valueOfToken(_token, _amount);\\n    debtorBalance[msg.sender] = debtorBalance[msg.sender].sub(value);\\n    totalDebt = totalDebt.sub(value);\\n\\n    totalReserves = totalReserves.add(value);\\n    emit ReservesUpdated(totalReserves);\\n\\n    emit RepayDebt(msg.sender, _token, _amount, value);\\n  }\\n\\n  /**\\n        @notice allow approved address to repay borrowed reserves with OHM\\n        @param _amount uint\\n     */\\n  function repayDebtWithOHM(uint256 _amount) external {\\n    require(isDebtor[msg.sender], \\\"Not approved\\\");\\n\\n    IOHMERC20(OHM).burnFrom(msg.sender, _amount);\\n\\n    debtorBalance[msg.sender] = debtorBalance[msg.sender].sub(_amount);\\n    totalDebt = totalDebt.sub(_amount);\\n\\n    emit RepayDebt(msg.sender, OHM, _amount, _amount);\\n  }\\n\\n  /**\\n        @notice allow approved address to withdraw assets\\n        @param _token address\\n        @param _amount uint\\n     */\\n  function manage(address _token, uint256 _amount) external {\\n    if (isLiquidityToken[_token]) {\\n      require(isLiquidityManager[msg.sender], \\\"Not approved\\\");\\n    } else {\\n      require(isReserveManager[msg.sender], \\\"Not approved\\\");\\n    }\\n\\n    uint256 value = valueOfToken(_token, _amount);\\n    (_token, _amount);\\n    require(value <= excessReserves(), \\\"Insufficient reserves\\\");\\n\\n    totalReserves = totalReserves.sub(value);\\n    emit ReservesUpdated(totalReserves);\\n\\n    IERC20(_token).safeTransfer(msg.sender, _amount);\\n\\n    emit ReservesManaged(_token, _amount);\\n  }\\n\\n  /**\\n        @notice send epoch reward to staking contract\\n     */\\n  function mintRewards(address _recipient, uint256 _amount) external {\\n    require(isRewardManager[msg.sender], \\\"Not approved\\\");\\n    require(_amount <= excessReserves(), \\\"Insufficient reserves\\\");\\n\\n    IERC20Mintable(OHM).mint(_recipient, _amount);\\n\\n    emit RewardsMinted(msg.sender, _recipient, _amount);\\n  }\\n\\n  /**\\n        @notice returns excess reserves not backing tokens\\n        @return uint\\n     */\\n  function excessReserves() public view returns (uint256) {\\n    return totalReserves.sub(IERC20(OHM).totalSupply().sub(totalDebt));\\n  }\\n\\n  /**\\n        @notice takes inventory of all tracked assets\\n        @notice always consolidate to recognized reserves before audit\\n     */\\n  function auditReserves() external onlyManager {\\n    uint256 reserves;\\n    for (uint256 i = 0; i < reserveTokens.length; i++) {\\n      reserves = reserves.add(\\n        valueOfToken(\\n          reserveTokens[i],\\n          IERC20(reserveTokens[i]).balanceOf(address(this))\\n        )\\n      );\\n    }\\n    for (uint256 i = 0; i < liquidityTokens.length; i++) {\\n      reserves = reserves.add(\\n        valueOfToken(\\n          liquidityTokens[i],\\n          IERC20(liquidityTokens[i]).balanceOf(address(this))\\n        )\\n      );\\n    }\\n    totalReserves = reserves;\\n    emit ReservesUpdated(reserves);\\n    emit ReservesAudited(reserves);\\n  }\\n\\n  /**\\n        @notice returns OHM valuation of asset\\n        @param _token address\\n        @param _amount uint\\n        @return value_ uint\\n     */\\n  function valueOfToken(address _token, uint256 _amount)\\n    public\\n    view\\n    returns (uint256 value_)\\n  {\\n    if (isReserveToken[_token]) {\\n      // convert amount to match OHM decimals\\n      value_ = _amount.mul(10**IERC20(OHM).decimals()).div(\\n        10**IERC20(_token).decimals()\\n      );\\n    } else if (isLiquidityToken[_token]) {\\n      value_ = IBondCalculator(bondCalculator[_token]).valuation(\\n        _token,\\n        _amount\\n      );\\n    }\\n  }\\n\\n  /**\\n        @notice queue address to change boolean in mapping\\n        @param _managing MANAGING\\n        @param _address address\\n        @return bool\\n     */\\n  function queue(MANAGING _managing, address _address)\\n    external\\n    onlyManager\\n    returns (bool)\\n  {\\n    require(_address != address(0));\\n    if (_managing == MANAGING.RESERVEDEPOSITOR) {\\n      // 0\\n      reserveDepositorQueue[_address] = block.number.add(blocksNeededForQueue);\\n    } else if (_managing == MANAGING.RESERVESPENDER) {\\n      // 1\\n      reserveSpenderQueue[_address] = block.number.add(blocksNeededForQueue);\\n    } else if (_managing == MANAGING.RESERVETOKEN) {\\n      // 2\\n      reserveTokenQueue[_address] = block.number.add(blocksNeededForQueue);\\n    } else if (_managing == MANAGING.RESERVEMANAGER) {\\n      // 3\\n      ReserveManagerQueue[_address] = block.number.add(\\n        blocksNeededForQueue.mul(2)\\n      );\\n    } else if (_managing == MANAGING.LIQUIDITYDEPOSITOR) {\\n      // 4\\n      LiquidityDepositorQueue[_address] = block.number.add(\\n        blocksNeededForQueue\\n      );\\n    } else if (_managing == MANAGING.LIQUIDITYTOKEN) {\\n      // 5\\n      LiquidityTokenQueue[_address] = block.number.add(blocksNeededForQueue);\\n    } else if (_managing == MANAGING.LIQUIDITYMANAGER) {\\n      // 6\\n      LiquidityManagerQueue[_address] = block.number.add(\\n        blocksNeededForQueue.mul(2)\\n      );\\n    } else if (_managing == MANAGING.DEBTOR) {\\n      // 7\\n      debtorQueue[_address] = block.number.add(blocksNeededForQueue);\\n    } else if (_managing == MANAGING.REWARDMANAGER) {\\n      // 8\\n      rewardManagerQueue[_address] = block.number.add(blocksNeededForQueue);\\n    } else if (_managing == MANAGING.SOHM) {\\n      // 9\\n      sOHMQueue = block.number.add(blocksNeededForQueue);\\n    } else return false;\\n\\n    emit ChangeQueued(_managing, _address);\\n    return true;\\n  }\\n\\n  /**\\n        @notice verify queue then set boolean in mapping\\n        @param _managing MANAGING\\n        @param _address address\\n        @param _calculator address\\n        @return bool\\n     */\\n  function toggle(\\n    MANAGING _managing,\\n    address _address,\\n    address _calculator\\n  ) external onlyManager returns (bool) {\\n    require(_address != address(0));\\n    bool result;\\n    if (_managing == MANAGING.RESERVEDEPOSITOR) {\\n      // 0\\n      if (requirements(reserveDepositorQueue, isReserveDepositor, _address)) {\\n        reserveDepositorQueue[_address] = 0;\\n        if (!listContains(reserveDepositors, _address)) {\\n          reserveDepositors.push(_address);\\n        }\\n      }\\n      result = !isReserveDepositor[_address];\\n      isReserveDepositor[_address] = result;\\n    } else if (_managing == MANAGING.RESERVESPENDER) {\\n      // 1\\n      if (requirements(reserveSpenderQueue, isReserveSpender, _address)) {\\n        reserveSpenderQueue[_address] = 0;\\n        if (!listContains(reserveSpenders, _address)) {\\n          reserveSpenders.push(_address);\\n        }\\n      }\\n      result = !isReserveSpender[_address];\\n      isReserveSpender[_address] = result;\\n    } else if (_managing == MANAGING.RESERVETOKEN) {\\n      // 2\\n      if (requirements(reserveTokenQueue, isReserveToken, _address)) {\\n        reserveTokenQueue[_address] = 0;\\n        if (!listContains(reserveTokens, _address)) {\\n          reserveTokens.push(_address);\\n        }\\n      }\\n      result = !isReserveToken[_address];\\n      isReserveToken[_address] = result;\\n    } else if (_managing == MANAGING.RESERVEMANAGER) {\\n      // 3\\n      if (requirements(ReserveManagerQueue, isReserveManager, _address)) {\\n        reserveManagers.push(_address);\\n        ReserveManagerQueue[_address] = 0;\\n        if (!listContains(reserveManagers, _address)) {\\n          reserveManagers.push(_address);\\n        }\\n      }\\n      result = !isReserveManager[_address];\\n      isReserveManager[_address] = result;\\n    } else if (_managing == MANAGING.LIQUIDITYDEPOSITOR) {\\n      // 4\\n      if (\\n        requirements(LiquidityDepositorQueue, isLiquidityDepositor, _address)\\n      ) {\\n        liquidityDepositors.push(_address);\\n        LiquidityDepositorQueue[_address] = 0;\\n        if (!listContains(liquidityDepositors, _address)) {\\n          liquidityDepositors.push(_address);\\n        }\\n      }\\n      result = !isLiquidityDepositor[_address];\\n      isLiquidityDepositor[_address] = result;\\n    } else if (_managing == MANAGING.LIQUIDITYTOKEN) {\\n      // 5\\n      if (requirements(LiquidityTokenQueue, isLiquidityToken, _address)) {\\n        LiquidityTokenQueue[_address] = 0;\\n        if (!listContains(liquidityTokens, _address)) {\\n          liquidityTokens.push(_address);\\n        }\\n      }\\n      result = !isLiquidityToken[_address];\\n      isLiquidityToken[_address] = result;\\n      bondCalculator[_address] = _calculator;\\n    } else if (_managing == MANAGING.LIQUIDITYMANAGER) {\\n      // 6\\n      if (requirements(LiquidityManagerQueue, isLiquidityManager, _address)) {\\n        LiquidityManagerQueue[_address] = 0;\\n        if (!listContains(liquidityManagers, _address)) {\\n          liquidityManagers.push(_address);\\n        }\\n      }\\n      result = !isLiquidityManager[_address];\\n      isLiquidityManager[_address] = result;\\n    } else if (_managing == MANAGING.DEBTOR) {\\n      // 7\\n      if (requirements(debtorQueue, isDebtor, _address)) {\\n        debtorQueue[_address] = 0;\\n        if (!listContains(debtors, _address)) {\\n          debtors.push(_address);\\n        }\\n      }\\n      result = !isDebtor[_address];\\n      isDebtor[_address] = result;\\n    } else if (_managing == MANAGING.REWARDMANAGER) {\\n      // 8\\n      if (requirements(rewardManagerQueue, isRewardManager, _address)) {\\n        rewardManagerQueue[_address] = 0;\\n        if (!listContains(rewardManagers, _address)) {\\n          rewardManagers.push(_address);\\n        }\\n      }\\n      result = !isRewardManager[_address];\\n      isRewardManager[_address] = result;\\n    } else if (_managing == MANAGING.SOHM) {\\n      // 9\\n      sOHMQueue = 0;\\n      sOHM = _address;\\n      result = true;\\n    } else return false;\\n\\n    emit ChangeActivated(_managing, _address, result);\\n    return true;\\n  }\\n\\n  /**\\n        @notice checks requirements and returns altered structs\\n        @param queue_ mapping( address => uint )\\n        @param status_ mapping( address => bool )\\n        @param _address address\\n        @return bool \\n     */\\n  function requirements(\\n    mapping(address => uint256) storage queue_,\\n    mapping(address => bool) storage status_,\\n    address _address\\n  ) internal view returns (bool) {\\n    if (!status_[_address]) {\\n      require(queue_[_address] != 0, \\\"Must queue\\\");\\n      require(queue_[_address] <= block.number, \\\"Queue not expired\\\");\\n      return true;\\n    }\\n    return false;\\n  }\\n\\n  /**\\n        @notice checks array to ensure against duplicate\\n        @param _list address[]\\n        @param _token address\\n        @return bool\\n     */\\n  function listContains(address[] storage _list, address _token)\\n    internal\\n    view\\n    returns (bool)\\n  {\\n    for (uint256 i = 0; i < _list.length; i++) {\\n      if (_list[i] == _token) {\\n        return true;\\n      }\\n    }\\n    return false;\\n  }\\n}\\n\",\"keccak256\":\"0x02db9e69fb4f8c1d1c9dc5c99e26fadc4373cef48acd8949c016aae2a74e45fb\",\"license\":\"MIT\"}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          },
          "userdoc": {
            "kind": "user",
            "methods": {},
            "version": 1
          }
        }
      }
    },
    "sources": {
      "contracts/mocks/MockTreasury.sol": {
        "ast": {
          "absolutePath": "contracts/mocks/MockTreasury.sol",
          "exportedSymbols": {
            "Address": [
              263
            ],
            "IBondCalculator": [
              596
            ],
            "IERC20": [
              472
            ],
            "IERC20Mintable": [
              578
            ],
            "IOHMERC20": [
              586
            ],
            "IOwnable": [
              280
            ],
            "MockOlympusTreasury": [
              2313
            ],
            "Ownable": [
              409
            ],
            "SafeERC20": [
              565
            ],
            "SafeMath": [
              147
            ]
          },
          "id": 2314,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": [
                "solidity",
                "0.8",
                ".10"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:23:0"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "SafeMath",
              "contractDependencies": [],
              "contractKind": "library",
              "fullyImplemented": true,
              "id": 147,
              "linearizedBaseContracts": [
                147
              ],
              "name": "SafeMath",
              "nameLocation": "65:8:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 25,
                    "nodeType": "Block",
                    "src": "145:95:0",
                    "statements": [
                      {
                        "assignments": [
                          11
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 11,
                            "mutability": "mutable",
                            "name": "c",
                            "nameLocation": "159:1:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 25,
                            "src": "151:9:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 10,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "151:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 15,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 14,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 12,
                            "name": "a",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3,
                            "src": "163:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 13,
                            "name": "b",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5,
                            "src": "167:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "163:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "151:17:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 19,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 17,
                                "name": "c",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11,
                                "src": "182:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 18,
                                "name": "a",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3,
                                "src": "187:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "182:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
                              "id": 20,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "190:29:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
                                "typeString": "literal_string \"SafeMath: addition overflow\""
                              },
                              "value": "SafeMath: addition overflow"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
                                "typeString": "literal_string \"SafeMath: addition overflow\""
                              }
                            ],
                            "id": 16,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "174:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 21,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "174:46:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 22,
                        "nodeType": "ExpressionStatement",
                        "src": "174:46:0"
                      },
                      {
                        "expression": {
                          "id": 23,
                          "name": "c",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11,
                          "src": "234:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 9,
                        "id": 24,
                        "nodeType": "Return",
                        "src": "227:8:0"
                      }
                    ]
                  },
                  "id": 26,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "add",
                  "nameLocation": "87:3:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 6,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3,
                        "mutability": "mutable",
                        "name": "a",
                        "nameLocation": "99:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 26,
                        "src": "91:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "91:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 5,
                        "mutability": "mutable",
                        "name": "b",
                        "nameLocation": "110:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 26,
                        "src": "102:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "102:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "90:22:0"
                  },
                  "returnParameters": {
                    "id": 9,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 8,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 26,
                        "src": "136:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 7,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "136:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "135:9:0"
                  },
                  "scope": 147,
                  "src": "78:162:0",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 41,
                    "nodeType": "Block",
                    "src": "311:61:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 36,
                              "name": "a",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 28,
                              "src": "328:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 37,
                              "name": "b",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30,
                              "src": "331:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
                              "id": 38,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "334:32:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
                                "typeString": "literal_string \"SafeMath: subtraction overflow\""
                              },
                              "value": "SafeMath: subtraction overflow"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
                                "typeString": "literal_string \"SafeMath: subtraction overflow\""
                              }
                            ],
                            "id": 35,
                            "name": "sub",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              42,
                              69
                            ],
                            "referencedDeclaration": 69,
                            "src": "324:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
                              "typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
                            }
                          },
                          "id": 39,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "324:43:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 34,
                        "id": 40,
                        "nodeType": "Return",
                        "src": "317:50:0"
                      }
                    ]
                  },
                  "id": 42,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "sub",
                  "nameLocation": "253:3:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 31,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 28,
                        "mutability": "mutable",
                        "name": "a",
                        "nameLocation": "265:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 42,
                        "src": "257:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 27,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "257:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 30,
                        "mutability": "mutable",
                        "name": "b",
                        "nameLocation": "276:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 42,
                        "src": "268:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 29,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "268:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "256:22:0"
                  },
                  "returnParameters": {
                    "id": 34,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 33,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 42,
                        "src": "302:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 32,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "302:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "301:9:0"
                  },
                  "scope": 147,
                  "src": "244:128:0",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 68,
                    "nodeType": "Block",
                    "src": "487:78:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 56,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 54,
                                "name": "b",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 46,
                                "src": "501:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "id": 55,
                                "name": "a",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 44,
                                "src": "506:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "501:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "id": 57,
                              "name": "errorMessage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 48,
                              "src": "509:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 53,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "493:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 58,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "493:29:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 59,
                        "nodeType": "ExpressionStatement",
                        "src": "493:29:0"
                      },
                      {
                        "assignments": [
                          61
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 61,
                            "mutability": "mutable",
                            "name": "c",
                            "nameLocation": "536:1:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 68,
                            "src": "528:9:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 60,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "528:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 65,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 64,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 62,
                            "name": "a",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44,
                            "src": "540:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 63,
                            "name": "b",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46,
                            "src": "544:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "540:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "528:17:0"
                      },
                      {
                        "expression": {
                          "id": 66,
                          "name": "c",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 61,
                          "src": "559:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 52,
                        "id": 67,
                        "nodeType": "Return",
                        "src": "552:8:0"
                      }
                    ]
                  },
                  "id": 69,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "sub",
                  "nameLocation": "385:3:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 49,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 44,
                        "mutability": "mutable",
                        "name": "a",
                        "nameLocation": "402:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 69,
                        "src": "394:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 43,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "394:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 46,
                        "mutability": "mutable",
                        "name": "b",
                        "nameLocation": "417:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 69,
                        "src": "409:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 45,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "409:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 48,
                        "mutability": "mutable",
                        "name": "errorMessage",
                        "nameLocation": "438:12:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 69,
                        "src": "424:26:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 47,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "424:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "388:66:0"
                  },
                  "returnParameters": {
                    "id": 52,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 51,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 69,
                        "src": "478:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 50,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "478:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "477:9:0"
                  },
                  "scope": 147,
                  "src": "376:189:0",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 102,
                    "nodeType": "Block",
                    "src": "636:146:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 80,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 78,
                            "name": "a",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 71,
                            "src": "646:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 79,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "651:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "646:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 84,
                        "nodeType": "IfStatement",
                        "src": "642:35:0",
                        "trueBody": {
                          "id": 83,
                          "nodeType": "Block",
                          "src": "654:23:0",
                          "statements": [
                            {
                              "expression": {
                                "hexValue": "30",
                                "id": 81,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "669:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "functionReturnParameters": 77,
                              "id": 82,
                              "nodeType": "Return",
                              "src": "662:8:0"
                            }
                          ]
                        }
                      },
                      {
                        "assignments": [
                          86
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 86,
                            "mutability": "mutable",
                            "name": "c",
                            "nameLocation": "691:1:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 102,
                            "src": "683:9:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 85,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "683:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 90,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 89,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 87,
                            "name": "a",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 71,
                            "src": "695:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 88,
                            "name": "b",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 73,
                            "src": "699:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "695:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "683:17:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 96,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 94,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 92,
                                  "name": "c",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 86,
                                  "src": "714:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "/",
                                "rightExpression": {
                                  "id": 93,
                                  "name": "a",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 71,
                                  "src": "718:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "714:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 95,
                                "name": "b",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 73,
                                "src": "723:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "714:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
                              "id": 97,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "726:35:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
                                "typeString": "literal_string \"SafeMath: multiplication overflow\""
                              },
                              "value": "SafeMath: multiplication overflow"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
                                "typeString": "literal_string \"SafeMath: multiplication overflow\""
                              }
                            ],
                            "id": 91,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "706:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 98,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "706:56:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 99,
                        "nodeType": "ExpressionStatement",
                        "src": "706:56:0"
                      },
                      {
                        "expression": {
                          "id": 100,
                          "name": "c",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 86,
                          "src": "776:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 77,
                        "id": 101,
                        "nodeType": "Return",
                        "src": "769:8:0"
                      }
                    ]
                  },
                  "id": 103,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "mul",
                  "nameLocation": "578:3:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 74,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 71,
                        "mutability": "mutable",
                        "name": "a",
                        "nameLocation": "590:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 103,
                        "src": "582:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 70,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "582:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 73,
                        "mutability": "mutable",
                        "name": "b",
                        "nameLocation": "601:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 103,
                        "src": "593:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 72,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "593:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "581:22:0"
                  },
                  "returnParameters": {
                    "id": 77,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 76,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 103,
                        "src": "627:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 75,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "627:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "626:9:0"
                  },
                  "scope": 147,
                  "src": "569:213:0",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 118,
                    "nodeType": "Block",
                    "src": "853:57:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 113,
                              "name": "a",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 105,
                              "src": "870:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 114,
                              "name": "b",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 107,
                              "src": "873:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
                              "id": 115,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "876:28:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
                                "typeString": "literal_string \"SafeMath: division by zero\""
                              },
                              "value": "SafeMath: division by zero"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
                                "typeString": "literal_string \"SafeMath: division by zero\""
                              }
                            ],
                            "id": 112,
                            "name": "div",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              119,
                              146
                            ],
                            "referencedDeclaration": 146,
                            "src": "866:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
                              "typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
                            }
                          },
                          "id": 116,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "866:39:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 111,
                        "id": 117,
                        "nodeType": "Return",
                        "src": "859:46:0"
                      }
                    ]
                  },
                  "id": 119,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "div",
                  "nameLocation": "795:3:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 108,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 105,
                        "mutability": "mutable",
                        "name": "a",
                        "nameLocation": "807:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 119,
                        "src": "799:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 104,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "799:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 107,
                        "mutability": "mutable",
                        "name": "b",
                        "nameLocation": "818:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 119,
                        "src": "810:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 106,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "810:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "798:22:0"
                  },
                  "returnParameters": {
                    "id": 111,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 110,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 119,
                        "src": "844:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 109,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "844:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "843:9:0"
                  },
                  "scope": 147,
                  "src": "786:124:0",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 145,
                    "nodeType": "Block",
                    "src": "1025:76:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 133,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 131,
                                "name": "b",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 123,
                                "src": "1039:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 132,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1043:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "1039:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "id": 134,
                              "name": "errorMessage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 125,
                              "src": "1046:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 130,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1031:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 135,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1031:28:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 136,
                        "nodeType": "ExpressionStatement",
                        "src": "1031:28:0"
                      },
                      {
                        "assignments": [
                          138
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 138,
                            "mutability": "mutable",
                            "name": "c",
                            "nameLocation": "1073:1:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 145,
                            "src": "1065:9:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 137,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1065:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 142,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 141,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 139,
                            "name": "a",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 121,
                            "src": "1077:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "id": 140,
                            "name": "b",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 123,
                            "src": "1081:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1077:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1065:17:0"
                      },
                      {
                        "expression": {
                          "id": 143,
                          "name": "c",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 138,
                          "src": "1095:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 129,
                        "id": 144,
                        "nodeType": "Return",
                        "src": "1088:8:0"
                      }
                    ]
                  },
                  "id": 146,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "div",
                  "nameLocation": "923:3:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 126,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 121,
                        "mutability": "mutable",
                        "name": "a",
                        "nameLocation": "940:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 146,
                        "src": "932:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 120,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "932:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 123,
                        "mutability": "mutable",
                        "name": "b",
                        "nameLocation": "955:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 146,
                        "src": "947:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 122,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "947:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 125,
                        "mutability": "mutable",
                        "name": "errorMessage",
                        "nameLocation": "976:12:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 146,
                        "src": "962:26:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 124,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "962:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "926:66:0"
                  },
                  "returnParameters": {
                    "id": 129,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 128,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 146,
                        "src": "1016:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 127,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1016:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1015:9:0"
                  },
                  "scope": 147,
                  "src": "914:187:0",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 2314,
              "src": "57:1046:0",
              "usedErrors": []
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "Address",
              "contractDependencies": [],
              "contractKind": "library",
              "fullyImplemented": true,
              "id": 263,
              "linearizedBaseContracts": [
                263
              ],
              "name": "Address",
              "nameLocation": "1113:7:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 162,
                    "nodeType": "Block",
                    "src": "1191:327:0",
                    "statements": [
                      {
                        "assignments": [
                          155
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 155,
                            "mutability": "mutable",
                            "name": "size",
                            "nameLocation": "1380:4:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 162,
                            "src": "1372:12:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 154,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1372:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 156,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1372:12:0"
                      },
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "1451:42:0",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "1459:28:0",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "account",
                                    "nodeType": "YulIdentifier",
                                    "src": "1479:7:0"
                                  }
                                ],
                                "functionName": {
                                  "name": "extcodesize",
                                  "nodeType": "YulIdentifier",
                                  "src": "1467:11:0"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1467:20:0"
                              },
                              "variableNames": [
                                {
                                  "name": "size",
                                  "nodeType": "YulIdentifier",
                                  "src": "1459:4:0"
                                }
                              ]
                            }
                          ]
                        },
                        "evmVersion": "london",
                        "externalReferences": [
                          {
                            "declaration": 149,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "1479:7:0",
                            "valueSize": 1
                          },
                          {
                            "declaration": 155,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "1459:4:0",
                            "valueSize": 1
                          }
                        ],
                        "id": 157,
                        "nodeType": "InlineAssembly",
                        "src": "1442:51:0"
                      },
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 160,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 158,
                            "name": "size",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 155,
                            "src": "1505:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 159,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1512:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "1505:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 153,
                        "id": 161,
                        "nodeType": "Return",
                        "src": "1498:15:0"
                      }
                    ]
                  },
                  "id": 163,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "isContract",
                  "nameLocation": "1134:10:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 150,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 149,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "1153:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 163,
                        "src": "1145:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 148,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1145:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1144:17:0"
                  },
                  "returnParameters": {
                    "id": 153,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 152,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 163,
                        "src": "1185:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 151,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1185:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1184:6:0"
                  },
                  "scope": 263,
                  "src": "1125:393:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 181,
                    "nodeType": "Block",
                    "src": "1655:71:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 175,
                              "name": "target",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 165,
                              "src": "1691:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 176,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 167,
                              "src": "1699:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "hexValue": "30",
                              "id": 177,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1705:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            {
                              "id": 178,
                              "name": "errorMessage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 169,
                              "src": "1708:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 174,
                            "name": "_functionCallWithValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 232,
                            "src": "1668:22:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
                            }
                          },
                          "id": 179,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1668:53:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "functionReturnParameters": 173,
                        "id": 180,
                        "nodeType": "Return",
                        "src": "1661:60:0"
                      }
                    ]
                  },
                  "id": 182,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "functionCall",
                  "nameLocation": "1531:12:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 170,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 165,
                        "mutability": "mutable",
                        "name": "target",
                        "nameLocation": "1557:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 182,
                        "src": "1549:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 164,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1549:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 167,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "1582:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 182,
                        "src": "1569:17:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 166,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "1569:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 169,
                        "mutability": "mutable",
                        "name": "errorMessage",
                        "nameLocation": "1606:12:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 182,
                        "src": "1592:26:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 168,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1592:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1543:79:0"
                  },
                  "returnParameters": {
                    "id": 173,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 172,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 182,
                        "src": "1641:12:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 171,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "1641:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1640:14:0"
                  },
                  "scope": 263,
                  "src": "1522:204:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 231,
                    "nodeType": "Block",
                    "src": "1894:563:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 197,
                                  "name": "target",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 184,
                                  "src": "1919:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 196,
                                "name": "isContract",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 163,
                                "src": "1908:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                                  "typeString": "function (address) view returns (bool)"
                                }
                              },
                              "id": 198,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1908:18:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
                              "id": 199,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1928:31:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
                                "typeString": "literal_string \"Address: call to non-contract\""
                              },
                              "value": "Address: call to non-contract"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
                                "typeString": "literal_string \"Address: call to non-contract\""
                              }
                            ],
                            "id": 195,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1900:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 200,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1900:60:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 201,
                        "nodeType": "ExpressionStatement",
                        "src": "1900:60:0"
                      },
                      {
                        "assignments": [
                          203,
                          205
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 203,
                            "mutability": "mutable",
                            "name": "success",
                            "nameLocation": "2028:7:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 231,
                            "src": "2023:12:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 202,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "2023:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 205,
                            "mutability": "mutable",
                            "name": "returndata",
                            "nameLocation": "2050:10:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 231,
                            "src": "2037:23:0",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 204,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "2037:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 212,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 210,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 186,
                              "src": "2100:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "expression": {
                                "id": 206,
                                "name": "target",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 184,
                                "src": "2064:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 207,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "call",
                              "nodeType": "MemberAccess",
                              "src": "2064:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                              }
                            },
                            "id": 209,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "id": 208,
                                "name": "weiValue",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 188,
                                "src": "2083:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "src": "2064:28:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                              "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                            }
                          },
                          "id": 211,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2064:46:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2022:88:0"
                      },
                      {
                        "condition": {
                          "id": 213,
                          "name": "success",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 203,
                          "src": "2120:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 229,
                          "nodeType": "Block",
                          "src": "2167:286:0",
                          "statements": [
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 220,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 217,
                                    "name": "returndata",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 205,
                                    "src": "2179:10:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  },
                                  "id": 218,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "length",
                                  "nodeType": "MemberAccess",
                                  "src": "2179:17:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 219,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2199:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "2179:21:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseBody": {
                                "id": 227,
                                "nodeType": "Block",
                                "src": "2408:39:0",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "id": 224,
                                          "name": "errorMessage",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 190,
                                          "src": "2425:12:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_string_memory_ptr",
                                            "typeString": "string memory"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_string_memory_ptr",
                                            "typeString": "string memory"
                                          }
                                        ],
                                        "id": 223,
                                        "name": "revert",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [
                                          -19,
                                          -19
                                        ],
                                        "referencedDeclaration": -19,
                                        "src": "2418:6:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                          "typeString": "function (string memory) pure"
                                        }
                                      },
                                      "id": 225,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "2418:20:0",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 226,
                                    "nodeType": "ExpressionStatement",
                                    "src": "2418:20:0"
                                  }
                                ]
                              },
                              "id": 228,
                              "nodeType": "IfStatement",
                              "src": "2175:272:0",
                              "trueBody": {
                                "id": 222,
                                "nodeType": "Block",
                                "src": "2202:200:0",
                                "statements": [
                                  {
                                    "AST": {
                                      "nodeType": "YulBlock",
                                      "src": "2277:117:0",
                                      "statements": [
                                        {
                                          "nodeType": "YulVariableDeclaration",
                                          "src": "2289:40:0",
                                          "value": {
                                            "arguments": [
                                              {
                                                "name": "returndata",
                                                "nodeType": "YulIdentifier",
                                                "src": "2318:10:0"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "mload",
                                              "nodeType": "YulIdentifier",
                                              "src": "2312:5:0"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "2312:17:0"
                                          },
                                          "variables": [
                                            {
                                              "name": "returndata_size",
                                              "nodeType": "YulTypedName",
                                              "src": "2293:15:0",
                                              "type": ""
                                            }
                                          ]
                                        },
                                        {
                                          "expression": {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "2351:2:0",
                                                    "type": "",
                                                    "value": "32"
                                                  },
                                                  {
                                                    "name": "returndata",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "2355:10:0"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "add",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "2347:3:0"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "2347:19:0"
                                              },
                                              {
                                                "name": "returndata_size",
                                                "nodeType": "YulIdentifier",
                                                "src": "2368:15:0"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "revert",
                                              "nodeType": "YulIdentifier",
                                              "src": "2340:6:0"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "2340:44:0"
                                          },
                                          "nodeType": "YulExpressionStatement",
                                          "src": "2340:44:0"
                                        }
                                      ]
                                    },
                                    "evmVersion": "london",
                                    "externalReferences": [
                                      {
                                        "declaration": 205,
                                        "isOffset": false,
                                        "isSlot": false,
                                        "src": "2318:10:0",
                                        "valueSize": 1
                                      },
                                      {
                                        "declaration": 205,
                                        "isOffset": false,
                                        "isSlot": false,
                                        "src": "2355:10:0",
                                        "valueSize": 1
                                      }
                                    ],
                                    "id": 221,
                                    "nodeType": "InlineAssembly",
                                    "src": "2268:126:0"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "id": 230,
                        "nodeType": "IfStatement",
                        "src": "2116:337:0",
                        "trueBody": {
                          "id": 216,
                          "nodeType": "Block",
                          "src": "2129:32:0",
                          "statements": [
                            {
                              "expression": {
                                "id": 214,
                                "name": "returndata",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 205,
                                "src": "2144:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              "functionReturnParameters": 194,
                              "id": 215,
                              "nodeType": "Return",
                              "src": "2137:17:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "id": 232,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_functionCallWithValue",
                  "nameLocation": "1739:22:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 191,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 184,
                        "mutability": "mutable",
                        "name": "target",
                        "nameLocation": "1775:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 232,
                        "src": "1767:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 183,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1767:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 186,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "1800:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 232,
                        "src": "1787:17:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 185,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "1787:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 188,
                        "mutability": "mutable",
                        "name": "weiValue",
                        "nameLocation": "1818:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 232,
                        "src": "1810:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 187,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1810:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 190,
                        "mutability": "mutable",
                        "name": "errorMessage",
                        "nameLocation": "1846:12:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 232,
                        "src": "1832:26:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 189,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1832:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1761:101:0"
                  },
                  "returnParameters": {
                    "id": 194,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 193,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 232,
                        "src": "1880:12:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 192,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "1880:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1879:14:0"
                  },
                  "scope": 263,
                  "src": "1730:727:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 261,
                    "nodeType": "Block",
                    "src": "2607:347:0",
                    "statements": [
                      {
                        "condition": {
                          "id": 243,
                          "name": "success",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 234,
                          "src": "2617:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 259,
                          "nodeType": "Block",
                          "src": "2664:286:0",
                          "statements": [
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 250,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 247,
                                    "name": "returndata",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 236,
                                    "src": "2676:10:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  },
                                  "id": 248,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "length",
                                  "nodeType": "MemberAccess",
                                  "src": "2676:17:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 249,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2696:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "2676:21:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseBody": {
                                "id": 257,
                                "nodeType": "Block",
                                "src": "2905:39:0",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "id": 254,
                                          "name": "errorMessage",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 238,
                                          "src": "2922:12:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_string_memory_ptr",
                                            "typeString": "string memory"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_string_memory_ptr",
                                            "typeString": "string memory"
                                          }
                                        ],
                                        "id": 253,
                                        "name": "revert",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [
                                          -19,
                                          -19
                                        ],
                                        "referencedDeclaration": -19,
                                        "src": "2915:6:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                          "typeString": "function (string memory) pure"
                                        }
                                      },
                                      "id": 255,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "2915:20:0",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 256,
                                    "nodeType": "ExpressionStatement",
                                    "src": "2915:20:0"
                                  }
                                ]
                              },
                              "id": 258,
                              "nodeType": "IfStatement",
                              "src": "2672:272:0",
                              "trueBody": {
                                "id": 252,
                                "nodeType": "Block",
                                "src": "2699:200:0",
                                "statements": [
                                  {
                                    "AST": {
                                      "nodeType": "YulBlock",
                                      "src": "2774:117:0",
                                      "statements": [
                                        {
                                          "nodeType": "YulVariableDeclaration",
                                          "src": "2786:40:0",
                                          "value": {
                                            "arguments": [
                                              {
                                                "name": "returndata",
                                                "nodeType": "YulIdentifier",
                                                "src": "2815:10:0"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "mload",
                                              "nodeType": "YulIdentifier",
                                              "src": "2809:5:0"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "2809:17:0"
                                          },
                                          "variables": [
                                            {
                                              "name": "returndata_size",
                                              "nodeType": "YulTypedName",
                                              "src": "2790:15:0",
                                              "type": ""
                                            }
                                          ]
                                        },
                                        {
                                          "expression": {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "2848:2:0",
                                                    "type": "",
                                                    "value": "32"
                                                  },
                                                  {
                                                    "name": "returndata",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "2852:10:0"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "add",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "2844:3:0"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "2844:19:0"
                                              },
                                              {
                                                "name": "returndata_size",
                                                "nodeType": "YulIdentifier",
                                                "src": "2865:15:0"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "revert",
                                              "nodeType": "YulIdentifier",
                                              "src": "2837:6:0"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "2837:44:0"
                                          },
                                          "nodeType": "YulExpressionStatement",
                                          "src": "2837:44:0"
                                        }
                                      ]
                                    },
                                    "evmVersion": "london",
                                    "externalReferences": [
                                      {
                                        "declaration": 236,
                                        "isOffset": false,
                                        "isSlot": false,
                                        "src": "2815:10:0",
                                        "valueSize": 1
                                      },
                                      {
                                        "declaration": 236,
                                        "isOffset": false,
                                        "isSlot": false,
                                        "src": "2852:10:0",
                                        "valueSize": 1
                                      }
                                    ],
                                    "id": 251,
                                    "nodeType": "InlineAssembly",
                                    "src": "2765:126:0"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "id": 260,
                        "nodeType": "IfStatement",
                        "src": "2613:337:0",
                        "trueBody": {
                          "id": 246,
                          "nodeType": "Block",
                          "src": "2626:32:0",
                          "statements": [
                            {
                              "expression": {
                                "id": 244,
                                "name": "returndata",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 236,
                                "src": "2641:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              "functionReturnParameters": 242,
                              "id": 245,
                              "nodeType": "Return",
                              "src": "2634:17:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "id": 262,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_verifyCallResult",
                  "nameLocation": "2470:17:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 239,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 234,
                        "mutability": "mutable",
                        "name": "success",
                        "nameLocation": "2498:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 262,
                        "src": "2493:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 233,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2493:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 236,
                        "mutability": "mutable",
                        "name": "returndata",
                        "nameLocation": "2524:10:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 262,
                        "src": "2511:23:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 235,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "2511:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 238,
                        "mutability": "mutable",
                        "name": "errorMessage",
                        "nameLocation": "2554:12:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 262,
                        "src": "2540:26:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 237,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "2540:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2487:83:0"
                  },
                  "returnParameters": {
                    "id": 242,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 241,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 262,
                        "src": "2593:12:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 240,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "2593:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2592:14:0"
                  },
                  "scope": 263,
                  "src": "2461:493:0",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "private"
                }
              ],
              "scope": 2314,
              "src": "1105:1851:0",
              "usedErrors": []
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IOwnable",
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 280,
              "linearizedBaseContracts": [
                280
              ],
              "name": "IOwnable",
              "nameLocation": "2968:8:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "functionSelector": "481c6a75",
                  "id": 268,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "manager",
                  "nameLocation": "2990:7:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 264,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2997:2:0"
                  },
                  "returnParameters": {
                    "id": 267,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 266,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 268,
                        "src": "3023:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 265,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3023:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3022:9:0"
                  },
                  "scope": 280,
                  "src": "2981:51:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "089208d8",
                  "id": 271,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "renounceManagement",
                  "nameLocation": "3045:18:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 269,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3063:2:0"
                  },
                  "returnParameters": {
                    "id": 270,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3074:0:0"
                  },
                  "scope": 280,
                  "src": "3036:39:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "46f68ee9",
                  "id": 276,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "pushManagement",
                  "nameLocation": "3088:14:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 274,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 273,
                        "mutability": "mutable",
                        "name": "newOwner_",
                        "nameLocation": "3111:9:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 276,
                        "src": "3103:17:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 272,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3103:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3102:19:0"
                  },
                  "returnParameters": {
                    "id": 275,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3130:0:0"
                  },
                  "scope": 280,
                  "src": "3079:52:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "5a96ac0a",
                  "id": 279,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "pullManagement",
                  "nameLocation": "3144:14:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 277,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3158:2:0"
                  },
                  "returnParameters": {
                    "id": 278,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3169:0:0"
                  },
                  "scope": 280,
                  "src": "3135:35:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 2314,
              "src": "2958:214:0",
              "usedErrors": []
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 281,
                    "name": "IOwnable",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 280,
                    "src": "3194:8:0"
                  },
                  "id": 282,
                  "nodeType": "InheritanceSpecifier",
                  "src": "3194:8:0"
                }
              ],
              "canonicalName": "Ownable",
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 409,
              "linearizedBaseContracts": [
                409,
                280
              ],
              "name": "Ownable",
              "nameLocation": "3183:7:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 284,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "3224:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 409,
                  "src": "3207:23:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 283,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3207:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 286,
                  "mutability": "mutable",
                  "name": "_newOwner",
                  "nameLocation": "3251:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 409,
                  "src": "3234:26:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 285,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3234:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "anonymous": false,
                  "id": 292,
                  "name": "OwnershipPushed",
                  "nameLocation": "3271:15:0",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 291,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 288,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "previousOwner",
                        "nameLocation": "3308:13:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 292,
                        "src": "3292:29:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 287,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3292:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 290,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nameLocation": "3343:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 292,
                        "src": "3327:24:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 289,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3327:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3286:69:0"
                  },
                  "src": "3265:91:0"
                },
                {
                  "anonymous": false,
                  "id": 298,
                  "name": "OwnershipPulled",
                  "nameLocation": "3365:15:0",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 297,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 294,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "previousOwner",
                        "nameLocation": "3402:13:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 298,
                        "src": "3386:29:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 293,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3386:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 296,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nameLocation": "3437:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 298,
                        "src": "3421:24:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 295,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3421:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3380:69:0"
                  },
                  "src": "3359:91:0"
                },
                {
                  "body": {
                    "id": 314,
                    "nodeType": "Block",
                    "src": "3468:76:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 304,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 301,
                            "name": "_owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 284,
                            "src": "3474:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 302,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "3483:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 303,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3483:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3474:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 305,
                        "nodeType": "ExpressionStatement",
                        "src": "3474:19:0"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 309,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3528:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 308,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3520:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 307,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3520:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 310,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3520:10:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 311,
                              "name": "_owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 284,
                              "src": "3532:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 306,
                            "name": "OwnershipPushed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 292,
                            "src": "3504:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 312,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3504:35:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 313,
                        "nodeType": "EmitStatement",
                        "src": "3499:40:0"
                      }
                    ]
                  },
                  "id": 315,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 299,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3465:2:0"
                  },
                  "returnParameters": {
                    "id": 300,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3468:0:0"
                  },
                  "scope": 409,
                  "src": "3454:90:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    268
                  ],
                  "body": {
                    "id": 323,
                    "nodeType": "Block",
                    "src": "3606:24:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 321,
                          "name": "_owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 284,
                          "src": "3619:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 320,
                        "id": 322,
                        "nodeType": "Return",
                        "src": "3612:13:0"
                      }
                    ]
                  },
                  "functionSelector": "481c6a75",
                  "id": 324,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "manager",
                  "nameLocation": "3557:7:0",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 317,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "3579:8:0"
                  },
                  "parameters": {
                    "id": 316,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3564:2:0"
                  },
                  "returnParameters": {
                    "id": 320,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 319,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 324,
                        "src": "3597:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 318,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3597:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3596:9:0"
                  },
                  "scope": 409,
                  "src": "3548:82:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 335,
                    "nodeType": "Block",
                    "src": "3657:83:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 330,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 327,
                                "name": "_owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 284,
                                "src": "3671:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "id": 328,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "3681:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 329,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "3681:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "3671:20:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                              "id": 331,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3693:34:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
                                "typeString": "literal_string \"Ownable: caller is not the owner\""
                              },
                              "value": "Ownable: caller is not the owner"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
                                "typeString": "literal_string \"Ownable: caller is not the owner\""
                              }
                            ],
                            "id": 326,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3663:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 332,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3663:65:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 333,
                        "nodeType": "ExpressionStatement",
                        "src": "3663:65:0"
                      },
                      {
                        "id": 334,
                        "nodeType": "PlaceholderStatement",
                        "src": "3734:1:0"
                      }
                    ]
                  },
                  "id": 336,
                  "name": "onlyManager",
                  "nameLocation": "3643:11:0",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 325,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3654:2:0"
                  },
                  "src": "3634:106:0",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "baseFunctions": [
                    271
                  ],
                  "body": {
                    "id": 357,
                    "nodeType": "Block",
                    "src": "3810:76:0",
                    "statements": [
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 343,
                              "name": "_owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 284,
                              "src": "3837:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 346,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3853:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 345,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3845:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 344,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3845:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 347,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3845:10:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 342,
                            "name": "OwnershipPushed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 292,
                            "src": "3821:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 348,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3821:35:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 349,
                        "nodeType": "EmitStatement",
                        "src": "3816:40:0"
                      },
                      {
                        "expression": {
                          "id": 355,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 350,
                            "name": "_owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 284,
                            "src": "3862:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 353,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3879:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 352,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3871:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 351,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3871:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 354,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3871:10:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3862:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 356,
                        "nodeType": "ExpressionStatement",
                        "src": "3862:19:0"
                      }
                    ]
                  },
                  "functionSelector": "089208d8",
                  "id": 358,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 340,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 339,
                        "name": "onlyManager",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 336,
                        "src": "3798:11:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "3798:11:0"
                    }
                  ],
                  "name": "renounceManagement",
                  "nameLocation": "3753:18:0",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 338,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "3789:8:0"
                  },
                  "parameters": {
                    "id": 337,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3771:2:0"
                  },
                  "returnParameters": {
                    "id": 341,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3810:0:0"
                  },
                  "scope": 409,
                  "src": "3744:142:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    276
                  ],
                  "body": {
                    "id": 385,
                    "nodeType": "Block",
                    "src": "3987:157:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 372,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 367,
                                "name": "newOwner_",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 360,
                                "src": "4001:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 370,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "4022:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 369,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "4014:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 368,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "4014:7:0",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 371,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4014:10:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "4001:23:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
                              "id": 373,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4026:40:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
                                "typeString": "literal_string \"Ownable: new owner is the zero address\""
                              },
                              "value": "Ownable: new owner is the zero address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
                                "typeString": "literal_string \"Ownable: new owner is the zero address\""
                              }
                            ],
                            "id": 366,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3993:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 374,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3993:74:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 375,
                        "nodeType": "ExpressionStatement",
                        "src": "3993:74:0"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 377,
                              "name": "_owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 284,
                              "src": "4094:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 378,
                              "name": "newOwner_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 360,
                              "src": "4102:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 376,
                            "name": "OwnershipPushed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 292,
                            "src": "4078:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 379,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4078:34:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 380,
                        "nodeType": "EmitStatement",
                        "src": "4073:39:0"
                      },
                      {
                        "expression": {
                          "id": 383,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 381,
                            "name": "_newOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 286,
                            "src": "4118:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 382,
                            "name": "newOwner_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 360,
                            "src": "4130:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "4118:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 384,
                        "nodeType": "ExpressionStatement",
                        "src": "4118:21:0"
                      }
                    ]
                  },
                  "functionSelector": "46f68ee9",
                  "id": 386,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 364,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 363,
                        "name": "onlyManager",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 336,
                        "src": "3973:11:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "3973:11:0"
                    }
                  ],
                  "name": "pushManagement",
                  "nameLocation": "3899:14:0",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 362,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "3960:8:0"
                  },
                  "parameters": {
                    "id": 361,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 360,
                        "mutability": "mutable",
                        "name": "newOwner_",
                        "nameLocation": "3922:9:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 386,
                        "src": "3914:17:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 359,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3914:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3913:19:0"
                  },
                  "returnParameters": {
                    "id": 365,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3987:0:0"
                  },
                  "scope": 409,
                  "src": "3890:254:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    279
                  ],
                  "body": {
                    "id": 407,
                    "nodeType": "Block",
                    "src": "4198:150:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 394,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 391,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "4212:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 392,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "4212:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 393,
                                "name": "_newOwner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 286,
                                "src": "4226:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "4212:23:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4f776e61626c653a206d757374206265206e6577206f776e657220746f2070756c6c",
                              "id": 395,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4237:36:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_4de71fbd3469e1b7fc89a70805ae86972c680281e629f271ab7471fd6321445c",
                                "typeString": "literal_string \"Ownable: must be new owner to pull\""
                              },
                              "value": "Ownable: must be new owner to pull"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_4de71fbd3469e1b7fc89a70805ae86972c680281e629f271ab7471fd6321445c",
                                "typeString": "literal_string \"Ownable: must be new owner to pull\""
                              }
                            ],
                            "id": 390,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4204:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 396,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4204:70:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 397,
                        "nodeType": "ExpressionStatement",
                        "src": "4204:70:0"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 399,
                              "name": "_owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 284,
                              "src": "4301:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 400,
                              "name": "_newOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 286,
                              "src": "4309:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 398,
                            "name": "OwnershipPulled",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 298,
                            "src": "4285:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 401,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4285:34:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 402,
                        "nodeType": "EmitStatement",
                        "src": "4280:39:0"
                      },
                      {
                        "expression": {
                          "id": 405,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 403,
                            "name": "_owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 284,
                            "src": "4325:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 404,
                            "name": "_newOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 286,
                            "src": "4334:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "4325:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 406,
                        "nodeType": "ExpressionStatement",
                        "src": "4325:18:0"
                      }
                    ]
                  },
                  "functionSelector": "5a96ac0a",
                  "id": 408,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "pullManagement",
                  "nameLocation": "4157:14:0",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 388,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "4189:8:0"
                  },
                  "parameters": {
                    "id": 387,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4171:2:0"
                  },
                  "returnParameters": {
                    "id": 389,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4198:0:0"
                  },
                  "scope": 409,
                  "src": "4148:200:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                }
              ],
              "scope": 2314,
              "src": "3174:1176:0",
              "usedErrors": []
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC20",
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 472,
              "linearizedBaseContracts": [
                472
              ],
              "name": "IERC20",
              "nameLocation": "4362:6:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "functionSelector": "313ce567",
                  "id": 414,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "decimals",
                  "nameLocation": "4382:8:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 410,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4390:2:0"
                  },
                  "returnParameters": {
                    "id": 413,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 412,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 414,
                        "src": "4416:5:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 411,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "4416:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4415:7:0"
                  },
                  "scope": 472,
                  "src": "4373:50:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "70a08231",
                  "id": 421,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "balanceOf",
                  "nameLocation": "4436:9:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 417,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 416,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "4454:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 421,
                        "src": "4446:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 415,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4446:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4445:17:0"
                  },
                  "returnParameters": {
                    "id": 420,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 419,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 421,
                        "src": "4486:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 418,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4486:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4485:9:0"
                  },
                  "scope": 472,
                  "src": "4427:68:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "a9059cbb",
                  "id": 430,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transfer",
                  "nameLocation": "4508:8:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 426,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 423,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nameLocation": "4525:9:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 430,
                        "src": "4517:17:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 422,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4517:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 425,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "4544:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 430,
                        "src": "4536:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 424,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4536:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4516:35:0"
                  },
                  "returnParameters": {
                    "id": 429,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 428,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 430,
                        "src": "4570:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 427,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "4570:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4569:6:0"
                  },
                  "scope": 472,
                  "src": "4499:77:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "095ea7b3",
                  "id": 439,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "approve",
                  "nameLocation": "4589:7:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 435,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 432,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "4605:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 439,
                        "src": "4597:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 431,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4597:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 434,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "4622:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 439,
                        "src": "4614:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 433,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4614:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4596:33:0"
                  },
                  "returnParameters": {
                    "id": 438,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 437,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 439,
                        "src": "4648:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 436,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "4648:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4647:6:0"
                  },
                  "scope": 472,
                  "src": "4580:74:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "18160ddd",
                  "id": 444,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "totalSupply",
                  "nameLocation": "4667:11:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 440,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4678:2:0"
                  },
                  "returnParameters": {
                    "id": 443,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 442,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 444,
                        "src": "4704:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 441,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4704:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4703:9:0"
                  },
                  "scope": 472,
                  "src": "4658:55:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "23b872dd",
                  "id": 455,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferFrom",
                  "nameLocation": "4726:12:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 451,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 446,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "4752:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 455,
                        "src": "4744:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 445,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4744:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 448,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nameLocation": "4772:9:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 455,
                        "src": "4764:17:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 447,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4764:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 450,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "4795:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 455,
                        "src": "4787:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 449,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4787:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4738:67:0"
                  },
                  "returnParameters": {
                    "id": 454,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 453,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 455,
                        "src": "4824:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 452,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "4824:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4823:6:0"
                  },
                  "scope": 472,
                  "src": "4717:113:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "anonymous": false,
                  "id": 463,
                  "name": "Transfer",
                  "nameLocation": "4840:8:0",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 462,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 457,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "4865:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 463,
                        "src": "4849:20:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 456,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4849:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 459,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "4887:2:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 463,
                        "src": "4871:18:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 458,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4871:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 461,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "4899:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 463,
                        "src": "4891:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 460,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4891:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4848:57:0"
                  },
                  "src": "4834:72:0"
                },
                {
                  "anonymous": false,
                  "id": 471,
                  "name": "Approval",
                  "nameLocation": "4916:8:0",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 470,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 465,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "4941:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 471,
                        "src": "4925:21:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 464,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4925:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 467,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "4964:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 471,
                        "src": "4948:23:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 466,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4948:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 469,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "4981:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 471,
                        "src": "4973:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 468,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4973:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4924:63:0"
                  },
                  "src": "4910:78:0"
                }
              ],
              "scope": 2314,
              "src": "4352:638:0",
              "usedErrors": []
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "SafeERC20",
              "contractDependencies": [],
              "contractKind": "library",
              "fullyImplemented": true,
              "id": 565,
              "linearizedBaseContracts": [
                565
              ],
              "name": "SafeERC20",
              "nameLocation": "5000:9:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "id": 475,
                  "libraryName": {
                    "id": 473,
                    "name": "SafeMath",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 147,
                    "src": "5020:8:0"
                  },
                  "nodeType": "UsingForDirective",
                  "src": "5014:27:0",
                  "typeName": {
                    "id": 474,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5033:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                },
                {
                  "id": 478,
                  "libraryName": {
                    "id": 476,
                    "name": "Address",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 263,
                    "src": "5050:7:0"
                  },
                  "nodeType": "UsingForDirective",
                  "src": "5044:26:0",
                  "typeName": {
                    "id": 477,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5062:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                },
                {
                  "body": {
                    "id": 500,
                    "nodeType": "Block",
                    "src": "5162:115:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 489,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 481,
                              "src": "5195:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$472",
                                "typeString": "contract IERC20"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "expression": {
                                      "id": 492,
                                      "name": "token",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 481,
                                      "src": "5231:5:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IERC20_$472",
                                        "typeString": "contract IERC20"
                                      }
                                    },
                                    "id": 493,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "transfer",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 430,
                                    "src": "5231:14:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                      "typeString": "function (address,uint256) external returns (bool)"
                                    }
                                  },
                                  "id": 494,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "selector",
                                  "nodeType": "MemberAccess",
                                  "src": "5231:23:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  }
                                },
                                {
                                  "id": 495,
                                  "name": "to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 483,
                                  "src": "5256:2:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 496,
                                  "name": "value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 485,
                                  "src": "5260:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 490,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "5208:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 491,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodeWithSelector",
                                "nodeType": "MemberAccess",
                                "src": "5208:22:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function (bytes4) pure returns (bytes memory)"
                                }
                              },
                              "id": 497,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5208:58:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$472",
                                "typeString": "contract IERC20"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 488,
                            "name": "_callOptionalReturn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 564,
                            "src": "5168:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$472_$_t_bytes_memory_ptr_$returns$__$",
                              "typeString": "function (contract IERC20,bytes memory)"
                            }
                          },
                          "id": 498,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5168:104:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 499,
                        "nodeType": "ExpressionStatement",
                        "src": "5168:104:0"
                      }
                    ]
                  },
                  "id": 501,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "safeTransfer",
                  "nameLocation": "5083:12:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 486,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 481,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "5108:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 501,
                        "src": "5101:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$472",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "id": 480,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 479,
                            "name": "IERC20",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 472,
                            "src": "5101:6:0"
                          },
                          "referencedDeclaration": 472,
                          "src": "5101:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$472",
                            "typeString": "contract IERC20"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 483,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "5127:2:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 501,
                        "src": "5119:10:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 482,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5119:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 485,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "5143:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 501,
                        "src": "5135:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 484,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5135:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5095:57:0"
                  },
                  "returnParameters": {
                    "id": 487,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5162:0:0"
                  },
                  "scope": 565,
                  "src": "5074:203:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 526,
                    "nodeType": "Block",
                    "src": "5391:125:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 514,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 504,
                              "src": "5424:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$472",
                                "typeString": "contract IERC20"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "expression": {
                                      "id": 517,
                                      "name": "token",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 504,
                                      "src": "5460:5:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IERC20_$472",
                                        "typeString": "contract IERC20"
                                      }
                                    },
                                    "id": 518,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "transferFrom",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 455,
                                    "src": "5460:18:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                                      "typeString": "function (address,address,uint256) external returns (bool)"
                                    }
                                  },
                                  "id": 519,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "selector",
                                  "nodeType": "MemberAccess",
                                  "src": "5460:27:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  }
                                },
                                {
                                  "id": 520,
                                  "name": "from",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 506,
                                  "src": "5489:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 521,
                                  "name": "to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 508,
                                  "src": "5495:2:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 522,
                                  "name": "value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 510,
                                  "src": "5499:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 515,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "5437:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 516,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodeWithSelector",
                                "nodeType": "MemberAccess",
                                "src": "5437:22:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function (bytes4) pure returns (bytes memory)"
                                }
                              },
                              "id": 523,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5437:68:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$472",
                                "typeString": "contract IERC20"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 513,
                            "name": "_callOptionalReturn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 564,
                            "src": "5397:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$472_$_t_bytes_memory_ptr_$returns$__$",
                              "typeString": "function (contract IERC20,bytes memory)"
                            }
                          },
                          "id": 524,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5397:114:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 525,
                        "nodeType": "ExpressionStatement",
                        "src": "5397:114:0"
                      }
                    ]
                  },
                  "id": 527,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "safeTransferFrom",
                  "nameLocation": "5290:16:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 511,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 504,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "5319:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 527,
                        "src": "5312:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$472",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "id": 503,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 502,
                            "name": "IERC20",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 472,
                            "src": "5312:6:0"
                          },
                          "referencedDeclaration": 472,
                          "src": "5312:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$472",
                            "typeString": "contract IERC20"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 506,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "5338:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 527,
                        "src": "5330:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 505,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5330:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 508,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "5356:2:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 527,
                        "src": "5348:10:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 507,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5348:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 510,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "5372:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 527,
                        "src": "5364:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 509,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5364:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5306:75:0"
                  },
                  "returnParameters": {
                    "id": 512,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5391:0:0"
                  },
                  "scope": 565,
                  "src": "5281:235:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 563,
                    "nodeType": "Block",
                    "src": "5590:364:0",
                    "statements": [
                      {
                        "assignments": [
                          536
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 536,
                            "mutability": "mutable",
                            "name": "returndata",
                            "nameLocation": "5609:10:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 563,
                            "src": "5596:23:0",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 535,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "5596:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 545,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 542,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 532,
                              "src": "5657:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "hexValue": "5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564",
                              "id": 543,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5669:34:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
                                "typeString": "literal_string \"SafeERC20: low-level call failed\""
                              },
                              "value": "SafeERC20: low-level call failed"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
                                "typeString": "literal_string \"SafeERC20: low-level call failed\""
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 539,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 530,
                                  "src": "5630:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$472",
                                    "typeString": "contract IERC20"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IERC20_$472",
                                    "typeString": "contract IERC20"
                                  }
                                ],
                                "id": 538,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "5622:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 537,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "5622:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 540,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5622:14:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 541,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "functionCall",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 182,
                            "src": "5622:27:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
                              "typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
                            }
                          },
                          "id": 544,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5622:87:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5596:113:0"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 549,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 546,
                              "name": "returndata",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 536,
                              "src": "5719:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            "id": 547,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "5719:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 548,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5739:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "5719:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 562,
                        "nodeType": "IfStatement",
                        "src": "5715:235:0",
                        "trueBody": {
                          "id": 561,
                          "nodeType": "Block",
                          "src": "5742:208:0",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 553,
                                        "name": "returndata",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 536,
                                        "src": "5862:10:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes_memory_ptr",
                                          "typeString": "bytes memory"
                                        }
                                      },
                                      {
                                        "components": [
                                          {
                                            "id": 555,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "nodeType": "ElementaryTypeNameExpression",
                                            "src": "5875:4:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_bool_$",
                                              "typeString": "type(bool)"
                                            },
                                            "typeName": {
                                              "id": 554,
                                              "name": "bool",
                                              "nodeType": "ElementaryTypeName",
                                              "src": "5875:4:0",
                                              "typeDescriptions": {}
                                            }
                                          }
                                        ],
                                        "id": 556,
                                        "isConstant": false,
                                        "isInlineArray": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "TupleExpression",
                                        "src": "5874:6:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_bool_$",
                                          "typeString": "type(bool)"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_bytes_memory_ptr",
                                          "typeString": "bytes memory"
                                        },
                                        {
                                          "typeIdentifier": "t_type$_t_bool_$",
                                          "typeString": "type(bool)"
                                        }
                                      ],
                                      "expression": {
                                        "id": 551,
                                        "name": "abi",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -1,
                                        "src": "5851:3:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_abi",
                                          "typeString": "abi"
                                        }
                                      },
                                      "id": 552,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberName": "decode",
                                      "nodeType": "MemberAccess",
                                      "src": "5851:10:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                                        "typeString": "function () pure"
                                      }
                                    },
                                    "id": 557,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "5851:30:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
                                    "id": 558,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "5891:44:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
                                      "typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
                                    },
                                    "value": "SafeERC20: ERC20 operation did not succeed"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
                                      "typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
                                    }
                                  ],
                                  "id": 550,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "5834:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 559,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5834:109:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 560,
                              "nodeType": "ExpressionStatement",
                              "src": "5834:109:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "id": 564,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_callOptionalReturn",
                  "nameLocation": "5529:19:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 533,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 530,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "5556:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 564,
                        "src": "5549:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$472",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "id": 529,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 528,
                            "name": "IERC20",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 472,
                            "src": "5549:6:0"
                          },
                          "referencedDeclaration": 472,
                          "src": "5549:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$472",
                            "typeString": "contract IERC20"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 532,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "5576:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 564,
                        "src": "5563:17:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 531,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "5563:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5548:33:0"
                  },
                  "returnParameters": {
                    "id": 534,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5590:0:0"
                  },
                  "scope": 565,
                  "src": "5520:434:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "private"
                }
              ],
              "scope": 2314,
              "src": "4992:964:0",
              "usedErrors": []
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC20Mintable",
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 578,
              "linearizedBaseContracts": [
                578
              ],
              "name": "IERC20Mintable",
              "nameLocation": "5968:14:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "functionSelector": "a0712d68",
                  "id": 570,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "mint",
                  "nameLocation": "5996:4:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 568,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 567,
                        "mutability": "mutable",
                        "name": "amount_",
                        "nameLocation": "6009:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 570,
                        "src": "6001:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 566,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6001:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6000:17:0"
                  },
                  "returnParameters": {
                    "id": 569,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6026:0:0"
                  },
                  "scope": 578,
                  "src": "5987:40:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "40c10f19",
                  "id": 577,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "mint",
                  "nameLocation": "6040:4:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 575,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 572,
                        "mutability": "mutable",
                        "name": "account_",
                        "nameLocation": "6053:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 577,
                        "src": "6045:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 571,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6045:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 574,
                        "mutability": "mutable",
                        "name": "ammount_",
                        "nameLocation": "6071:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 577,
                        "src": "6063:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 573,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6063:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6044:36:0"
                  },
                  "returnParameters": {
                    "id": 576,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6089:0:0"
                  },
                  "scope": 578,
                  "src": "6031:59:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 2314,
              "src": "5958:134:0",
              "usedErrors": []
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IOHMERC20",
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 586,
              "linearizedBaseContracts": [
                586
              ],
              "name": "IOHMERC20",
              "nameLocation": "6104:9:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "functionSelector": "79cc6790",
                  "id": 585,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "burnFrom",
                  "nameLocation": "6127:8:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 583,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 580,
                        "mutability": "mutable",
                        "name": "account_",
                        "nameLocation": "6144:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 585,
                        "src": "6136:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 579,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6136:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 582,
                        "mutability": "mutable",
                        "name": "amount_",
                        "nameLocation": "6162:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 585,
                        "src": "6154:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 581,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6154:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6135:35:0"
                  },
                  "returnParameters": {
                    "id": 584,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6179:0:0"
                  },
                  "scope": 586,
                  "src": "6118:62:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 2314,
              "src": "6094:88:0",
              "usedErrors": []
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IBondCalculator",
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 596,
              "linearizedBaseContracts": [
                596
              ],
              "name": "IBondCalculator",
              "nameLocation": "6194:15:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "functionSelector": "4249719f",
                  "id": 595,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "valuation",
                  "nameLocation": "6223:9:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 591,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 588,
                        "mutability": "mutable",
                        "name": "pair_",
                        "nameLocation": "6241:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 595,
                        "src": "6233:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 587,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6233:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 590,
                        "mutability": "mutable",
                        "name": "amount_",
                        "nameLocation": "6256:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 595,
                        "src": "6248:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 589,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6248:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6232:32:0"
                  },
                  "returnParameters": {
                    "id": 594,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 593,
                        "mutability": "mutable",
                        "name": "_value",
                        "nameLocation": "6308:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 595,
                        "src": "6300:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 592,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6300:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6299:16:0"
                  },
                  "scope": 596,
                  "src": "6214:102:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 2314,
              "src": "6184:134:0",
              "usedErrors": []
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 597,
                    "name": "Ownable",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 409,
                    "src": "6352:7:0"
                  },
                  "id": 598,
                  "nodeType": "InheritanceSpecifier",
                  "src": "6352:7:0"
                }
              ],
              "canonicalName": "MockOlympusTreasury",
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 2313,
              "linearizedBaseContracts": [
                2313,
                409,
                280
              ],
              "name": "MockOlympusTreasury",
              "nameLocation": "6329:19:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "id": 601,
                  "libraryName": {
                    "id": 599,
                    "name": "SafeMath",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 147,
                    "src": "6370:8:0"
                  },
                  "nodeType": "UsingForDirective",
                  "src": "6364:27:0",
                  "typeName": {
                    "id": 600,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6383:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                },
                {
                  "id": 605,
                  "libraryName": {
                    "id": 602,
                    "name": "SafeERC20",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 565,
                    "src": "6400:9:0"
                  },
                  "nodeType": "UsingForDirective",
                  "src": "6394:27:0",
                  "typeName": {
                    "id": 604,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 603,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 472,
                      "src": "6414:6:0"
                    },
                    "referencedDeclaration": 472,
                    "src": "6414:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$472",
                      "typeString": "contract IERC20"
                    }
                  }
                },
                {
                  "anonymous": false,
                  "id": 613,
                  "name": "Deposit",
                  "nameLocation": "6431:7:0",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 612,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 607,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "6455:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 613,
                        "src": "6439:21:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 606,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6439:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 609,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "6470:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 613,
                        "src": "6462:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 608,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6462:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 611,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "6486:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 613,
                        "src": "6478:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 610,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6478:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6438:54:0"
                  },
                  "src": "6425:68:0"
                },
                {
                  "anonymous": false,
                  "id": 621,
                  "name": "Withdrawal",
                  "nameLocation": "6502:10:0",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 620,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 615,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "6529:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 621,
                        "src": "6513:21:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 614,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6513:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 617,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "6544:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 621,
                        "src": "6536:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 616,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6536:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 619,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "6560:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 621,
                        "src": "6552:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 618,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6552:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6512:54:0"
                  },
                  "src": "6496:71:0"
                },
                {
                  "anonymous": false,
                  "id": 631,
                  "name": "CreateDebt",
                  "nameLocation": "6576:10:0",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 630,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 623,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "debtor",
                        "nameLocation": "6608:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 631,
                        "src": "6592:22:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 622,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6592:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 625,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "6636:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 631,
                        "src": "6620:21:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 624,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6620:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 627,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "6655:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 631,
                        "src": "6647:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 626,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6647:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 629,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "6675:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 631,
                        "src": "6667:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 628,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6667:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6586:98:0"
                  },
                  "src": "6570:115:0"
                },
                {
                  "anonymous": false,
                  "id": 641,
                  "name": "RepayDebt",
                  "nameLocation": "6694:9:0",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 640,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 633,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "debtor",
                        "nameLocation": "6725:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 641,
                        "src": "6709:22:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 632,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6709:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 635,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "6753:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 641,
                        "src": "6737:21:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 634,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6737:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 637,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "6772:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 641,
                        "src": "6764:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 636,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6764:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 639,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "6792:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 641,
                        "src": "6784:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 638,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6784:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6703:98:0"
                  },
                  "src": "6688:114:0"
                },
                {
                  "anonymous": false,
                  "id": 647,
                  "name": "ReservesManaged",
                  "nameLocation": "6811:15:0",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 646,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 643,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "6843:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 647,
                        "src": "6827:21:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 642,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6827:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 645,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "6858:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 647,
                        "src": "6850:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 644,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6850:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6826:39:0"
                  },
                  "src": "6805:61:0"
                },
                {
                  "anonymous": false,
                  "id": 651,
                  "name": "ReservesUpdated",
                  "nameLocation": "6875:15:0",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 650,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 649,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "totalReserves",
                        "nameLocation": "6907:13:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 651,
                        "src": "6891:29:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 648,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6891:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6890:31:0"
                  },
                  "src": "6869:53:0"
                },
                {
                  "anonymous": false,
                  "id": 655,
                  "name": "ReservesAudited",
                  "nameLocation": "6931:15:0",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 654,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 653,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "totalReserves",
                        "nameLocation": "6963:13:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 655,
                        "src": "6947:29:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 652,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6947:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6946:31:0"
                  },
                  "src": "6925:53:0"
                },
                {
                  "anonymous": false,
                  "id": 663,
                  "name": "RewardsMinted",
                  "nameLocation": "6987:13:0",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 662,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 657,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "caller",
                        "nameLocation": "7022:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 663,
                        "src": "7006:22:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 656,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7006:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 659,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nameLocation": "7050:9:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 663,
                        "src": "7034:25:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 658,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7034:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 661,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "7073:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 663,
                        "src": "7065:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 660,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7065:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7000:83:0"
                  },
                  "src": "6981:103:0"
                },
                {
                  "anonymous": false,
                  "id": 670,
                  "name": "ChangeQueued",
                  "nameLocation": "7093:12:0",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 669,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 666,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "managing",
                        "nameLocation": "7123:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 670,
                        "src": "7106:25:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_MANAGING_$690",
                          "typeString": "enum MockOlympusTreasury.MANAGING"
                        },
                        "typeName": {
                          "id": 665,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 664,
                            "name": "MANAGING",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 690,
                            "src": "7106:8:0"
                          },
                          "referencedDeclaration": 690,
                          "src": "7106:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_MANAGING_$690",
                            "typeString": "enum MockOlympusTreasury.MANAGING"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 668,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "queued",
                        "nameLocation": "7141:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 670,
                        "src": "7133:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 667,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7133:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7105:43:0"
                  },
                  "src": "7087:62:0"
                },
                {
                  "anonymous": false,
                  "id": 679,
                  "name": "ChangeActivated",
                  "nameLocation": "7158:15:0",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 678,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 673,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "managing",
                        "nameLocation": "7196:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 679,
                        "src": "7179:25:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_MANAGING_$690",
                          "typeString": "enum MockOlympusTreasury.MANAGING"
                        },
                        "typeName": {
                          "id": 672,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 671,
                            "name": "MANAGING",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 690,
                            "src": "7179:8:0"
                          },
                          "referencedDeclaration": 690,
                          "src": "7179:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_MANAGING_$690",
                            "typeString": "enum MockOlympusTreasury.MANAGING"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 675,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "activated",
                        "nameLocation": "7218:9:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 679,
                        "src": "7210:17:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 674,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7210:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 677,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "result",
                        "nameLocation": "7238:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 679,
                        "src": "7233:11:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 676,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "7233:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7173:75:0"
                  },
                  "src": "7152:97:0"
                },
                {
                  "canonicalName": "MockOlympusTreasury.MANAGING",
                  "id": 690,
                  "members": [
                    {
                      "id": 680,
                      "name": "RESERVEDEPOSITOR",
                      "nameLocation": "7273:16:0",
                      "nodeType": "EnumValue",
                      "src": "7273:16:0"
                    },
                    {
                      "id": 681,
                      "name": "RESERVESPENDER",
                      "nameLocation": "7295:14:0",
                      "nodeType": "EnumValue",
                      "src": "7295:14:0"
                    },
                    {
                      "id": 682,
                      "name": "RESERVETOKEN",
                      "nameLocation": "7315:12:0",
                      "nodeType": "EnumValue",
                      "src": "7315:12:0"
                    },
                    {
                      "id": 683,
                      "name": "RESERVEMANAGER",
                      "nameLocation": "7333:14:0",
                      "nodeType": "EnumValue",
                      "src": "7333:14:0"
                    },
                    {
                      "id": 684,
                      "name": "LIQUIDITYDEPOSITOR",
                      "nameLocation": "7353:18:0",
                      "nodeType": "EnumValue",
                      "src": "7353:18:0"
                    },
                    {
                      "id": 685,
                      "name": "LIQUIDITYTOKEN",
                      "nameLocation": "7377:14:0",
                      "nodeType": "EnumValue",
                      "src": "7377:14:0"
                    },
                    {
                      "id": 686,
                      "name": "LIQUIDITYMANAGER",
                      "nameLocation": "7397:16:0",
                      "nodeType": "EnumValue",
                      "src": "7397:16:0"
                    },
                    {
                      "id": 687,
                      "name": "DEBTOR",
                      "nameLocation": "7419:6:0",
                      "nodeType": "EnumValue",
                      "src": "7419:6:0"
                    },
                    {
                      "id": 688,
                      "name": "REWARDMANAGER",
                      "nameLocation": "7431:13:0",
                      "nodeType": "EnumValue",
                      "src": "7431:13:0"
                    },
                    {
                      "id": 689,
                      "name": "SOHM",
                      "nameLocation": "7450:4:0",
                      "nodeType": "EnumValue",
                      "src": "7450:4:0"
                    }
                  ],
                  "name": "MANAGING",
                  "nameLocation": "7258:8:0",
                  "nodeType": "EnumDefinition",
                  "src": "7253:205:0"
                },
                {
                  "constant": false,
                  "functionSelector": "a6c41fec",
                  "id": 692,
                  "mutability": "immutable",
                  "name": "OHM",
                  "nameLocation": "7487:3:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 2313,
                  "src": "7462:28:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 691,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7462:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "d07f390f",
                  "id": 694,
                  "mutability": "immutable",
                  "name": "blocksNeededForQueue",
                  "nameLocation": "7519:20:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 2313,
                  "src": "7494:45:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 693,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7494:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "d031370b",
                  "id": 697,
                  "mutability": "mutable",
                  "name": "reserveTokens",
                  "nameLocation": "7561:13:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 2313,
                  "src": "7544:30:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_storage",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 695,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "7544:7:0",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 696,
                    "nodeType": "ArrayTypeName",
                    "src": "7544:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "68c31dd5",
                  "id": 701,
                  "mutability": "mutable",
                  "name": "isReserveToken",
                  "nameLocation": "7648:14:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 2313,
                  "src": "7616:46:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                    "typeString": "mapping(address => bool)"
                  },
                  "typeName": {
                    "id": 700,
                    "keyType": {
                      "id": 698,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "7624:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "7616:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                      "typeString": "mapping(address => bool)"
                    },
                    "valueType": {
                      "id": 699,
                      "name": "bool",
                      "nodeType": "ElementaryTypeName",
                      "src": "7635:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "788c6c01",
                  "id": 705,
                  "mutability": "mutable",
                  "name": "reserveTokenQueue",
                  "nameLocation": "7701:17:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 2313,
                  "src": "7666:52:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                    "typeString": "mapping(address => uint256)"
                  },
                  "typeName": {
                    "id": 704,
                    "keyType": {
                      "id": 702,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "7674:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "7666:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                      "typeString": "mapping(address => uint256)"
                    },
                    "valueType": {
                      "id": 703,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "7685:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "6b5e40a7",
                  "id": 708,
                  "mutability": "mutable",
                  "name": "reserveDepositors",
                  "nameLocation": "7770:17:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 2313,
                  "src": "7753:34:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_storage",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 706,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "7753:7:0",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 707,
                    "nodeType": "ArrayTypeName",
                    "src": "7753:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "124154ca",
                  "id": 712,
                  "mutability": "mutable",
                  "name": "isReserveDepositor",
                  "nameLocation": "7879:18:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 2313,
                  "src": "7847:50:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                    "typeString": "mapping(address => bool)"
                  },
                  "typeName": {
                    "id": 711,
                    "keyType": {
                      "id": 709,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "7855:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "7847:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                      "typeString": "mapping(address => bool)"
                    },
                    "valueType": {
                      "id": 710,
                      "name": "bool",
                      "nodeType": "ElementaryTypeName",
                      "src": "7866:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "932cc8c3",
                  "id": 716,
                  "mutability": "mutable",
                  "name": "reserveDepositorQueue",
                  "nameLocation": "7936:21:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 2313,
                  "src": "7901:56:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                    "typeString": "mapping(address => uint256)"
                  },
                  "typeName": {
                    "id": 715,
                    "keyType": {
                      "id": 713,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "7909:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "7901:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                      "typeString": "mapping(address => uint256)"
                    },
                    "valueType": {
                      "id": 714,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "7920:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "437f7912",
                  "id": 719,
                  "mutability": "mutable",
                  "name": "reserveSpenders",
                  "nameLocation": "8009:15:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 2313,
                  "src": "7992:32:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_storage",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 717,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "7992:7:0",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 718,
                    "nodeType": "ArrayTypeName",
                    "src": "7992:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "87d67dff",
                  "id": 723,
                  "mutability": "mutable",
                  "name": "isReserveSpender",
                  "nameLocation": "8116:16:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 2313,
                  "src": "8084:48:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                    "typeString": "mapping(address => bool)"
                  },
                  "typeName": {
                    "id": 722,
                    "keyType": {
                      "id": 720,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "8092:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "8084:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                      "typeString": "mapping(address => bool)"
                    },
                    "valueType": {
                      "id": 721,
                      "name": "bool",
                      "nodeType": "ElementaryTypeName",
                      "src": "8103:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "c24ad43e",
                  "id": 727,
                  "mutability": "mutable",
                  "name": "reserveSpenderQueue",
                  "nameLocation": "8171:19:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 2313,
                  "src": "8136:54:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                    "typeString": "mapping(address => uint256)"
                  },
                  "typeName": {
                    "id": 726,
                    "keyType": {
                      "id": 724,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "8144:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "8136:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                      "typeString": "mapping(address => uint256)"
                    },
                    "valueType": {
                      "id": 725,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "8155:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "fd1ec010",
                  "id": 730,
                  "mutability": "mutable",
                  "name": "liquidityTokens",
                  "nameLocation": "8242:15:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 2313,
                  "src": "8225:32:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_storage",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 728,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "8225:7:0",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 729,
                    "nodeType": "ArrayTypeName",
                    "src": "8225:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "a569e571",
                  "id": 734,
                  "mutability": "mutable",
                  "name": "isLiquidityToken",
                  "nameLocation": "8331:16:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 2313,
                  "src": "8299:48:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                    "typeString": "mapping(address => bool)"
                  },
                  "typeName": {
                    "id": 733,
                    "keyType": {
                      "id": 731,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "8307:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "8299:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                      "typeString": "mapping(address => bool)"
                    },
                    "valueType": {
                      "id": 732,
                      "name": "bool",
                      "nodeType": "ElementaryTypeName",
                      "src": "8318:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "8f59c727",
                  "id": 738,
                  "mutability": "mutable",
                  "name": "LiquidityTokenQueue",
                  "nameLocation": "8386:19:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 2313,
                  "src": "8351:54:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                    "typeString": "mapping(address => uint256)"
                  },
                  "typeName": {
                    "id": 737,
                    "keyType": {
                      "id": 735,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "8359:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "8351:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                      "typeString": "mapping(address => uint256)"
                    },
                    "valueType": {
                      "id": 736,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "8370:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "8f6a7b57",
                  "id": 741,
                  "mutability": "mutable",
                  "name": "liquidityDepositors",
                  "nameLocation": "8457:19:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 2313,
                  "src": "8440:36:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_storage",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 739,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "8440:7:0",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 740,
                    "nodeType": "ArrayTypeName",
                    "src": "8440:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "a1210a2d",
                  "id": 745,
                  "mutability": "mutable",
                  "name": "isLiquidityDepositor",
                  "nameLocation": "8568:20:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 2313,
                  "src": "8536:52:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                    "typeString": "mapping(address => bool)"
                  },
                  "typeName": {
                    "id": 744,
                    "keyType": {
                      "id": 742,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "8544:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "8536:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                      "typeString": "mapping(address => bool)"
                    },
                    "valueType": {
                      "id": 743,
                      "name": "bool",
                      "nodeType": "ElementaryTypeName",
                      "src": "8555:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "fff9ee87",
                  "id": 749,
                  "mutability": "mutable",
                  "name": "LiquidityDepositorQueue",
                  "nameLocation": "8627:23:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 2313,
                  "src": "8592:58:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                    "typeString": "mapping(address => uint256)"
                  },
                  "typeName": {
                    "id": 748,
                    "keyType": {
                      "id": 746,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "8600:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "8592:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                      "typeString": "mapping(address => uint256)"
                    },
                    "valueType": {
                      "id": 747,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "8611:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "1af4da70",
                  "id": 753,
                  "mutability": "mutable",
                  "name": "bondCalculator",
                  "nameLocation": "8720:14:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 2313,
                  "src": "8685:49:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                    "typeString": "mapping(address => address)"
                  },
                  "typeName": {
                    "id": 752,
                    "keyType": {
                      "id": 750,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "8693:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "8685:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                      "typeString": "mapping(address => address)"
                    },
                    "valueType": {
                      "id": 751,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "8704:7:0",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "0619aff1",
                  "id": 756,
                  "mutability": "mutable",
                  "name": "reserveManagers",
                  "nameLocation": "8795:15:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 2313,
                  "src": "8778:32:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_storage",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 754,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "8778:7:0",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 755,
                    "nodeType": "ArrayTypeName",
                    "src": "8778:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "ebd83cd8",
                  "id": 760,
                  "mutability": "mutable",
                  "name": "isReserveManager",
                  "nameLocation": "8902:16:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 2313,
                  "src": "8870:48:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                    "typeString": "mapping(address => bool)"
                  },
                  "typeName": {
                    "id": 759,
                    "keyType": {
                      "id": 757,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "8878:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "8870:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                      "typeString": "mapping(address => bool)"
                    },
                    "valueType": {
                      "id": 758,
                      "name": "bool",
                      "nodeType": "ElementaryTypeName",
                      "src": "8889:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "b1bd38b0",
                  "id": 764,
                  "mutability": "mutable",
                  "name": "ReserveManagerQueue",
                  "nameLocation": "8957:19:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 2313,
                  "src": "8922:54:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                    "typeString": "mapping(address => uint256)"
                  },
                  "typeName": {
                    "id": 763,
                    "keyType": {
                      "id": 761,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "8930:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "8922:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                      "typeString": "mapping(address => uint256)"
                    },
                    "valueType": {
                      "id": 762,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "8941:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "70a0502a",
                  "id": 767,
                  "mutability": "mutable",
                  "name": "liquidityManagers",
                  "nameLocation": "9028:17:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 2313,
                  "src": "9011:34:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_storage",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 765,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "9011:7:0",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 766,
                    "nodeType": "ArrayTypeName",
                    "src": "9011:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "df89b344",
                  "id": 771,
                  "mutability": "mutable",
                  "name": "isLiquidityManager",
                  "nameLocation": "9137:18:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 2313,
                  "src": "9105:50:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                    "typeString": "mapping(address => bool)"
                  },
                  "typeName": {
                    "id": 770,
                    "keyType": {
                      "id": 768,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "9113:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "9105:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                      "typeString": "mapping(address => bool)"
                    },
                    "valueType": {
                      "id": 769,
                      "name": "bool",
                      "nodeType": "ElementaryTypeName",
                      "src": "9124:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "ab319c9a",
                  "id": 775,
                  "mutability": "mutable",
                  "name": "LiquidityManagerQueue",
                  "nameLocation": "9194:21:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 2313,
                  "src": "9159:56:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                    "typeString": "mapping(address => uint256)"
                  },
                  "typeName": {
                    "id": 774,
                    "keyType": {
                      "id": 772,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "9167:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "9159:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                      "typeString": "mapping(address => uint256)"
                    },
                    "valueType": {
                      "id": 773,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "9178:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "869871bf",
                  "id": 778,
                  "mutability": "mutable",
                  "name": "debtors",
                  "nameLocation": "9267:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 2313,
                  "src": "9250:24:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_storage",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 776,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "9250:7:0",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 777,
                    "nodeType": "ArrayTypeName",
                    "src": "9250:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "ee4e19a1",
                  "id": 782,
                  "mutability": "mutable",
                  "name": "isDebtor",
                  "nameLocation": "9366:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 2313,
                  "src": "9334:40:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                    "typeString": "mapping(address => bool)"
                  },
                  "typeName": {
                    "id": 781,
                    "keyType": {
                      "id": 779,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "9342:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "9334:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                      "typeString": "mapping(address => bool)"
                    },
                    "valueType": {
                      "id": 780,
                      "name": "bool",
                      "nodeType": "ElementaryTypeName",
                      "src": "9353:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "cd85641a",
                  "id": 786,
                  "mutability": "mutable",
                  "name": "debtorQueue",
                  "nameLocation": "9413:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 2313,
                  "src": "9378:46:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                    "typeString": "mapping(address => uint256)"
                  },
                  "typeName": {
                    "id": 785,
                    "keyType": {
                      "id": 783,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "9386:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "9378:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                      "typeString": "mapping(address => uint256)"
                    },
                    "valueType": {
                      "id": 784,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "9397:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "094a8651",
                  "id": 790,
                  "mutability": "mutable",
                  "name": "debtorBalance",
                  "nameLocation": "9493:13:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 2313,
                  "src": "9458:48:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                    "typeString": "mapping(address => uint256)"
                  },
                  "typeName": {
                    "id": 789,
                    "keyType": {
                      "id": 787,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "9466:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "9458:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                      "typeString": "mapping(address => uint256)"
                    },
                    "valueType": {
                      "id": 788,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "9477:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "b5b1d560",
                  "id": 793,
                  "mutability": "mutable",
                  "name": "rewardManagers",
                  "nameLocation": "9528:14:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 2313,
                  "src": "9511:31:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_storage",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 791,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "9511:7:0",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 792,
                    "nodeType": "ArrayTypeName",
                    "src": "9511:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "4e83423c",
                  "id": 797,
                  "mutability": "mutable",
                  "name": "isRewardManager",
                  "nameLocation": "9634:15:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 2313,
                  "src": "9602:47:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                    "typeString": "mapping(address => bool)"
                  },
                  "typeName": {
                    "id": 796,
                    "keyType": {
                      "id": 794,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "9610:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "9602:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                      "typeString": "mapping(address => bool)"
                    },
                    "valueType": {
                      "id": 795,
                      "name": "bool",
                      "nodeType": "ElementaryTypeName",
                      "src": "9621:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "fb939588",
                  "id": 801,
                  "mutability": "mutable",
                  "name": "rewardManagerQueue",
                  "nameLocation": "9688:18:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 2313,
                  "src": "9653:53:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                    "typeString": "mapping(address => uint256)"
                  },
                  "typeName": {
                    "id": 800,
                    "keyType": {
                      "id": 798,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "9661:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "9653:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                      "typeString": "mapping(address => uint256)"
                    },
                    "valueType": {
                      "id": 799,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "9672:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "15079925",
                  "id": 803,
                  "mutability": "mutable",
                  "name": "sOHM",
                  "nameLocation": "9756:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 2313,
                  "src": "9741:19:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 802,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9741:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "2789de37",
                  "id": 805,
                  "mutability": "mutable",
                  "name": "sOHMQueue",
                  "nameLocation": "9779:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 2313,
                  "src": "9764:24:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 804,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9764:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "8f840ddd",
                  "id": 807,
                  "mutability": "mutable",
                  "name": "totalReserves",
                  "nameLocation": "9841:13:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 2313,
                  "src": "9826:28:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 806,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9826:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "fc7b9c18",
                  "id": 809,
                  "mutability": "mutable",
                  "name": "totalDebt",
                  "nameLocation": "9906:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 2313,
                  "src": "9891:24:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 808,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9891:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 861,
                    "nodeType": "Block",
                    "src": "10049:319:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 826,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 821,
                                "name": "_OHM",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 811,
                                "src": "10063:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 824,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "10079:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 823,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "10071:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 822,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "10071:7:0",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 825,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "10071:10:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "10063:18:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 820,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "10055:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 827,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10055:27:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 828,
                        "nodeType": "ExpressionStatement",
                        "src": "10055:27:0"
                      },
                      {
                        "expression": {
                          "id": 831,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 829,
                            "name": "OHM",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 692,
                            "src": "10088:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 830,
                            "name": "_OHM",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 811,
                            "src": "10094:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "10088:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 832,
                        "nodeType": "ExpressionStatement",
                        "src": "10088:10:0"
                      },
                      {
                        "expression": {
                          "id": 837,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 833,
                              "name": "isReserveToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 701,
                              "src": "10105:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 835,
                            "indexExpression": {
                              "id": 834,
                              "name": "_DAI",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 813,
                              "src": "10120:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "10105:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 836,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10128:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "10105:27:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 838,
                        "nodeType": "ExpressionStatement",
                        "src": "10105:27:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 842,
                              "name": "_DAI",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 813,
                              "src": "10157:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 839,
                              "name": "reserveTokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 697,
                              "src": "10138:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 841,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "10138:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                              "typeString": "function (address[] storage pointer,address)"
                            }
                          },
                          "id": 843,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10138:24:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 844,
                        "nodeType": "ExpressionStatement",
                        "src": "10138:24:0"
                      },
                      {
                        "expression": {
                          "id": 849,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 845,
                              "name": "isReserveToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 701,
                              "src": "10169:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 847,
                            "indexExpression": {
                              "id": 846,
                              "name": "_Frax",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 815,
                              "src": "10184:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "10169:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 848,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10193:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "10169:28:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 850,
                        "nodeType": "ExpressionStatement",
                        "src": "10169:28:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 854,
                              "name": "_Frax",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 815,
                              "src": "10222:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 851,
                              "name": "reserveTokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 697,
                              "src": "10203:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 853,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "10203:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                              "typeString": "function (address[] storage pointer,address)"
                            }
                          },
                          "id": 855,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10203:25:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 856,
                        "nodeType": "ExpressionStatement",
                        "src": "10203:25:0"
                      },
                      {
                        "expression": {
                          "id": 859,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 857,
                            "name": "blocksNeededForQueue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 694,
                            "src": "10319:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 858,
                            "name": "_blocksNeededForQueue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 817,
                            "src": "10342:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10319:44:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 860,
                        "nodeType": "ExpressionStatement",
                        "src": "10319:44:0"
                      }
                    ]
                  },
                  "id": 862,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 818,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 811,
                        "mutability": "mutable",
                        "name": "_OHM",
                        "nameLocation": "9945:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 862,
                        "src": "9937:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 810,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9937:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 813,
                        "mutability": "mutable",
                        "name": "_DAI",
                        "nameLocation": "9963:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 862,
                        "src": "9955:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 812,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9955:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 815,
                        "mutability": "mutable",
                        "name": "_Frax",
                        "nameLocation": "9981:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 862,
                        "src": "9973:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 814,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9973:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 817,
                        "mutability": "mutable",
                        "name": "_blocksNeededForQueue",
                        "nameLocation": "10023:21:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 862,
                        "src": "10015:29:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 816,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10015:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9931:117:0"
                  },
                  "returnParameters": {
                    "id": 819,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "10049:0:0"
                  },
                  "scope": 2313,
                  "src": "9920:448:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 964,
                    "nodeType": "Block",
                    "src": "10682:696:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 881,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "id": 875,
                                  "name": "isReserveToken",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 701,
                                  "src": "10696:14:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                    "typeString": "mapping(address => bool)"
                                  }
                                },
                                "id": 877,
                                "indexExpression": {
                                  "id": 876,
                                  "name": "_token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 867,
                                  "src": "10711:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "10696:22:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "||",
                              "rightExpression": {
                                "baseExpression": {
                                  "id": 878,
                                  "name": "isLiquidityToken",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 734,
                                  "src": "10722:16:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                    "typeString": "mapping(address => bool)"
                                  }
                                },
                                "id": 880,
                                "indexExpression": {
                                  "id": 879,
                                  "name": "_token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 867,
                                  "src": "10739:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "10722:24:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "10696:50:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e6f74206163636570746564",
                              "id": 882,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10748:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_fadc5f22060668047a4e911336f5d0734fc86647a30251cd7b6b0511b7c2b797",
                                "typeString": "literal_string \"Not accepted\""
                              },
                              "value": "Not accepted"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_fadc5f22060668047a4e911336f5d0734fc86647a30251cd7b6b0511b7c2b797",
                                "typeString": "literal_string \"Not accepted\""
                              }
                            ],
                            "id": 874,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "10688:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 883,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10688:75:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 884,
                        "nodeType": "ExpressionStatement",
                        "src": "10688:75:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 889,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "10801:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 890,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "10801:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 893,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "10821:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_MockOlympusTreasury_$2313",
                                    "typeString": "contract MockOlympusTreasury"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_MockOlympusTreasury_$2313",
                                    "typeString": "contract MockOlympusTreasury"
                                  }
                                ],
                                "id": 892,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "10813:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 891,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "10813:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 894,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10813:13:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 895,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 865,
                              "src": "10828:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 886,
                                  "name": "_token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 867,
                                  "src": "10776:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 885,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 472,
                                "src": "10769:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$472_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 887,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10769:14:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$472",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 888,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 527,
                            "src": "10769:31:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$472_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$472_$",
                              "typeString": "function (contract IERC20,address,address,uint256)"
                            }
                          },
                          "id": 896,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10769:67:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 897,
                        "nodeType": "ExpressionStatement",
                        "src": "10769:67:0"
                      },
                      {
                        "condition": {
                          "baseExpression": {
                            "id": 898,
                            "name": "isReserveToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 701,
                            "src": "10847:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 900,
                          "indexExpression": {
                            "id": 899,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 867,
                            "src": "10862:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "10847:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 918,
                          "nodeType": "Block",
                          "src": "10947:72:0",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "baseExpression": {
                                      "id": 911,
                                      "name": "isLiquidityDepositor",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 745,
                                      "src": "10963:20:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                        "typeString": "mapping(address => bool)"
                                      }
                                    },
                                    "id": 914,
                                    "indexExpression": {
                                      "expression": {
                                        "id": 912,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -15,
                                        "src": "10984:3:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 913,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "sender",
                                      "nodeType": "MemberAccess",
                                      "src": "10984:10:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "10963:32:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "4e6f7420617070726f766564",
                                    "id": 915,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "10997:14:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_70356c467a9713064077b7fa0ff1a074c93b1f7c48415be181b9cd799b628361",
                                      "typeString": "literal_string \"Not approved\""
                                    },
                                    "value": "Not approved"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_70356c467a9713064077b7fa0ff1a074c93b1f7c48415be181b9cd799b628361",
                                      "typeString": "literal_string \"Not approved\""
                                    }
                                  ],
                                  "id": 910,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "10955:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 916,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "10955:57:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 917,
                              "nodeType": "ExpressionStatement",
                              "src": "10955:57:0"
                            }
                          ]
                        },
                        "id": 919,
                        "nodeType": "IfStatement",
                        "src": "10843:176:0",
                        "trueBody": {
                          "id": 909,
                          "nodeType": "Block",
                          "src": "10871:70:0",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "baseExpression": {
                                      "id": 902,
                                      "name": "isReserveDepositor",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 712,
                                      "src": "10887:18:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                        "typeString": "mapping(address => bool)"
                                      }
                                    },
                                    "id": 905,
                                    "indexExpression": {
                                      "expression": {
                                        "id": 903,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -15,
                                        "src": "10906:3:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 904,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "sender",
                                      "nodeType": "MemberAccess",
                                      "src": "10906:10:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "10887:30:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "4e6f7420617070726f766564",
                                    "id": 906,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "10919:14:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_70356c467a9713064077b7fa0ff1a074c93b1f7c48415be181b9cd799b628361",
                                      "typeString": "literal_string \"Not approved\""
                                    },
                                    "value": "Not approved"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_70356c467a9713064077b7fa0ff1a074c93b1f7c48415be181b9cd799b628361",
                                      "typeString": "literal_string \"Not approved\""
                                    }
                                  ],
                                  "id": 901,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "10879:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 907,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "10879:55:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 908,
                              "nodeType": "ExpressionStatement",
                              "src": "10879:55:0"
                            }
                          ]
                        }
                      },
                      {
                        "assignments": [
                          921
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 921,
                            "mutability": "mutable",
                            "name": "value",
                            "nameLocation": "11033:5:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 964,
                            "src": "11025:13:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 920,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "11025:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 926,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 923,
                              "name": "_token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 867,
                              "src": "11054:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 924,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 865,
                              "src": "11062:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 922,
                            "name": "valueOfToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1555,
                            "src": "11041:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (address,uint256) view returns (uint256)"
                            }
                          },
                          "id": 925,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11041:29:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "11025:45:0"
                      },
                      {
                        "expression": {
                          "components": [
                            {
                              "id": 927,
                              "name": "_token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 867,
                              "src": "11077:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 928,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 865,
                              "src": "11085:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 929,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "11076:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
                            "typeString": "tuple(address,uint256)"
                          }
                        },
                        "id": 930,
                        "nodeType": "ExpressionStatement",
                        "src": "11076:17:0"
                      },
                      {
                        "expression": {
                          "id": 936,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 931,
                            "name": "send_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 872,
                            "src": "11167:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 934,
                                "name": "_profit",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 869,
                                "src": "11185:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 932,
                                "name": "value",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 921,
                                "src": "11175:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 933,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sub",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 42,
                              "src": "11175:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 935,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11175:18:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "11167:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 937,
                        "nodeType": "ExpressionStatement",
                        "src": "11167:26:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 942,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "11224:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 943,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "11224:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 944,
                              "name": "send_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 872,
                              "src": "11236:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 939,
                                  "name": "OHM",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 692,
                                  "src": "11214:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 938,
                                "name": "IERC20Mintable",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 578,
                                "src": "11199:14:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20Mintable_$578_$",
                                  "typeString": "type(contract IERC20Mintable)"
                                }
                              },
                              "id": 940,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11199:19:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20Mintable_$578",
                                "typeString": "contract IERC20Mintable"
                              }
                            },
                            "id": 941,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mint",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 577,
                            "src": "11199:24:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256) external"
                            }
                          },
                          "id": 945,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11199:43:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 946,
                        "nodeType": "ExpressionStatement",
                        "src": "11199:43:0"
                      },
                      {
                        "expression": {
                          "id": 952,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 947,
                            "name": "totalReserves",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 807,
                            "src": "11249:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 950,
                                "name": "value",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 921,
                                "src": "11283:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 948,
                                "name": "totalReserves",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 807,
                                "src": "11265:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 949,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "add",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 26,
                              "src": "11265:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 951,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11265:24:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "11249:40:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 953,
                        "nodeType": "ExpressionStatement",
                        "src": "11249:40:0"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 955,
                              "name": "totalReserves",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 807,
                              "src": "11316:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 954,
                            "name": "ReservesUpdated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 651,
                            "src": "11300:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 956,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11300:30:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 957,
                        "nodeType": "EmitStatement",
                        "src": "11295:35:0"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 959,
                              "name": "_token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 867,
                              "src": "11350:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 960,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 865,
                              "src": "11358:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 961,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 921,
                              "src": "11367:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 958,
                            "name": "Deposit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 613,
                            "src": "11342:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256,uint256)"
                            }
                          },
                          "id": 962,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11342:31:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 963,
                        "nodeType": "EmitStatement",
                        "src": "11337:36:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 863,
                    "nodeType": "StructuredDocumentation",
                    "src": "10372:191:0",
                    "text": "@notice allow approved address to deposit an asset for OHM\n@param _amount uint\n@param _token address\n@param _profit uint\n@return send_ uint"
                  },
                  "functionSelector": "bc157ac1",
                  "id": 965,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "deposit",
                  "nameLocation": "10575:7:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 870,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 865,
                        "mutability": "mutable",
                        "name": "_amount",
                        "nameLocation": "10596:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 965,
                        "src": "10588:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 864,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10588:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 867,
                        "mutability": "mutable",
                        "name": "_token",
                        "nameLocation": "10617:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 965,
                        "src": "10609:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 866,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "10609:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 869,
                        "mutability": "mutable",
                        "name": "_profit",
                        "nameLocation": "10637:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 965,
                        "src": "10629:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 868,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10629:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "10582:66:0"
                  },
                  "returnParameters": {
                    "id": 873,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 872,
                        "mutability": "mutable",
                        "name": "send_",
                        "nameLocation": "10675:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 965,
                        "src": "10667:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 871,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10667:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "10666:15:0"
                  },
                  "scope": 2313,
                  "src": "10566:812:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1032,
                    "nodeType": "Block",
                    "src": "11578:459:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 974,
                                "name": "isReserveToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 701,
                                "src": "11592:14:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                  "typeString": "mapping(address => bool)"
                                }
                              },
                              "id": 976,
                              "indexExpression": {
                                "id": 975,
                                "name": "_token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 970,
                                "src": "11607:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "11592:22:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e6f74206163636570746564",
                              "id": 977,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11616:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_fadc5f22060668047a4e911336f5d0734fc86647a30251cd7b6b0511b7c2b797",
                                "typeString": "literal_string \"Not accepted\""
                              },
                              "value": "Not accepted"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_fadc5f22060668047a4e911336f5d0734fc86647a30251cd7b6b0511b7c2b797",
                                "typeString": "literal_string \"Not accepted\""
                              }
                            ],
                            "id": 973,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "11584:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 978,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11584:47:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 979,
                        "nodeType": "ExpressionStatement",
                        "src": "11584:47:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 986,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "id": 981,
                                  "name": "isReserveSpender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 723,
                                  "src": "11690:16:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                    "typeString": "mapping(address => bool)"
                                  }
                                },
                                "id": 984,
                                "indexExpression": {
                                  "expression": {
                                    "id": 982,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "11707:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 983,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "11707:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "11690:28:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "74727565",
                                "id": 985,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "11722:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              },
                              "src": "11690:36:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e6f7420617070726f766564",
                              "id": 987,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11728:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_70356c467a9713064077b7fa0ff1a074c93b1f7c48415be181b9cd799b628361",
                                "typeString": "literal_string \"Not approved\""
                              },
                              "value": "Not approved"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_70356c467a9713064077b7fa0ff1a074c93b1f7c48415be181b9cd799b628361",
                                "typeString": "literal_string \"Not approved\""
                              }
                            ],
                            "id": 980,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "11682:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 988,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11682:61:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 989,
                        "nodeType": "ExpressionStatement",
                        "src": "11682:61:0"
                      },
                      {
                        "assignments": [
                          991
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 991,
                            "mutability": "mutable",
                            "name": "value",
                            "nameLocation": "11758:5:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 1032,
                            "src": "11750:13:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 990,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "11750:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 996,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 993,
                              "name": "_token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 970,
                              "src": "11779:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 994,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 968,
                              "src": "11787:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 992,
                            "name": "valueOfToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1555,
                            "src": "11766:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (address,uint256) view returns (uint256)"
                            }
                          },
                          "id": 995,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11766:29:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "11750:45:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1001,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "11825:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1002,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "11825:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1003,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 991,
                              "src": "11837:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 998,
                                  "name": "OHM",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 692,
                                  "src": "11811:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 997,
                                "name": "IOHMERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 586,
                                "src": "11801:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IOHMERC20_$586_$",
                                  "typeString": "type(contract IOHMERC20)"
                                }
                              },
                              "id": 999,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11801:14:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IOHMERC20_$586",
                                "typeString": "contract IOHMERC20"
                              }
                            },
                            "id": 1000,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "burnFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 585,
                            "src": "11801:23:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256) external"
                            }
                          },
                          "id": 1004,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11801:42:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1005,
                        "nodeType": "ExpressionStatement",
                        "src": "11801:42:0"
                      },
                      {
                        "expression": {
                          "id": 1011,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1006,
                            "name": "totalReserves",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 807,
                            "src": "11850:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 1009,
                                "name": "value",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 991,
                                "src": "11884:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 1007,
                                "name": "totalReserves",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 807,
                                "src": "11866:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1008,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sub",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 42,
                              "src": "11866:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 1010,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11866:24:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "11850:40:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1012,
                        "nodeType": "ExpressionStatement",
                        "src": "11850:40:0"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1014,
                              "name": "totalReserves",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 807,
                              "src": "11917:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1013,
                            "name": "ReservesUpdated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 651,
                            "src": "11901:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 1015,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11901:30:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1016,
                        "nodeType": "EmitStatement",
                        "src": "11896:35:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1021,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "11966:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1022,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "11966:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1023,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 968,
                              "src": "11978:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1018,
                                  "name": "_token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 970,
                                  "src": "11945:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1017,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 472,
                                "src": "11938:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$472_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 1019,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11938:14:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$472",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 1020,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 501,
                            "src": "11938:27:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$472_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$472_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 1024,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11938:48:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1025,
                        "nodeType": "ExpressionStatement",
                        "src": "11938:48:0"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1027,
                              "name": "_token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 970,
                              "src": "12009:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1028,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 968,
                              "src": "12017:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1029,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 991,
                              "src": "12026:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1026,
                            "name": "Withdrawal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 621,
                            "src": "11998:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256,uint256)"
                            }
                          },
                          "id": 1030,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11998:34:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1031,
                        "nodeType": "EmitStatement",
                        "src": "11993:39:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 966,
                    "nodeType": "StructuredDocumentation",
                    "src": "11382:133:0",
                    "text": "@notice allow approved address to burn OHM for reserves\n@param _amount uint\n@param _token address"
                  },
                  "functionSelector": "00f714ce",
                  "id": 1033,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "withdraw",
                  "nameLocation": "11527:8:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 971,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 968,
                        "mutability": "mutable",
                        "name": "_amount",
                        "nameLocation": "11544:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1033,
                        "src": "11536:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 967,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "11536:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 970,
                        "mutability": "mutable",
                        "name": "_token",
                        "nameLocation": "11561:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1033,
                        "src": "11553:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 969,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "11553:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "11535:33:0"
                  },
                  "returnParameters": {
                    "id": 972,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "11578:0:0"
                  },
                  "scope": 2313,
                  "src": "11518:519:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1138,
                    "nodeType": "Block",
                    "src": "12232:698:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 1042,
                                "name": "isDebtor",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 782,
                                "src": "12246:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                  "typeString": "mapping(address => bool)"
                                }
                              },
                              "id": 1045,
                              "indexExpression": {
                                "expression": {
                                  "id": 1043,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "12255:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1044,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "12255:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "12246:20:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e6f7420617070726f766564",
                              "id": 1046,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12268:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_70356c467a9713064077b7fa0ff1a074c93b1f7c48415be181b9cd799b628361",
                                "typeString": "literal_string \"Not approved\""
                              },
                              "value": "Not approved"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_70356c467a9713064077b7fa0ff1a074c93b1f7c48415be181b9cd799b628361",
                                "typeString": "literal_string \"Not approved\""
                              }
                            ],
                            "id": 1041,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "12238:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1047,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12238:45:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1048,
                        "nodeType": "ExpressionStatement",
                        "src": "12238:45:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 1050,
                                "name": "isReserveToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 701,
                                "src": "12297:14:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                  "typeString": "mapping(address => bool)"
                                }
                              },
                              "id": 1052,
                              "indexExpression": {
                                "id": 1051,
                                "name": "_token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1038,
                                "src": "12312:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "12297:22:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e6f74206163636570746564",
                              "id": 1053,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12321:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_fadc5f22060668047a4e911336f5d0734fc86647a30251cd7b6b0511b7c2b797",
                                "typeString": "literal_string \"Not accepted\""
                              },
                              "value": "Not accepted"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_fadc5f22060668047a4e911336f5d0734fc86647a30251cd7b6b0511b7c2b797",
                                "typeString": "literal_string \"Not accepted\""
                              }
                            ],
                            "id": 1049,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "12289:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1054,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12289:47:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1055,
                        "nodeType": "ExpressionStatement",
                        "src": "12289:47:0"
                      },
                      {
                        "assignments": [
                          1057
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1057,
                            "mutability": "mutable",
                            "name": "value",
                            "nameLocation": "12351:5:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 1138,
                            "src": "12343:13:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1056,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "12343:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1062,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 1059,
                              "name": "_token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1038,
                              "src": "12372:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1060,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1036,
                              "src": "12380:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1058,
                            "name": "valueOfToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1555,
                            "src": "12359:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (address,uint256) view returns (uint256)"
                            }
                          },
                          "id": 1061,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12359:29:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "12343:45:0"
                      },
                      {
                        "assignments": [
                          1064
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1064,
                            "mutability": "mutable",
                            "name": "maximumDebt",
                            "nameLocation": "12403:11:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 1138,
                            "src": "12395:19:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1063,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "12395:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1072,
                        "initialValue": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1069,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "12440:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1070,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "12440:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1066,
                                  "name": "sOHM",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 803,
                                  "src": "12424:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1065,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 472,
                                "src": "12417:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$472_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 1067,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12417:12:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$472",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 1068,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 421,
                            "src": "12417:22:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 1071,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12417:34:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "12395:56:0"
                      },
                      {
                        "assignments": [
                          1074
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1074,
                            "mutability": "mutable",
                            "name": "availableDebt",
                            "nameLocation": "12502:13:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 1138,
                            "src": "12494:21:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1073,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "12494:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1082,
                        "initialValue": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 1077,
                                "name": "debtorBalance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 790,
                                "src": "12534:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                  "typeString": "mapping(address => uint256)"
                                }
                              },
                              "id": 1080,
                              "indexExpression": {
                                "expression": {
                                  "id": 1078,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "12548:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1079,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "12548:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "12534:25:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 1075,
                              "name": "maximumDebt",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1064,
                              "src": "12518:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1076,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sub",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 42,
                            "src": "12518:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 1081,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12518:42:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "12494:66:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1086,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1084,
                                "name": "value",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1057,
                                "src": "12574:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "id": 1085,
                                "name": "availableDebt",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1074,
                                "src": "12583:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "12574:22:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "457863656564732064656274206c696d6974",
                              "id": 1087,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12598:20:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_f193cc9709e57cd43c6930e1643edb6922168fe48dacb7425cd34c9438ee5b15",
                                "typeString": "literal_string \"Exceeds debt limit\""
                              },
                              "value": "Exceeds debt limit"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_f193cc9709e57cd43c6930e1643edb6922168fe48dacb7425cd34c9438ee5b15",
                                "typeString": "literal_string \"Exceeds debt limit\""
                              }
                            ],
                            "id": 1083,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "12566:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1088,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12566:53:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1089,
                        "nodeType": "ExpressionStatement",
                        "src": "12566:53:0"
                      },
                      {
                        "expression": {
                          "id": 1101,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1090,
                              "name": "debtorBalance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 790,
                              "src": "12626:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 1093,
                            "indexExpression": {
                              "expression": {
                                "id": 1091,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "12640:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1092,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "12640:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "12626:25:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 1099,
                                "name": "value",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1057,
                                "src": "12684:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "baseExpression": {
                                  "id": 1094,
                                  "name": "debtorBalance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 790,
                                  "src": "12654:13:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 1097,
                                "indexExpression": {
                                  "expression": {
                                    "id": 1095,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "12668:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 1096,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "12668:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "12654:25:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1098,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "add",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 26,
                              "src": "12654:29:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 1100,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12654:36:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "12626:64:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1102,
                        "nodeType": "ExpressionStatement",
                        "src": "12626:64:0"
                      },
                      {
                        "expression": {
                          "id": 1108,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1103,
                            "name": "totalDebt",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 809,
                            "src": "12696:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 1106,
                                "name": "value",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1057,
                                "src": "12722:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 1104,
                                "name": "totalDebt",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 809,
                                "src": "12708:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1105,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "add",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 26,
                              "src": "12708:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 1107,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12708:20:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "12696:32:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1109,
                        "nodeType": "ExpressionStatement",
                        "src": "12696:32:0"
                      },
                      {
                        "expression": {
                          "id": 1115,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1110,
                            "name": "totalReserves",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 807,
                            "src": "12735:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 1113,
                                "name": "value",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1057,
                                "src": "12769:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 1111,
                                "name": "totalReserves",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 807,
                                "src": "12751:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1112,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sub",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 42,
                              "src": "12751:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 1114,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12751:24:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "12735:40:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1116,
                        "nodeType": "ExpressionStatement",
                        "src": "12735:40:0"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1118,
                              "name": "totalReserves",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 807,
                              "src": "12802:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1117,
                            "name": "ReservesUpdated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 651,
                            "src": "12786:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 1119,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12786:30:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1120,
                        "nodeType": "EmitStatement",
                        "src": "12781:35:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1125,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "12847:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1126,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "12847:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1127,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1036,
                              "src": "12859:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1122,
                                  "name": "_token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1038,
                                  "src": "12830:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1121,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 472,
                                "src": "12823:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$472_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 1123,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12823:14:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$472",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 1124,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 430,
                            "src": "12823:23:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 1128,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12823:44:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1129,
                        "nodeType": "ExpressionStatement",
                        "src": "12823:44:0"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1131,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "12890:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1132,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "12890:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1133,
                              "name": "_token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1038,
                              "src": "12902:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1134,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1036,
                              "src": "12910:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1135,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1057,
                              "src": "12919:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1130,
                            "name": "CreateDebt",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 631,
                            "src": "12879:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256,uint256)"
                            }
                          },
                          "id": 1136,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12879:46:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1137,
                        "nodeType": "EmitStatement",
                        "src": "12874:51:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1034,
                    "nodeType": "StructuredDocumentation",
                    "src": "12041:127:0",
                    "text": "@notice allow approved address to borrow reserves\n@param _amount uint\n@param _token address"
                  },
                  "functionSelector": "12422d23",
                  "id": 1139,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "incurDebt",
                  "nameLocation": "12180:9:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1039,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1036,
                        "mutability": "mutable",
                        "name": "_amount",
                        "nameLocation": "12198:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1139,
                        "src": "12190:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1035,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "12190:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1038,
                        "mutability": "mutable",
                        "name": "_token",
                        "nameLocation": "12215:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1139,
                        "src": "12207:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1037,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "12207:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "12189:33:0"
                  },
                  "returnParameters": {
                    "id": 1040,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "12232:0:0"
                  },
                  "scope": 2313,
                  "src": "12171:759:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1221,
                    "nodeType": "Block",
                    "src": "13158:488:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 1148,
                                "name": "isDebtor",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 782,
                                "src": "13172:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                  "typeString": "mapping(address => bool)"
                                }
                              },
                              "id": 1151,
                              "indexExpression": {
                                "expression": {
                                  "id": 1149,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "13181:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1150,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "13181:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "13172:20:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e6f7420617070726f766564",
                              "id": 1152,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "13194:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_70356c467a9713064077b7fa0ff1a074c93b1f7c48415be181b9cd799b628361",
                                "typeString": "literal_string \"Not approved\""
                              },
                              "value": "Not approved"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_70356c467a9713064077b7fa0ff1a074c93b1f7c48415be181b9cd799b628361",
                                "typeString": "literal_string \"Not approved\""
                              }
                            ],
                            "id": 1147,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "13164:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1153,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13164:45:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1154,
                        "nodeType": "ExpressionStatement",
                        "src": "13164:45:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 1156,
                                "name": "isReserveToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 701,
                                "src": "13223:14:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                  "typeString": "mapping(address => bool)"
                                }
                              },
                              "id": 1158,
                              "indexExpression": {
                                "id": 1157,
                                "name": "_token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1144,
                                "src": "13238:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "13223:22:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e6f74206163636570746564",
                              "id": 1159,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "13247:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_fadc5f22060668047a4e911336f5d0734fc86647a30251cd7b6b0511b7c2b797",
                                "typeString": "literal_string \"Not accepted\""
                              },
                              "value": "Not accepted"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_fadc5f22060668047a4e911336f5d0734fc86647a30251cd7b6b0511b7c2b797",
                                "typeString": "literal_string \"Not accepted\""
                              }
                            ],
                            "id": 1155,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "13215:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1160,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13215:47:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1161,
                        "nodeType": "ExpressionStatement",
                        "src": "13215:47:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1166,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "13301:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1167,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "13301:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 1170,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "13321:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_MockOlympusTreasury_$2313",
                                    "typeString": "contract MockOlympusTreasury"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_MockOlympusTreasury_$2313",
                                    "typeString": "contract MockOlympusTreasury"
                                  }
                                ],
                                "id": 1169,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "13313:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1168,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "13313:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1171,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "13313:13:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1172,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1142,
                              "src": "13328:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1163,
                                  "name": "_token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1144,
                                  "src": "13276:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1162,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 472,
                                "src": "13269:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$472_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 1164,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "13269:14:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$472",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 1165,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 527,
                            "src": "13269:31:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$472_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$472_$",
                              "typeString": "function (contract IERC20,address,address,uint256)"
                            }
                          },
                          "id": 1173,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13269:67:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1174,
                        "nodeType": "ExpressionStatement",
                        "src": "13269:67:0"
                      },
                      {
                        "assignments": [
                          1176
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1176,
                            "mutability": "mutable",
                            "name": "value",
                            "nameLocation": "13351:5:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 1221,
                            "src": "13343:13:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1175,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "13343:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1181,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 1178,
                              "name": "_token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1144,
                              "src": "13372:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1179,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1142,
                              "src": "13380:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1177,
                            "name": "valueOfToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1555,
                            "src": "13359:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (address,uint256) view returns (uint256)"
                            }
                          },
                          "id": 1180,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13359:29:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "13343:45:0"
                      },
                      {
                        "expression": {
                          "id": 1193,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1182,
                              "name": "debtorBalance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 790,
                              "src": "13394:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 1185,
                            "indexExpression": {
                              "expression": {
                                "id": 1183,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "13408:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1184,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "13408:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "13394:25:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 1191,
                                "name": "value",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1176,
                                "src": "13452:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "baseExpression": {
                                  "id": 1186,
                                  "name": "debtorBalance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 790,
                                  "src": "13422:13:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 1189,
                                "indexExpression": {
                                  "expression": {
                                    "id": 1187,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "13436:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 1188,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "13436:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "13422:25:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1190,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sub",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 42,
                              "src": "13422:29:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 1192,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "13422:36:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "13394:64:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1194,
                        "nodeType": "ExpressionStatement",
                        "src": "13394:64:0"
                      },
                      {
                        "expression": {
                          "id": 1200,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1195,
                            "name": "totalDebt",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 809,
                            "src": "13464:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 1198,
                                "name": "value",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1176,
                                "src": "13490:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 1196,
                                "name": "totalDebt",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 809,
                                "src": "13476:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1197,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sub",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 42,
                              "src": "13476:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 1199,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "13476:20:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "13464:32:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1201,
                        "nodeType": "ExpressionStatement",
                        "src": "13464:32:0"
                      },
                      {
                        "expression": {
                          "id": 1207,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1202,
                            "name": "totalReserves",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 807,
                            "src": "13503:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 1205,
                                "name": "value",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1176,
                                "src": "13537:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 1203,
                                "name": "totalReserves",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 807,
                                "src": "13519:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1204,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "add",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 26,
                              "src": "13519:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 1206,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "13519:24:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "13503:40:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1208,
                        "nodeType": "ExpressionStatement",
                        "src": "13503:40:0"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1210,
                              "name": "totalReserves",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 807,
                              "src": "13570:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1209,
                            "name": "ReservesUpdated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 651,
                            "src": "13554:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 1211,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13554:30:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1212,
                        "nodeType": "EmitStatement",
                        "src": "13549:35:0"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1214,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "13606:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1215,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "13606:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1216,
                              "name": "_token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1144,
                              "src": "13618:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1217,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1142,
                              "src": "13626:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1218,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1176,
                              "src": "13635:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1213,
                            "name": "RepayDebt",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 641,
                            "src": "13596:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256,uint256)"
                            }
                          },
                          "id": 1219,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13596:45:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1220,
                        "nodeType": "EmitStatement",
                        "src": "13591:50:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1140,
                    "nodeType": "StructuredDocumentation",
                    "src": "12934:149:0",
                    "text": "@notice allow approved address to repay borrowed reserves with reserves\n@param _amount uint\n@param _token address"
                  },
                  "functionSelector": "d796ffb8",
                  "id": 1222,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "repayDebtWithReserve",
                  "nameLocation": "13095:20:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1145,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1142,
                        "mutability": "mutable",
                        "name": "_amount",
                        "nameLocation": "13124:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1222,
                        "src": "13116:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1141,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "13116:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1144,
                        "mutability": "mutable",
                        "name": "_token",
                        "nameLocation": "13141:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1222,
                        "src": "13133:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1143,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "13133:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "13115:33:0"
                  },
                  "returnParameters": {
                    "id": 1146,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "13158:0:0"
                  },
                  "scope": 2313,
                  "src": "13086:560:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1273,
                    "nodeType": "Block",
                    "src": "13819:276:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 1229,
                                "name": "isDebtor",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 782,
                                "src": "13833:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                  "typeString": "mapping(address => bool)"
                                }
                              },
                              "id": 1232,
                              "indexExpression": {
                                "expression": {
                                  "id": 1230,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "13842:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1231,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "13842:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "13833:20:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e6f7420617070726f766564",
                              "id": 1233,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "13855:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_70356c467a9713064077b7fa0ff1a074c93b1f7c48415be181b9cd799b628361",
                                "typeString": "literal_string \"Not approved\""
                              },
                              "value": "Not approved"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_70356c467a9713064077b7fa0ff1a074c93b1f7c48415be181b9cd799b628361",
                                "typeString": "literal_string \"Not approved\""
                              }
                            ],
                            "id": 1228,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "13825:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1234,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13825:45:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1235,
                        "nodeType": "ExpressionStatement",
                        "src": "13825:45:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1240,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "13901:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1241,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "13901:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1242,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1225,
                              "src": "13913:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1237,
                                  "name": "OHM",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 692,
                                  "src": "13887:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1236,
                                "name": "IOHMERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 586,
                                "src": "13877:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IOHMERC20_$586_$",
                                  "typeString": "type(contract IOHMERC20)"
                                }
                              },
                              "id": 1238,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "13877:14:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IOHMERC20_$586",
                                "typeString": "contract IOHMERC20"
                              }
                            },
                            "id": 1239,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "burnFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 585,
                            "src": "13877:23:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256) external"
                            }
                          },
                          "id": 1243,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13877:44:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1244,
                        "nodeType": "ExpressionStatement",
                        "src": "13877:44:0"
                      },
                      {
                        "expression": {
                          "id": 1256,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1245,
                              "name": "debtorBalance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 790,
                              "src": "13928:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 1248,
                            "indexExpression": {
                              "expression": {
                                "id": 1246,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "13942:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1247,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "13942:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "13928:25:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 1254,
                                "name": "_amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1225,
                                "src": "13986:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "baseExpression": {
                                  "id": 1249,
                                  "name": "debtorBalance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 790,
                                  "src": "13956:13:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 1252,
                                "indexExpression": {
                                  "expression": {
                                    "id": 1250,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "13970:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 1251,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "13970:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "13956:25:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1253,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sub",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 42,
                              "src": "13956:29:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 1255,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "13956:38:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "13928:66:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1257,
                        "nodeType": "ExpressionStatement",
                        "src": "13928:66:0"
                      },
                      {
                        "expression": {
                          "id": 1263,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1258,
                            "name": "totalDebt",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 809,
                            "src": "14000:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 1261,
                                "name": "_amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1225,
                                "src": "14026:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 1259,
                                "name": "totalDebt",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 809,
                                "src": "14012:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1260,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sub",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 42,
                              "src": "14012:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 1262,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "14012:22:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "14000:34:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1264,
                        "nodeType": "ExpressionStatement",
                        "src": "14000:34:0"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1266,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "14056:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1267,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "14056:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1268,
                              "name": "OHM",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 692,
                              "src": "14068:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1269,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1225,
                              "src": "14073:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1270,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1225,
                              "src": "14082:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1265,
                            "name": "RepayDebt",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 641,
                            "src": "14046:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256,uint256)"
                            }
                          },
                          "id": 1271,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14046:44:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1272,
                        "nodeType": "EmitStatement",
                        "src": "14041:49:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1223,
                    "nodeType": "StructuredDocumentation",
                    "src": "13650:114:0",
                    "text": "@notice allow approved address to repay borrowed reserves with OHM\n@param _amount uint"
                  },
                  "functionSelector": "0f70431f",
                  "id": 1274,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "repayDebtWithOHM",
                  "nameLocation": "13776:16:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1226,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1225,
                        "mutability": "mutable",
                        "name": "_amount",
                        "nameLocation": "13801:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1274,
                        "src": "13793:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1224,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "13793:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "13792:17:0"
                  },
                  "returnParameters": {
                    "id": 1227,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "13819:0:0"
                  },
                  "scope": 2313,
                  "src": "13767:328:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1348,
                    "nodeType": "Block",
                    "src": "14287:511:0",
                    "statements": [
                      {
                        "condition": {
                          "baseExpression": {
                            "id": 1282,
                            "name": "isLiquidityToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 734,
                            "src": "14297:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 1284,
                          "indexExpression": {
                            "id": 1283,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1277,
                            "src": "14314:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "14297:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 1302,
                          "nodeType": "Block",
                          "src": "14399:68:0",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "baseExpression": {
                                      "id": 1295,
                                      "name": "isReserveManager",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 760,
                                      "src": "14415:16:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                        "typeString": "mapping(address => bool)"
                                      }
                                    },
                                    "id": 1298,
                                    "indexExpression": {
                                      "expression": {
                                        "id": 1296,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -15,
                                        "src": "14432:3:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 1297,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "sender",
                                      "nodeType": "MemberAccess",
                                      "src": "14432:10:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "14415:28:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "4e6f7420617070726f766564",
                                    "id": 1299,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "14445:14:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_70356c467a9713064077b7fa0ff1a074c93b1f7c48415be181b9cd799b628361",
                                      "typeString": "literal_string \"Not approved\""
                                    },
                                    "value": "Not approved"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_70356c467a9713064077b7fa0ff1a074c93b1f7c48415be181b9cd799b628361",
                                      "typeString": "literal_string \"Not approved\""
                                    }
                                  ],
                                  "id": 1294,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "14407:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 1300,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "14407:53:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1301,
                              "nodeType": "ExpressionStatement",
                              "src": "14407:53:0"
                            }
                          ]
                        },
                        "id": 1303,
                        "nodeType": "IfStatement",
                        "src": "14293:174:0",
                        "trueBody": {
                          "id": 1293,
                          "nodeType": "Block",
                          "src": "14323:70:0",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "baseExpression": {
                                      "id": 1286,
                                      "name": "isLiquidityManager",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 771,
                                      "src": "14339:18:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                        "typeString": "mapping(address => bool)"
                                      }
                                    },
                                    "id": 1289,
                                    "indexExpression": {
                                      "expression": {
                                        "id": 1287,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -15,
                                        "src": "14358:3:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 1288,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "sender",
                                      "nodeType": "MemberAccess",
                                      "src": "14358:10:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "14339:30:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "4e6f7420617070726f766564",
                                    "id": 1290,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "14371:14:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_70356c467a9713064077b7fa0ff1a074c93b1f7c48415be181b9cd799b628361",
                                      "typeString": "literal_string \"Not approved\""
                                    },
                                    "value": "Not approved"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_70356c467a9713064077b7fa0ff1a074c93b1f7c48415be181b9cd799b628361",
                                      "typeString": "literal_string \"Not approved\""
                                    }
                                  ],
                                  "id": 1285,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "14331:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 1291,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "14331:55:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1292,
                              "nodeType": "ExpressionStatement",
                              "src": "14331:55:0"
                            }
                          ]
                        }
                      },
                      {
                        "assignments": [
                          1305
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1305,
                            "mutability": "mutable",
                            "name": "value",
                            "nameLocation": "14481:5:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 1348,
                            "src": "14473:13:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1304,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "14473:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1310,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 1307,
                              "name": "_token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1277,
                              "src": "14502:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1308,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1279,
                              "src": "14510:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1306,
                            "name": "valueOfToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1555,
                            "src": "14489:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (address,uint256) view returns (uint256)"
                            }
                          },
                          "id": 1309,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14489:29:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "14473:45:0"
                      },
                      {
                        "expression": {
                          "components": [
                            {
                              "id": 1311,
                              "name": "_token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1277,
                              "src": "14525:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1312,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1279,
                              "src": "14533:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 1313,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "14524:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
                            "typeString": "tuple(address,uint256)"
                          }
                        },
                        "id": 1314,
                        "nodeType": "ExpressionStatement",
                        "src": "14524:17:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1319,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1316,
                                "name": "value",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1305,
                                "src": "14555:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 1317,
                                  "name": "excessReserves",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1408,
                                  "src": "14564:14:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                    "typeString": "function () view returns (uint256)"
                                  }
                                },
                                "id": 1318,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "14564:16:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "14555:25:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e73756666696369656e74207265736572766573",
                              "id": 1320,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "14582:23:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_6f055697f05542780f050f02e169b628baaede4365bd8f2e41b10829d224c674",
                                "typeString": "literal_string \"Insufficient reserves\""
                              },
                              "value": "Insufficient reserves"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_6f055697f05542780f050f02e169b628baaede4365bd8f2e41b10829d224c674",
                                "typeString": "literal_string \"Insufficient reserves\""
                              }
                            ],
                            "id": 1315,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "14547:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1321,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14547:59:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1322,
                        "nodeType": "ExpressionStatement",
                        "src": "14547:59:0"
                      },
                      {
                        "expression": {
                          "id": 1328,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1323,
                            "name": "totalReserves",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 807,
                            "src": "14613:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 1326,
                                "name": "value",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1305,
                                "src": "14647:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 1324,
                                "name": "totalReserves",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 807,
                                "src": "14629:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1325,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sub",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 42,
                              "src": "14629:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 1327,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "14629:24:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "14613:40:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1329,
                        "nodeType": "ExpressionStatement",
                        "src": "14613:40:0"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1331,
                              "name": "totalReserves",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 807,
                              "src": "14680:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1330,
                            "name": "ReservesUpdated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 651,
                            "src": "14664:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 1332,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14664:30:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1333,
                        "nodeType": "EmitStatement",
                        "src": "14659:35:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1338,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "14729:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1339,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "14729:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1340,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1279,
                              "src": "14741:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1335,
                                  "name": "_token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1277,
                                  "src": "14708:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1334,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 472,
                                "src": "14701:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$472_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 1336,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "14701:14:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$472",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 1337,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 501,
                            "src": "14701:27:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$472_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$472_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 1341,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14701:48:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1342,
                        "nodeType": "ExpressionStatement",
                        "src": "14701:48:0"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1344,
                              "name": "_token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1277,
                              "src": "14777:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1345,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1279,
                              "src": "14785:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1343,
                            "name": "ReservesManaged",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 647,
                            "src": "14761:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 1346,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14761:32:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1347,
                        "nodeType": "EmitStatement",
                        "src": "14756:37:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1275,
                    "nodeType": "StructuredDocumentation",
                    "src": "14099:127:0",
                    "text": "@notice allow approved address to withdraw assets\n@param _token address\n@param _amount uint"
                  },
                  "functionSelector": "0b0eee30",
                  "id": 1349,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "manage",
                  "nameLocation": "14238:6:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1280,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1277,
                        "mutability": "mutable",
                        "name": "_token",
                        "nameLocation": "14253:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1349,
                        "src": "14245:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1276,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "14245:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1279,
                        "mutability": "mutable",
                        "name": "_amount",
                        "nameLocation": "14269:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1349,
                        "src": "14261:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1278,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "14261:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "14244:33:0"
                  },
                  "returnParameters": {
                    "id": 1281,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "14287:0:0"
                  },
                  "scope": 2313,
                  "src": "14229:569:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1388,
                    "nodeType": "Block",
                    "src": "14937:240:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 1358,
                                "name": "isRewardManager",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 797,
                                "src": "14951:15:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                  "typeString": "mapping(address => bool)"
                                }
                              },
                              "id": 1361,
                              "indexExpression": {
                                "expression": {
                                  "id": 1359,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "14967:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1360,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "14967:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "14951:27:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e6f7420617070726f766564",
                              "id": 1362,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "14980:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_70356c467a9713064077b7fa0ff1a074c93b1f7c48415be181b9cd799b628361",
                                "typeString": "literal_string \"Not approved\""
                              },
                              "value": "Not approved"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_70356c467a9713064077b7fa0ff1a074c93b1f7c48415be181b9cd799b628361",
                                "typeString": "literal_string \"Not approved\""
                              }
                            ],
                            "id": 1357,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "14943:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1363,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14943:52:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1364,
                        "nodeType": "ExpressionStatement",
                        "src": "14943:52:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1369,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1366,
                                "name": "_amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1354,
                                "src": "15009:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 1367,
                                  "name": "excessReserves",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1408,
                                  "src": "15020:14:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                    "typeString": "function () view returns (uint256)"
                                  }
                                },
                                "id": 1368,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "15020:16:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "15009:27:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e73756666696369656e74207265736572766573",
                              "id": 1370,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "15038:23:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_6f055697f05542780f050f02e169b628baaede4365bd8f2e41b10829d224c674",
                                "typeString": "literal_string \"Insufficient reserves\""
                              },
                              "value": "Insufficient reserves"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_6f055697f05542780f050f02e169b628baaede4365bd8f2e41b10829d224c674",
                                "typeString": "literal_string \"Insufficient reserves\""
                              }
                            ],
                            "id": 1365,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "15001:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1371,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15001:61:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1372,
                        "nodeType": "ExpressionStatement",
                        "src": "15001:61:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1377,
                              "name": "_recipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1352,
                              "src": "15094:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1378,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1354,
                              "src": "15106:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1374,
                                  "name": "OHM",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 692,
                                  "src": "15084:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1373,
                                "name": "IERC20Mintable",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 578,
                                "src": "15069:14:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20Mintable_$578_$",
                                  "typeString": "type(contract IERC20Mintable)"
                                }
                              },
                              "id": 1375,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "15069:19:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20Mintable_$578",
                                "typeString": "contract IERC20Mintable"
                              }
                            },
                            "id": 1376,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mint",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 577,
                            "src": "15069:24:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256) external"
                            }
                          },
                          "id": 1379,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15069:45:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1380,
                        "nodeType": "ExpressionStatement",
                        "src": "15069:45:0"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1382,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "15140:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1383,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "15140:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1384,
                              "name": "_recipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1352,
                              "src": "15152:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1385,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1354,
                              "src": "15164:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1381,
                            "name": "RewardsMinted",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 663,
                            "src": "15126:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 1386,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15126:46:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1387,
                        "nodeType": "EmitStatement",
                        "src": "15121:51:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1350,
                    "nodeType": "StructuredDocumentation",
                    "src": "14802:65:0",
                    "text": "@notice send epoch reward to staking contract"
                  },
                  "functionSelector": "6a20de92",
                  "id": 1389,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "mintRewards",
                  "nameLocation": "14879:11:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1355,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1352,
                        "mutability": "mutable",
                        "name": "_recipient",
                        "nameLocation": "14899:10:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1389,
                        "src": "14891:18:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1351,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "14891:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1354,
                        "mutability": "mutable",
                        "name": "_amount",
                        "nameLocation": "14919:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1389,
                        "src": "14911:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1353,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "14911:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "14890:37:0"
                  },
                  "returnParameters": {
                    "id": 1356,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "14937:0:0"
                  },
                  "scope": 2313,
                  "src": "14870:307:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1407,
                    "nodeType": "Block",
                    "src": "15331:77:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1403,
                                  "name": "totalDebt",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 809,
                                  "src": "15392:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "expression": {
                                      "arguments": [
                                        {
                                          "id": 1398,
                                          "name": "OHM",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 692,
                                          "src": "15369:3:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        ],
                                        "id": 1397,
                                        "name": "IERC20",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 472,
                                        "src": "15362:6:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_contract$_IERC20_$472_$",
                                          "typeString": "type(contract IERC20)"
                                        }
                                      },
                                      "id": 1399,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "15362:11:0",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IERC20_$472",
                                        "typeString": "contract IERC20"
                                      }
                                    },
                                    "id": 1400,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "totalSupply",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 444,
                                    "src": "15362:23:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                                      "typeString": "function () view external returns (uint256)"
                                    }
                                  },
                                  "id": 1401,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "15362:25:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 1402,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sub",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 42,
                                "src": "15362:29:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 1404,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "15362:40:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 1395,
                              "name": "totalReserves",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 807,
                              "src": "15344:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1396,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sub",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 42,
                            "src": "15344:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 1405,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15344:59:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1394,
                        "id": 1406,
                        "nodeType": "Return",
                        "src": "15337:66:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1390,
                    "nodeType": "StructuredDocumentation",
                    "src": "15181:91:0",
                    "text": "@notice returns excess reserves not backing tokens\n@return uint"
                  },
                  "functionSelector": "0c3513a8",
                  "id": 1408,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "excessReserves",
                  "nameLocation": "15284:14:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1391,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "15298:2:0"
                  },
                  "returnParameters": {
                    "id": 1394,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1393,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1408,
                        "src": "15322:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1392,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "15322:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "15321:9:0"
                  },
                  "scope": 2313,
                  "src": "15275:133:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1499,
                    "nodeType": "Block",
                    "src": "15597:581:0",
                    "statements": [
                      {
                        "assignments": [
                          1415
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1415,
                            "mutability": "mutable",
                            "name": "reserves",
                            "nameLocation": "15611:8:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 1499,
                            "src": "15603:16:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1414,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "15603:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1416,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "15603:16:0"
                      },
                      {
                        "body": {
                          "id": 1450,
                          "nodeType": "Block",
                          "src": "15676:167:0",
                          "statements": [
                            {
                              "expression": {
                                "id": 1448,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 1428,
                                  "name": "reserves",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1415,
                                  "src": "15684:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "baseExpression": {
                                            "id": 1432,
                                            "name": "reserveTokens",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 697,
                                            "src": "15741:13:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                              "typeString": "address[] storage ref"
                                            }
                                          },
                                          "id": 1434,
                                          "indexExpression": {
                                            "id": 1433,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1418,
                                            "src": "15755:1:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "15741:16:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "id": 1443,
                                                  "name": "this",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": -28,
                                                  "src": "15812:4:0",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_contract$_MockOlympusTreasury_$2313",
                                                    "typeString": "contract MockOlympusTreasury"
                                                  }
                                                }
                                              ],
                                              "expression": {
                                                "argumentTypes": [
                                                  {
                                                    "typeIdentifier": "t_contract$_MockOlympusTreasury_$2313",
                                                    "typeString": "contract MockOlympusTreasury"
                                                  }
                                                ],
                                                "id": 1442,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "lValueRequested": false,
                                                "nodeType": "ElementaryTypeNameExpression",
                                                "src": "15804:7:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_type$_t_address_$",
                                                  "typeString": "type(address)"
                                                },
                                                "typeName": {
                                                  "id": 1441,
                                                  "name": "address",
                                                  "nodeType": "ElementaryTypeName",
                                                  "src": "15804:7:0",
                                                  "typeDescriptions": {}
                                                }
                                              },
                                              "id": 1444,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "kind": "typeConversion",
                                              "lValueRequested": false,
                                              "names": [],
                                              "nodeType": "FunctionCall",
                                              "src": "15804:13:0",
                                              "tryCall": false,
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            ],
                                            "expression": {
                                              "arguments": [
                                                {
                                                  "baseExpression": {
                                                    "id": 1436,
                                                    "name": "reserveTokens",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 697,
                                                    "src": "15776:13:0",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                                      "typeString": "address[] storage ref"
                                                    }
                                                  },
                                                  "id": 1438,
                                                  "indexExpression": {
                                                    "id": 1437,
                                                    "name": "i",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 1418,
                                                    "src": "15790:1:0",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  },
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "nodeType": "IndexAccess",
                                                  "src": "15776:16:0",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                  }
                                                }
                                              ],
                                              "expression": {
                                                "argumentTypes": [
                                                  {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                  }
                                                ],
                                                "id": 1435,
                                                "name": "IERC20",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 472,
                                                "src": "15769:6:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$472_$",
                                                  "typeString": "type(contract IERC20)"
                                                }
                                              },
                                              "id": 1439,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "kind": "typeConversion",
                                              "lValueRequested": false,
                                              "names": [],
                                              "nodeType": "FunctionCall",
                                              "src": "15769:24:0",
                                              "tryCall": false,
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_IERC20_$472",
                                                "typeString": "contract IERC20"
                                              }
                                            },
                                            "id": 1440,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "balanceOf",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 421,
                                            "src": "15769:34:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                              "typeString": "function (address) view external returns (uint256)"
                                            }
                                          },
                                          "id": 1445,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "15769:49:0",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "id": 1431,
                                        "name": "valueOfToken",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1555,
                                        "src": "15717:12:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                                          "typeString": "function (address,uint256) view returns (uint256)"
                                        }
                                      },
                                      "id": 1446,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "15717:111:0",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "id": 1429,
                                      "name": "reserves",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1415,
                                      "src": "15695:8:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 1430,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "add",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 26,
                                    "src": "15695:12:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 1447,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "15695:141:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "15684:152:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1449,
                              "nodeType": "ExpressionStatement",
                              "src": "15684:152:0"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1424,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1421,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1418,
                            "src": "15645:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 1422,
                              "name": "reserveTokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 697,
                              "src": "15649:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 1423,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "15649:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "15645:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1451,
                        "initializationExpression": {
                          "assignments": [
                            1418
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 1418,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "15638:1:0",
                              "nodeType": "VariableDeclaration",
                              "scope": 1451,
                              "src": "15630:9:0",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 1417,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "15630:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 1420,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 1419,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "15642:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "15630:13:0"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 1426,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "15671:3:0",
                            "subExpression": {
                              "id": 1425,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1418,
                              "src": "15671:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1427,
                          "nodeType": "ExpressionStatement",
                          "src": "15671:3:0"
                        },
                        "nodeType": "ForStatement",
                        "src": "15625:218:0"
                      },
                      {
                        "body": {
                          "id": 1485,
                          "nodeType": "Block",
                          "src": "15901:171:0",
                          "statements": [
                            {
                              "expression": {
                                "id": 1483,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 1463,
                                  "name": "reserves",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1415,
                                  "src": "15909:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "baseExpression": {
                                            "id": 1467,
                                            "name": "liquidityTokens",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 730,
                                            "src": "15966:15:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                              "typeString": "address[] storage ref"
                                            }
                                          },
                                          "id": 1469,
                                          "indexExpression": {
                                            "id": 1468,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1453,
                                            "src": "15982:1:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "15966:18:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "id": 1478,
                                                  "name": "this",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": -28,
                                                  "src": "16041:4:0",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_contract$_MockOlympusTreasury_$2313",
                                                    "typeString": "contract MockOlympusTreasury"
                                                  }
                                                }
                                              ],
                                              "expression": {
                                                "argumentTypes": [
                                                  {
                                                    "typeIdentifier": "t_contract$_MockOlympusTreasury_$2313",
                                                    "typeString": "contract MockOlympusTreasury"
                                                  }
                                                ],
                                                "id": 1477,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "lValueRequested": false,
                                                "nodeType": "ElementaryTypeNameExpression",
                                                "src": "16033:7:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_type$_t_address_$",
                                                  "typeString": "type(address)"
                                                },
                                                "typeName": {
                                                  "id": 1476,
                                                  "name": "address",
                                                  "nodeType": "ElementaryTypeName",
                                                  "src": "16033:7:0",
                                                  "typeDescriptions": {}
                                                }
                                              },
                                              "id": 1479,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "kind": "typeConversion",
                                              "lValueRequested": false,
                                              "names": [],
                                              "nodeType": "FunctionCall",
                                              "src": "16033:13:0",
                                              "tryCall": false,
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            ],
                                            "expression": {
                                              "arguments": [
                                                {
                                                  "baseExpression": {
                                                    "id": 1471,
                                                    "name": "liquidityTokens",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 730,
                                                    "src": "16003:15:0",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                                      "typeString": "address[] storage ref"
                                                    }
                                                  },
                                                  "id": 1473,
                                                  "indexExpression": {
                                                    "id": 1472,
                                                    "name": "i",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 1453,
                                                    "src": "16019:1:0",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  },
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "nodeType": "IndexAccess",
                                                  "src": "16003:18:0",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                  }
                                                }
                                              ],
                                              "expression": {
                                                "argumentTypes": [
                                                  {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                  }
                                                ],
                                                "id": 1470,
                                                "name": "IERC20",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 472,
                                                "src": "15996:6:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$472_$",
                                                  "typeString": "type(contract IERC20)"
                                                }
                                              },
                                              "id": 1474,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "kind": "typeConversion",
                                              "lValueRequested": false,
                                              "names": [],
                                              "nodeType": "FunctionCall",
                                              "src": "15996:26:0",
                                              "tryCall": false,
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_IERC20_$472",
                                                "typeString": "contract IERC20"
                                              }
                                            },
                                            "id": 1475,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "balanceOf",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 421,
                                            "src": "15996:36:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                              "typeString": "function (address) view external returns (uint256)"
                                            }
                                          },
                                          "id": 1480,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "15996:51:0",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "id": 1466,
                                        "name": "valueOfToken",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1555,
                                        "src": "15942:12:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                                          "typeString": "function (address,uint256) view returns (uint256)"
                                        }
                                      },
                                      "id": 1481,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "15942:115:0",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "id": 1464,
                                      "name": "reserves",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1415,
                                      "src": "15920:8:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 1465,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "add",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 26,
                                    "src": "15920:12:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 1482,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "15920:145:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "15909:156:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1484,
                              "nodeType": "ExpressionStatement",
                              "src": "15909:156:0"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1459,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1456,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1453,
                            "src": "15868:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 1457,
                              "name": "liquidityTokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 730,
                              "src": "15872:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 1458,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "15872:22:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "15868:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1486,
                        "initializationExpression": {
                          "assignments": [
                            1453
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 1453,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "15861:1:0",
                              "nodeType": "VariableDeclaration",
                              "scope": 1486,
                              "src": "15853:9:0",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 1452,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "15853:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 1455,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 1454,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "15865:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "15853:13:0"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 1461,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "15896:3:0",
                            "subExpression": {
                              "id": 1460,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1453,
                              "src": "15896:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1462,
                          "nodeType": "ExpressionStatement",
                          "src": "15896:3:0"
                        },
                        "nodeType": "ForStatement",
                        "src": "15848:224:0"
                      },
                      {
                        "expression": {
                          "id": 1489,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1487,
                            "name": "totalReserves",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 807,
                            "src": "16077:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1488,
                            "name": "reserves",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1415,
                            "src": "16093:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "16077:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1490,
                        "nodeType": "ExpressionStatement",
                        "src": "16077:24:0"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1492,
                              "name": "reserves",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1415,
                              "src": "16128:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1491,
                            "name": "ReservesUpdated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 651,
                            "src": "16112:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 1493,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16112:25:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1494,
                        "nodeType": "EmitStatement",
                        "src": "16107:30:0"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1496,
                              "name": "reserves",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1415,
                              "src": "16164:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1495,
                            "name": "ReservesAudited",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 655,
                            "src": "16148:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 1497,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16148:25:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1498,
                        "nodeType": "EmitStatement",
                        "src": "16143:30:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1409,
                    "nodeType": "StructuredDocumentation",
                    "src": "15412:136:0",
                    "text": "@notice takes inventory of all tracked assets\n@notice always consolidate to recognized reserves before audit"
                  },
                  "functionSelector": "2b7ce500",
                  "id": 1500,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1412,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1411,
                        "name": "onlyManager",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 336,
                        "src": "15585:11:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "15585:11:0"
                    }
                  ],
                  "name": "auditReserves",
                  "nameLocation": "15560:13:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1410,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "15573:2:0"
                  },
                  "returnParameters": {
                    "id": 1413,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "15597:0:0"
                  },
                  "scope": 2313,
                  "src": "15551:627:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1554,
                    "nodeType": "Block",
                    "src": "16435:348:0",
                    "statements": [
                      {
                        "condition": {
                          "baseExpression": {
                            "id": 1510,
                            "name": "isReserveToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 701,
                            "src": "16445:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 1512,
                          "indexExpression": {
                            "id": 1511,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1503,
                            "src": "16460:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "16445:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "condition": {
                            "baseExpression": {
                              "id": 1536,
                              "name": "isLiquidityToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 734,
                              "src": "16639:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 1538,
                            "indexExpression": {
                              "id": 1537,
                              "name": "_token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1503,
                              "src": "16656:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "16639:24:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 1552,
                          "nodeType": "IfStatement",
                          "src": "16635:144:0",
                          "trueBody": {
                            "id": 1551,
                            "nodeType": "Block",
                            "src": "16665:114:0",
                            "statements": [
                              {
                                "expression": {
                                  "id": 1549,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftHandSide": {
                                    "id": 1539,
                                    "name": "value_",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1508,
                                    "src": "16673:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "Assignment",
                                  "operator": "=",
                                  "rightHandSide": {
                                    "arguments": [
                                      {
                                        "id": 1546,
                                        "name": "_token",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1503,
                                        "src": "16741:6:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      {
                                        "id": 1547,
                                        "name": "_amount",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1505,
                                        "src": "16757:7:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "expression": {
                                        "arguments": [
                                          {
                                            "baseExpression": {
                                              "id": 1541,
                                              "name": "bondCalculator",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 753,
                                              "src": "16698:14:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                                                "typeString": "mapping(address => address)"
                                              }
                                            },
                                            "id": 1543,
                                            "indexExpression": {
                                              "id": 1542,
                                              "name": "_token",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1503,
                                              "src": "16713:6:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "16698:22:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          ],
                                          "id": 1540,
                                          "name": "IBondCalculator",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 596,
                                          "src": "16682:15:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_contract$_IBondCalculator_$596_$",
                                            "typeString": "type(contract IBondCalculator)"
                                          }
                                        },
                                        "id": 1544,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "16682:39:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_IBondCalculator_$596",
                                          "typeString": "contract IBondCalculator"
                                        }
                                      },
                                      "id": 1545,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "valuation",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 595,
                                      "src": "16682:49:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                                        "typeString": "function (address,uint256) view external returns (uint256)"
                                      }
                                    },
                                    "id": 1548,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "16682:90:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "16673:99:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 1550,
                                "nodeType": "ExpressionStatement",
                                "src": "16673:99:0"
                              }
                            ]
                          }
                        },
                        "id": 1553,
                        "nodeType": "IfStatement",
                        "src": "16441:338:0",
                        "trueBody": {
                          "id": 1535,
                          "nodeType": "Block",
                          "src": "16469:160:0",
                          "statements": [
                            {
                              "expression": {
                                "id": 1533,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 1513,
                                  "name": "value_",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1508,
                                  "src": "16523:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 1531,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "hexValue": "3130",
                                        "id": 1525,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "16585:2:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_10_by_1",
                                          "typeString": "int_const 10"
                                        },
                                        "value": "10"
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "**",
                                      "rightExpression": {
                                        "arguments": [],
                                        "expression": {
                                          "argumentTypes": [],
                                          "expression": {
                                            "arguments": [
                                              {
                                                "id": 1527,
                                                "name": "_token",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1503,
                                                "src": "16596:6:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              ],
                                              "id": 1526,
                                              "name": "IERC20",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 472,
                                              "src": "16589:6:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_contract$_IERC20_$472_$",
                                                "typeString": "type(contract IERC20)"
                                              }
                                            },
                                            "id": 1528,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "typeConversion",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "16589:14:0",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_contract$_IERC20_$472",
                                              "typeString": "contract IERC20"
                                            }
                                          },
                                          "id": 1529,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "decimals",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 414,
                                          "src": "16589:23:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                                            "typeString": "function () view external returns (uint8)"
                                          }
                                        },
                                        "id": 1530,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "16589:25:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint8",
                                          "typeString": "uint8"
                                        }
                                      },
                                      "src": "16585:29:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "arguments": [
                                        {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 1522,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "hexValue": "3130",
                                            "id": 1516,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "16544:2:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_10_by_1",
                                              "typeString": "int_const 10"
                                            },
                                            "value": "10"
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "**",
                                          "rightExpression": {
                                            "arguments": [],
                                            "expression": {
                                              "argumentTypes": [],
                                              "expression": {
                                                "arguments": [
                                                  {
                                                    "id": 1518,
                                                    "name": "OHM",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 692,
                                                    "src": "16555:3:0",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_address",
                                                      "typeString": "address"
                                                    }
                                                  }
                                                ],
                                                "expression": {
                                                  "argumentTypes": [
                                                    {
                                                      "typeIdentifier": "t_address",
                                                      "typeString": "address"
                                                    }
                                                  ],
                                                  "id": 1517,
                                                  "name": "IERC20",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 472,
                                                  "src": "16548:6:0",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_contract$_IERC20_$472_$",
                                                    "typeString": "type(contract IERC20)"
                                                  }
                                                },
                                                "id": 1519,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "typeConversion",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "16548:11:0",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_contract$_IERC20_$472",
                                                  "typeString": "contract IERC20"
                                                }
                                              },
                                              "id": 1520,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "decimals",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": 414,
                                              "src": "16548:20:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                                                "typeString": "function () view external returns (uint8)"
                                              }
                                            },
                                            "id": 1521,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "functionCall",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "16548:22:0",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint8",
                                              "typeString": "uint8"
                                            }
                                          },
                                          "src": "16544:26:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "expression": {
                                          "id": 1514,
                                          "name": "_amount",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1505,
                                          "src": "16532:7:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "id": 1515,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "mul",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 103,
                                        "src": "16532:11:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                                        }
                                      },
                                      "id": 1523,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "16532:39:0",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 1524,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "div",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 119,
                                    "src": "16532:43:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 1532,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "16532:90:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "16523:99:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1534,
                              "nodeType": "ExpressionStatement",
                              "src": "16523:99:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1501,
                    "nodeType": "StructuredDocumentation",
                    "src": "16182:144:0",
                    "text": "@notice returns OHM valuation of asset\n@param _token address\n@param _amount uint\n@return value_ uint"
                  },
                  "functionSelector": "d1b317e5",
                  "id": 1555,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "valueOfToken",
                  "nameLocation": "16338:12:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1506,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1503,
                        "mutability": "mutable",
                        "name": "_token",
                        "nameLocation": "16359:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1555,
                        "src": "16351:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1502,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "16351:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1505,
                        "mutability": "mutable",
                        "name": "_amount",
                        "nameLocation": "16375:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1555,
                        "src": "16367:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1504,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "16367:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "16350:33:0"
                  },
                  "returnParameters": {
                    "id": 1509,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1508,
                        "mutability": "mutable",
                        "name": "value_",
                        "nameLocation": "16425:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1555,
                        "src": "16417:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1507,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "16417:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "16416:16:0"
                  },
                  "scope": 2313,
                  "src": "16329:454:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1750,
                    "nodeType": "Block",
                    "src": "17050:1588:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 1574,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1569,
                                "name": "_address",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1561,
                                "src": "17064:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 1572,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "17084:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 1571,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "17076:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 1570,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "17076:7:0",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1573,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "17076:10:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "17064:22:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 1568,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "17056:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 1575,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17056:31:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1576,
                        "nodeType": "ExpressionStatement",
                        "src": "17056:31:0"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_enum$_MANAGING_$690",
                            "typeString": "enum MockOlympusTreasury.MANAGING"
                          },
                          "id": 1580,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1577,
                            "name": "_managing",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1559,
                            "src": "17097:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_MANAGING_$690",
                              "typeString": "enum MockOlympusTreasury.MANAGING"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 1578,
                              "name": "MANAGING",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 690,
                              "src": "17110:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_MANAGING_$690_$",
                                "typeString": "type(enum MockOlympusTreasury.MANAGING)"
                              }
                            },
                            "id": 1579,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "RESERVEDEPOSITOR",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 680,
                            "src": "17110:25:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_MANAGING_$690",
                              "typeString": "enum MockOlympusTreasury.MANAGING"
                            }
                          },
                          "src": "17097:38:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_enum$_MANAGING_$690",
                              "typeString": "enum MockOlympusTreasury.MANAGING"
                            },
                            "id": 1595,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1592,
                              "name": "_managing",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1559,
                              "src": "17245:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_MANAGING_$690",
                                "typeString": "enum MockOlympusTreasury.MANAGING"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "expression": {
                                "id": 1593,
                                "name": "MANAGING",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 690,
                                "src": "17258:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_MANAGING_$690_$",
                                  "typeString": "type(enum MockOlympusTreasury.MANAGING)"
                                }
                              },
                              "id": 1594,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "RESERVESPENDER",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 681,
                              "src": "17258:23:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_MANAGING_$690",
                                "typeString": "enum MockOlympusTreasury.MANAGING"
                              }
                            },
                            "src": "17245:36:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseBody": {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_enum$_MANAGING_$690",
                                "typeString": "enum MockOlympusTreasury.MANAGING"
                              },
                              "id": 1610,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1607,
                                "name": "_managing",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1559,
                                "src": "17389:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_MANAGING_$690",
                                  "typeString": "enum MockOlympusTreasury.MANAGING"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "id": 1608,
                                  "name": "MANAGING",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 690,
                                  "src": "17402:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_MANAGING_$690_$",
                                    "typeString": "type(enum MockOlympusTreasury.MANAGING)"
                                  }
                                },
                                "id": 1609,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "RESERVETOKEN",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 682,
                                "src": "17402:21:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_MANAGING_$690",
                                  "typeString": "enum MockOlympusTreasury.MANAGING"
                                }
                              },
                              "src": "17389:34:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "falseBody": {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_enum$_MANAGING_$690",
                                  "typeString": "enum MockOlympusTreasury.MANAGING"
                                },
                                "id": 1625,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1622,
                                  "name": "_managing",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1559,
                                  "src": "17529:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_MANAGING_$690",
                                    "typeString": "enum MockOlympusTreasury.MANAGING"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "expression": {
                                    "id": 1623,
                                    "name": "MANAGING",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 690,
                                    "src": "17542:8:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_enum$_MANAGING_$690_$",
                                      "typeString": "type(enum MockOlympusTreasury.MANAGING)"
                                    }
                                  },
                                  "id": 1624,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "RESERVEMANAGER",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 683,
                                  "src": "17542:23:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_MANAGING_$690",
                                    "typeString": "enum MockOlympusTreasury.MANAGING"
                                  }
                                },
                                "src": "17529:36:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseBody": {
                                "condition": {
                                  "commonType": {
                                    "typeIdentifier": "t_enum$_MANAGING_$690",
                                    "typeString": "enum MockOlympusTreasury.MANAGING"
                                  },
                                  "id": 1643,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 1640,
                                    "name": "_managing",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1559,
                                    "src": "17696:9:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_enum$_MANAGING_$690",
                                      "typeString": "enum MockOlympusTreasury.MANAGING"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "expression": {
                                      "id": 1641,
                                      "name": "MANAGING",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 690,
                                      "src": "17709:8:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_enum$_MANAGING_$690_$",
                                        "typeString": "type(enum MockOlympusTreasury.MANAGING)"
                                      }
                                    },
                                    "id": 1642,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberName": "LIQUIDITYDEPOSITOR",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 684,
                                    "src": "17709:27:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_enum$_MANAGING_$690",
                                      "typeString": "enum MockOlympusTreasury.MANAGING"
                                    }
                                  },
                                  "src": "17696:40:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "falseBody": {
                                  "condition": {
                                    "commonType": {
                                      "typeIdentifier": "t_enum$_MANAGING_$690",
                                      "typeString": "enum MockOlympusTreasury.MANAGING"
                                    },
                                    "id": 1658,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 1655,
                                      "name": "_managing",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1559,
                                      "src": "17864:9:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_enum$_MANAGING_$690",
                                        "typeString": "enum MockOlympusTreasury.MANAGING"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "expression": {
                                        "id": 1656,
                                        "name": "MANAGING",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 690,
                                        "src": "17877:8:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_enum$_MANAGING_$690_$",
                                          "typeString": "type(enum MockOlympusTreasury.MANAGING)"
                                        }
                                      },
                                      "id": 1657,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberName": "LIQUIDITYTOKEN",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 685,
                                      "src": "17877:23:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_enum$_MANAGING_$690",
                                        "typeString": "enum MockOlympusTreasury.MANAGING"
                                      }
                                    },
                                    "src": "17864:36:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "falseBody": {
                                    "condition": {
                                      "commonType": {
                                        "typeIdentifier": "t_enum$_MANAGING_$690",
                                        "typeString": "enum MockOlympusTreasury.MANAGING"
                                      },
                                      "id": 1673,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 1670,
                                        "name": "_managing",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1559,
                                        "src": "18008:9:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_enum$_MANAGING_$690",
                                          "typeString": "enum MockOlympusTreasury.MANAGING"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "==",
                                      "rightExpression": {
                                        "expression": {
                                          "id": 1671,
                                          "name": "MANAGING",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 690,
                                          "src": "18021:8:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_enum$_MANAGING_$690_$",
                                            "typeString": "type(enum MockOlympusTreasury.MANAGING)"
                                          }
                                        },
                                        "id": 1672,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberName": "LIQUIDITYMANAGER",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 686,
                                        "src": "18021:25:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_enum$_MANAGING_$690",
                                          "typeString": "enum MockOlympusTreasury.MANAGING"
                                        }
                                      },
                                      "src": "18008:38:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "falseBody": {
                                      "condition": {
                                        "commonType": {
                                          "typeIdentifier": "t_enum$_MANAGING_$690",
                                          "typeString": "enum MockOlympusTreasury.MANAGING"
                                        },
                                        "id": 1691,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 1688,
                                          "name": "_managing",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1559,
                                          "src": "18179:9:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_enum$_MANAGING_$690",
                                            "typeString": "enum MockOlympusTreasury.MANAGING"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "==",
                                        "rightExpression": {
                                          "expression": {
                                            "id": 1689,
                                            "name": "MANAGING",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 690,
                                            "src": "18192:8:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_enum$_MANAGING_$690_$",
                                              "typeString": "type(enum MockOlympusTreasury.MANAGING)"
                                            }
                                          },
                                          "id": 1690,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "memberName": "DEBTOR",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 687,
                                          "src": "18192:15:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_enum$_MANAGING_$690",
                                            "typeString": "enum MockOlympusTreasury.MANAGING"
                                          }
                                        },
                                        "src": "18179:28:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "falseBody": {
                                        "condition": {
                                          "commonType": {
                                            "typeIdentifier": "t_enum$_MANAGING_$690",
                                            "typeString": "enum MockOlympusTreasury.MANAGING"
                                          },
                                          "id": 1706,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "id": 1703,
                                            "name": "_managing",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1559,
                                            "src": "18307:9:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_enum$_MANAGING_$690",
                                              "typeString": "enum MockOlympusTreasury.MANAGING"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "==",
                                          "rightExpression": {
                                            "expression": {
                                              "id": 1704,
                                              "name": "MANAGING",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 690,
                                              "src": "18320:8:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_enum$_MANAGING_$690_$",
                                                "typeString": "type(enum MockOlympusTreasury.MANAGING)"
                                              }
                                            },
                                            "id": 1705,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "memberName": "REWARDMANAGER",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 688,
                                            "src": "18320:22:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_enum$_MANAGING_$690",
                                              "typeString": "enum MockOlympusTreasury.MANAGING"
                                            }
                                          },
                                          "src": "18307:35:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        },
                                        "falseBody": {
                                          "condition": {
                                            "commonType": {
                                              "typeIdentifier": "t_enum$_MANAGING_$690",
                                              "typeString": "enum MockOlympusTreasury.MANAGING"
                                            },
                                            "id": 1721,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "id": 1718,
                                              "name": "_managing",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1559,
                                              "src": "18449:9:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_enum$_MANAGING_$690",
                                                "typeString": "enum MockOlympusTreasury.MANAGING"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "==",
                                            "rightExpression": {
                                              "expression": {
                                                "id": 1719,
                                                "name": "MANAGING",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 690,
                                                "src": "18462:8:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_type$_t_enum$_MANAGING_$690_$",
                                                  "typeString": "type(enum MockOlympusTreasury.MANAGING)"
                                                }
                                              },
                                              "id": 1720,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "memberName": "SOHM",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": 689,
                                              "src": "18462:13:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_enum$_MANAGING_$690",
                                                "typeString": "enum MockOlympusTreasury.MANAGING"
                                              }
                                            },
                                            "src": "18449:26:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bool",
                                              "typeString": "bool"
                                            }
                                          },
                                          "falseBody": {
                                            "expression": {
                                              "hexValue": "66616c7365",
                                              "id": 1731,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "bool",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "18566:5:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                              },
                                              "value": "false"
                                            },
                                            "functionReturnParameters": 1567,
                                            "id": 1732,
                                            "nodeType": "Return",
                                            "src": "18559:12:0"
                                          },
                                          "id": 1733,
                                          "nodeType": "IfStatement",
                                          "src": "18445:126:0",
                                          "trueBody": {
                                            "id": 1730,
                                            "nodeType": "Block",
                                            "src": "18477:76:0",
                                            "statements": [
                                              {
                                                "expression": {
                                                  "id": 1728,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "leftHandSide": {
                                                    "id": 1722,
                                                    "name": "sOHMQueue",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 805,
                                                    "src": "18496:9:0",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  },
                                                  "nodeType": "Assignment",
                                                  "operator": "=",
                                                  "rightHandSide": {
                                                    "arguments": [
                                                      {
                                                        "id": 1726,
                                                        "name": "blocksNeededForQueue",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 694,
                                                        "src": "18525:20:0",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_uint256",
                                                          "typeString": "uint256"
                                                        }
                                                      }
                                                    ],
                                                    "expression": {
                                                      "argumentTypes": [
                                                        {
                                                          "typeIdentifier": "t_uint256",
                                                          "typeString": "uint256"
                                                        }
                                                      ],
                                                      "expression": {
                                                        "expression": {
                                                          "id": 1723,
                                                          "name": "block",
                                                          "nodeType": "Identifier",
                                                          "overloadedDeclarations": [],
                                                          "referencedDeclaration": -4,
                                                          "src": "18508:5:0",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_magic_block",
                                                            "typeString": "block"
                                                          }
                                                        },
                                                        "id": 1724,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "memberName": "number",
                                                        "nodeType": "MemberAccess",
                                                        "src": "18508:12:0",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_uint256",
                                                          "typeString": "uint256"
                                                        }
                                                      },
                                                      "id": 1725,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "memberName": "add",
                                                      "nodeType": "MemberAccess",
                                                      "referencedDeclaration": 26,
                                                      "src": "18508:16:0",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                                                      }
                                                    },
                                                    "id": 1727,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "kind": "functionCall",
                                                    "lValueRequested": false,
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "18508:38:0",
                                                    "tryCall": false,
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  },
                                                  "src": "18496:50:0",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "id": 1729,
                                                "nodeType": "ExpressionStatement",
                                                "src": "18496:50:0"
                                              }
                                            ]
                                          }
                                        },
                                        "id": 1734,
                                        "nodeType": "IfStatement",
                                        "src": "18303:268:0",
                                        "trueBody": {
                                          "id": 1717,
                                          "nodeType": "Block",
                                          "src": "18344:95:0",
                                          "statements": [
                                            {
                                              "expression": {
                                                "id": 1715,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftHandSide": {
                                                  "baseExpression": {
                                                    "id": 1707,
                                                    "name": "rewardManagerQueue",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 801,
                                                    "src": "18363:18:0",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                                      "typeString": "mapping(address => uint256)"
                                                    }
                                                  },
                                                  "id": 1709,
                                                  "indexExpression": {
                                                    "id": 1708,
                                                    "name": "_address",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 1561,
                                                    "src": "18382:8:0",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_address",
                                                      "typeString": "address"
                                                    }
                                                  },
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": true,
                                                  "nodeType": "IndexAccess",
                                                  "src": "18363:28:0",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "nodeType": "Assignment",
                                                "operator": "=",
                                                "rightHandSide": {
                                                  "arguments": [
                                                    {
                                                      "id": 1713,
                                                      "name": "blocksNeededForQueue",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 694,
                                                      "src": "18411:20:0",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      }
                                                    }
                                                  ],
                                                  "expression": {
                                                    "argumentTypes": [
                                                      {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      }
                                                    ],
                                                    "expression": {
                                                      "expression": {
                                                        "id": 1710,
                                                        "name": "block",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": -4,
                                                        "src": "18394:5:0",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_magic_block",
                                                          "typeString": "block"
                                                        }
                                                      },
                                                      "id": 1711,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "memberName": "number",
                                                      "nodeType": "MemberAccess",
                                                      "src": "18394:12:0",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      }
                                                    },
                                                    "id": 1712,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "add",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 26,
                                                    "src": "18394:16:0",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                                    }
                                                  },
                                                  "id": 1714,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "kind": "functionCall",
                                                  "lValueRequested": false,
                                                  "names": [],
                                                  "nodeType": "FunctionCall",
                                                  "src": "18394:38:0",
                                                  "tryCall": false,
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "src": "18363:69:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "id": 1716,
                                              "nodeType": "ExpressionStatement",
                                              "src": "18363:69:0"
                                            }
                                          ]
                                        }
                                      },
                                      "id": 1735,
                                      "nodeType": "IfStatement",
                                      "src": "18175:396:0",
                                      "trueBody": {
                                        "id": 1702,
                                        "nodeType": "Block",
                                        "src": "18209:88:0",
                                        "statements": [
                                          {
                                            "expression": {
                                              "id": 1700,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftHandSide": {
                                                "baseExpression": {
                                                  "id": 1692,
                                                  "name": "debtorQueue",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 786,
                                                  "src": "18228:11:0",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                                    "typeString": "mapping(address => uint256)"
                                                  }
                                                },
                                                "id": 1694,
                                                "indexExpression": {
                                                  "id": 1693,
                                                  "name": "_address",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 1561,
                                                  "src": "18240:8:0",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                  }
                                                },
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": true,
                                                "nodeType": "IndexAccess",
                                                "src": "18228:21:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "nodeType": "Assignment",
                                              "operator": "=",
                                              "rightHandSide": {
                                                "arguments": [
                                                  {
                                                    "id": 1698,
                                                    "name": "blocksNeededForQueue",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 694,
                                                    "src": "18269:20:0",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  }
                                                ],
                                                "expression": {
                                                  "argumentTypes": [
                                                    {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  ],
                                                  "expression": {
                                                    "expression": {
                                                      "id": 1695,
                                                      "name": "block",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": -4,
                                                      "src": "18252:5:0",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_magic_block",
                                                        "typeString": "block"
                                                      }
                                                    },
                                                    "id": 1696,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "number",
                                                    "nodeType": "MemberAccess",
                                                    "src": "18252:12:0",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  },
                                                  "id": 1697,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "memberName": "add",
                                                  "nodeType": "MemberAccess",
                                                  "referencedDeclaration": 26,
                                                  "src": "18252:16:0",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                                  }
                                                },
                                                "id": 1699,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "18252:38:0",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "src": "18228:62:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "id": 1701,
                                            "nodeType": "ExpressionStatement",
                                            "src": "18228:62:0"
                                          }
                                        ]
                                      }
                                    },
                                    "id": 1736,
                                    "nodeType": "IfStatement",
                                    "src": "18004:567:0",
                                    "trueBody": {
                                      "id": 1687,
                                      "nodeType": "Block",
                                      "src": "18048:121:0",
                                      "statements": [
                                        {
                                          "expression": {
                                            "id": 1685,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftHandSide": {
                                              "baseExpression": {
                                                "id": 1674,
                                                "name": "LiquidityManagerQueue",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 775,
                                                "src": "18067:21:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                                  "typeString": "mapping(address => uint256)"
                                                }
                                              },
                                              "id": 1676,
                                              "indexExpression": {
                                                "id": 1675,
                                                "name": "_address",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1561,
                                                "src": "18089:8:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              },
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": true,
                                              "nodeType": "IndexAccess",
                                              "src": "18067:31:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "nodeType": "Assignment",
                                            "operator": "=",
                                            "rightHandSide": {
                                              "arguments": [
                                                {
                                                  "arguments": [
                                                    {
                                                      "hexValue": "32",
                                                      "id": 1682,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": true,
                                                      "kind": "number",
                                                      "lValueRequested": false,
                                                      "nodeType": "Literal",
                                                      "src": "18152:1:0",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_rational_2_by_1",
                                                        "typeString": "int_const 2"
                                                      },
                                                      "value": "2"
                                                    }
                                                  ],
                                                  "expression": {
                                                    "argumentTypes": [
                                                      {
                                                        "typeIdentifier": "t_rational_2_by_1",
                                                        "typeString": "int_const 2"
                                                      }
                                                    ],
                                                    "expression": {
                                                      "id": 1680,
                                                      "name": "blocksNeededForQueue",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 694,
                                                      "src": "18127:20:0",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      }
                                                    },
                                                    "id": 1681,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "mul",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 103,
                                                    "src": "18127:24:0",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                                    }
                                                  },
                                                  "id": 1683,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "kind": "functionCall",
                                                  "lValueRequested": false,
                                                  "names": [],
                                                  "nodeType": "FunctionCall",
                                                  "src": "18127:27:0",
                                                  "tryCall": false,
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                }
                                              ],
                                              "expression": {
                                                "argumentTypes": [
                                                  {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                ],
                                                "expression": {
                                                  "expression": {
                                                    "id": 1677,
                                                    "name": "block",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": -4,
                                                    "src": "18101:5:0",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_magic_block",
                                                      "typeString": "block"
                                                    }
                                                  },
                                                  "id": 1678,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "memberName": "number",
                                                  "nodeType": "MemberAccess",
                                                  "src": "18101:12:0",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "id": 1679,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "add",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 26,
                                                "src": "18101:16:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                                }
                                              },
                                              "id": 1684,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "kind": "functionCall",
                                              "lValueRequested": false,
                                              "names": [],
                                              "nodeType": "FunctionCall",
                                              "src": "18101:61:0",
                                              "tryCall": false,
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "src": "18067:95:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "id": 1686,
                                          "nodeType": "ExpressionStatement",
                                          "src": "18067:95:0"
                                        }
                                      ]
                                    }
                                  },
                                  "id": 1737,
                                  "nodeType": "IfStatement",
                                  "src": "17860:711:0",
                                  "trueBody": {
                                    "id": 1669,
                                    "nodeType": "Block",
                                    "src": "17902:96:0",
                                    "statements": [
                                      {
                                        "expression": {
                                          "id": 1667,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftHandSide": {
                                            "baseExpression": {
                                              "id": 1659,
                                              "name": "LiquidityTokenQueue",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 738,
                                              "src": "17921:19:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                                "typeString": "mapping(address => uint256)"
                                              }
                                            },
                                            "id": 1661,
                                            "indexExpression": {
                                              "id": 1660,
                                              "name": "_address",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1561,
                                              "src": "17941:8:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": true,
                                            "nodeType": "IndexAccess",
                                            "src": "17921:29:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "Assignment",
                                          "operator": "=",
                                          "rightHandSide": {
                                            "arguments": [
                                              {
                                                "id": 1665,
                                                "name": "blocksNeededForQueue",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 694,
                                                "src": "17970:20:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              ],
                                              "expression": {
                                                "expression": {
                                                  "id": 1662,
                                                  "name": "block",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": -4,
                                                  "src": "17953:5:0",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_magic_block",
                                                    "typeString": "block"
                                                  }
                                                },
                                                "id": 1663,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "number",
                                                "nodeType": "MemberAccess",
                                                "src": "17953:12:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "id": 1664,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "add",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": 26,
                                              "src": "17953:16:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                                              }
                                            },
                                            "id": 1666,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "functionCall",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "17953:38:0",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "src": "17921:70:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "id": 1668,
                                        "nodeType": "ExpressionStatement",
                                        "src": "17921:70:0"
                                      }
                                    ]
                                  }
                                },
                                "id": 1738,
                                "nodeType": "IfStatement",
                                "src": "17692:879:0",
                                "trueBody": {
                                  "id": 1654,
                                  "nodeType": "Block",
                                  "src": "17738:116:0",
                                  "statements": [
                                    {
                                      "expression": {
                                        "id": 1652,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                          "baseExpression": {
                                            "id": 1644,
                                            "name": "LiquidityDepositorQueue",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 749,
                                            "src": "17757:23:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                              "typeString": "mapping(address => uint256)"
                                            }
                                          },
                                          "id": 1646,
                                          "indexExpression": {
                                            "id": 1645,
                                            "name": "_address",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1561,
                                            "src": "17781:8:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": true,
                                          "nodeType": "IndexAccess",
                                          "src": "17757:33:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                          "arguments": [
                                            {
                                              "id": 1650,
                                              "name": "blocksNeededForQueue",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 694,
                                              "src": "17819:20:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            ],
                                            "expression": {
                                              "expression": {
                                                "id": 1647,
                                                "name": "block",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": -4,
                                                "src": "17793:5:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_magic_block",
                                                  "typeString": "block"
                                                }
                                              },
                                              "id": 1648,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "number",
                                              "nodeType": "MemberAccess",
                                              "src": "17793:12:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "id": 1649,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "add",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 26,
                                            "src": "17793:16:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                                            }
                                          },
                                          "id": 1651,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "17793:54:0",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "17757:90:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "id": 1653,
                                      "nodeType": "ExpressionStatement",
                                      "src": "17757:90:0"
                                    }
                                  ]
                                }
                              },
                              "id": 1739,
                              "nodeType": "IfStatement",
                              "src": "17525:1046:0",
                              "trueBody": {
                                "id": 1639,
                                "nodeType": "Block",
                                "src": "17567:119:0",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 1637,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "baseExpression": {
                                          "id": 1626,
                                          "name": "ReserveManagerQueue",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 764,
                                          "src": "17586:19:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                            "typeString": "mapping(address => uint256)"
                                          }
                                        },
                                        "id": 1628,
                                        "indexExpression": {
                                          "id": 1627,
                                          "name": "_address",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1561,
                                          "src": "17606:8:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": true,
                                        "nodeType": "IndexAccess",
                                        "src": "17586:29:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "hexValue": "32",
                                                "id": 1634,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "number",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "17669:1:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_rational_2_by_1",
                                                  "typeString": "int_const 2"
                                                },
                                                "value": "2"
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_rational_2_by_1",
                                                  "typeString": "int_const 2"
                                                }
                                              ],
                                              "expression": {
                                                "id": 1632,
                                                "name": "blocksNeededForQueue",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 694,
                                                "src": "17644:20:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "id": 1633,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "mul",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": 103,
                                              "src": "17644:24:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                                              }
                                            },
                                            "id": 1635,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "functionCall",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "17644:27:0",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          ],
                                          "expression": {
                                            "expression": {
                                              "id": 1629,
                                              "name": "block",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": -4,
                                              "src": "17618:5:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_magic_block",
                                                "typeString": "block"
                                              }
                                            },
                                            "id": 1630,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "number",
                                            "nodeType": "MemberAccess",
                                            "src": "17618:12:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "id": 1631,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "add",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 26,
                                          "src": "17618:16:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                                          }
                                        },
                                        "id": 1636,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "17618:61:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "17586:93:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 1638,
                                    "nodeType": "ExpressionStatement",
                                    "src": "17586:93:0"
                                  }
                                ]
                              }
                            },
                            "id": 1740,
                            "nodeType": "IfStatement",
                            "src": "17385:1186:0",
                            "trueBody": {
                              "id": 1621,
                              "nodeType": "Block",
                              "src": "17425:94:0",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 1619,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "baseExpression": {
                                        "id": 1611,
                                        "name": "reserveTokenQueue",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 705,
                                        "src": "17444:17:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                          "typeString": "mapping(address => uint256)"
                                        }
                                      },
                                      "id": 1613,
                                      "indexExpression": {
                                        "id": 1612,
                                        "name": "_address",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1561,
                                        "src": "17462:8:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "nodeType": "IndexAccess",
                                      "src": "17444:27:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "=",
                                    "rightHandSide": {
                                      "arguments": [
                                        {
                                          "id": 1617,
                                          "name": "blocksNeededForQueue",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 694,
                                          "src": "17491:20:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "expression": {
                                          "expression": {
                                            "id": 1614,
                                            "name": "block",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": -4,
                                            "src": "17474:5:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_magic_block",
                                              "typeString": "block"
                                            }
                                          },
                                          "id": 1615,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "number",
                                          "nodeType": "MemberAccess",
                                          "src": "17474:12:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "id": 1616,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "add",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 26,
                                        "src": "17474:16:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                                        }
                                      },
                                      "id": 1618,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "17474:38:0",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "17444:68:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 1620,
                                  "nodeType": "ExpressionStatement",
                                  "src": "17444:68:0"
                                }
                              ]
                            }
                          },
                          "id": 1741,
                          "nodeType": "IfStatement",
                          "src": "17241:1330:0",
                          "trueBody": {
                            "id": 1606,
                            "nodeType": "Block",
                            "src": "17283:96:0",
                            "statements": [
                              {
                                "expression": {
                                  "id": 1604,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftHandSide": {
                                    "baseExpression": {
                                      "id": 1596,
                                      "name": "reserveSpenderQueue",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 727,
                                      "src": "17302:19:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                        "typeString": "mapping(address => uint256)"
                                      }
                                    },
                                    "id": 1598,
                                    "indexExpression": {
                                      "id": 1597,
                                      "name": "_address",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1561,
                                      "src": "17322:8:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": true,
                                    "nodeType": "IndexAccess",
                                    "src": "17302:29:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "Assignment",
                                  "operator": "=",
                                  "rightHandSide": {
                                    "arguments": [
                                      {
                                        "id": 1602,
                                        "name": "blocksNeededForQueue",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 694,
                                        "src": "17351:20:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "expression": {
                                        "expression": {
                                          "id": 1599,
                                          "name": "block",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -4,
                                          "src": "17334:5:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_block",
                                            "typeString": "block"
                                          }
                                        },
                                        "id": 1600,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "number",
                                        "nodeType": "MemberAccess",
                                        "src": "17334:12:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "id": 1601,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "add",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 26,
                                      "src": "17334:16:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                                      }
                                    },
                                    "id": 1603,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "17334:38:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "17302:70:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 1605,
                                "nodeType": "ExpressionStatement",
                                "src": "17302:70:0"
                              }
                            ]
                          }
                        },
                        "id": 1742,
                        "nodeType": "IfStatement",
                        "src": "17093:1478:0",
                        "trueBody": {
                          "id": 1591,
                          "nodeType": "Block",
                          "src": "17137:98:0",
                          "statements": [
                            {
                              "expression": {
                                "id": 1589,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 1581,
                                    "name": "reserveDepositorQueue",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 716,
                                    "src": "17156:21:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                      "typeString": "mapping(address => uint256)"
                                    }
                                  },
                                  "id": 1583,
                                  "indexExpression": {
                                    "id": 1582,
                                    "name": "_address",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1561,
                                    "src": "17178:8:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "17156:31:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "id": 1587,
                                      "name": "blocksNeededForQueue",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 694,
                                      "src": "17207:20:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "expression": {
                                        "id": 1584,
                                        "name": "block",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -4,
                                        "src": "17190:5:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_block",
                                          "typeString": "block"
                                        }
                                      },
                                      "id": 1585,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "number",
                                      "nodeType": "MemberAccess",
                                      "src": "17190:12:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 1586,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "add",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 26,
                                    "src": "17190:16:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 1588,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "17190:38:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "17156:72:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1590,
                              "nodeType": "ExpressionStatement",
                              "src": "17156:72:0"
                            }
                          ]
                        }
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1744,
                              "name": "_managing",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1559,
                              "src": "18596:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_MANAGING_$690",
                                "typeString": "enum MockOlympusTreasury.MANAGING"
                              }
                            },
                            {
                              "id": 1745,
                              "name": "_address",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1561,
                              "src": "18607:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_enum$_MANAGING_$690",
                                "typeString": "enum MockOlympusTreasury.MANAGING"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1743,
                            "name": "ChangeQueued",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 670,
                            "src": "18583:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_enum$_MANAGING_$690_$_t_address_$returns$__$",
                              "typeString": "function (enum MockOlympusTreasury.MANAGING,address)"
                            }
                          },
                          "id": 1746,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "18583:33:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1747,
                        "nodeType": "EmitStatement",
                        "src": "18578:38:0"
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 1748,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "18629:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 1567,
                        "id": 1749,
                        "nodeType": "Return",
                        "src": "18622:11:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1556,
                    "nodeType": "StructuredDocumentation",
                    "src": "16787:157:0",
                    "text": "@notice queue address to change boolean in mapping\n@param _managing MANAGING\n@param _address address\n@return bool"
                  },
                  "functionSelector": "e83afee3",
                  "id": 1751,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1564,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1563,
                        "name": "onlyManager",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 336,
                        "src": "17017:11:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "17017:11:0"
                    }
                  ],
                  "name": "queue",
                  "nameLocation": "16956:5:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1562,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1559,
                        "mutability": "mutable",
                        "name": "_managing",
                        "nameLocation": "16971:9:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1751,
                        "src": "16962:18:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_MANAGING_$690",
                          "typeString": "enum MockOlympusTreasury.MANAGING"
                        },
                        "typeName": {
                          "id": 1558,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1557,
                            "name": "MANAGING",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 690,
                            "src": "16962:8:0"
                          },
                          "referencedDeclaration": 690,
                          "src": "16962:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_MANAGING_$690",
                            "typeString": "enum MockOlympusTreasury.MANAGING"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1561,
                        "mutability": "mutable",
                        "name": "_address",
                        "nameLocation": "16990:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1751,
                        "src": "16982:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1560,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "16982:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "16961:38:0"
                  },
                  "returnParameters": {
                    "id": 1567,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1566,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1751,
                        "src": "17042:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1565,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "17042:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "17041:6:0"
                  },
                  "scope": 2313,
                  "src": "16947:1691:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 2229,
                    "nodeType": "Block",
                    "src": "18962:3876:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 1772,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1767,
                                "name": "_address",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1757,
                                "src": "18976:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 1770,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "18996:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 1769,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "18988:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 1768,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "18988:7:0",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1771,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "18988:10:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "18976:22:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 1766,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "18968:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 1773,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "18968:31:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1774,
                        "nodeType": "ExpressionStatement",
                        "src": "18968:31:0"
                      },
                      {
                        "assignments": [
                          1776
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1776,
                            "mutability": "mutable",
                            "name": "result",
                            "nameLocation": "19010:6:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 2229,
                            "src": "19005:11:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 1775,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "19005:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1777,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "19005:11:0"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_enum$_MANAGING_$690",
                            "typeString": "enum MockOlympusTreasury.MANAGING"
                          },
                          "id": 1781,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1778,
                            "name": "_managing",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1755,
                            "src": "19026:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_MANAGING_$690",
                              "typeString": "enum MockOlympusTreasury.MANAGING"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 1779,
                              "name": "MANAGING",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 690,
                              "src": "19039:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_MANAGING_$690_$",
                                "typeString": "type(enum MockOlympusTreasury.MANAGING)"
                              }
                            },
                            "id": 1780,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "RESERVEDEPOSITOR",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 680,
                            "src": "19039:25:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_MANAGING_$690",
                              "typeString": "enum MockOlympusTreasury.MANAGING"
                            }
                          },
                          "src": "19026:38:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_enum$_MANAGING_$690",
                              "typeString": "enum MockOlympusTreasury.MANAGING"
                            },
                            "id": 1825,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1822,
                              "name": "_managing",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1755,
                              "src": "19429:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_MANAGING_$690",
                                "typeString": "enum MockOlympusTreasury.MANAGING"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "expression": {
                                "id": 1823,
                                "name": "MANAGING",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 690,
                                "src": "19442:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_MANAGING_$690_$",
                                  "typeString": "type(enum MockOlympusTreasury.MANAGING)"
                                }
                              },
                              "id": 1824,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "RESERVESPENDER",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 681,
                              "src": "19442:23:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_MANAGING_$690",
                                "typeString": "enum MockOlympusTreasury.MANAGING"
                              }
                            },
                            "src": "19429:36:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseBody": {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_enum$_MANAGING_$690",
                                "typeString": "enum MockOlympusTreasury.MANAGING"
                              },
                              "id": 1869,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1866,
                                "name": "_managing",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1755,
                                "src": "19816:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_MANAGING_$690",
                                  "typeString": "enum MockOlympusTreasury.MANAGING"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "id": 1867,
                                  "name": "MANAGING",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 690,
                                  "src": "19829:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_MANAGING_$690_$",
                                    "typeString": "type(enum MockOlympusTreasury.MANAGING)"
                                  }
                                },
                                "id": 1868,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "RESERVETOKEN",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 682,
                                "src": "19829:21:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_MANAGING_$690",
                                  "typeString": "enum MockOlympusTreasury.MANAGING"
                                }
                              },
                              "src": "19816:34:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "falseBody": {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_enum$_MANAGING_$690",
                                  "typeString": "enum MockOlympusTreasury.MANAGING"
                                },
                                "id": 1913,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1910,
                                  "name": "_managing",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1755,
                                  "src": "20187:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_MANAGING_$690",
                                    "typeString": "enum MockOlympusTreasury.MANAGING"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "expression": {
                                    "id": 1911,
                                    "name": "MANAGING",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 690,
                                    "src": "20200:8:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_enum$_MANAGING_$690_$",
                                      "typeString": "type(enum MockOlympusTreasury.MANAGING)"
                                    }
                                  },
                                  "id": 1912,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "RESERVEMANAGER",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 683,
                                  "src": "20200:23:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_MANAGING_$690",
                                    "typeString": "enum MockOlympusTreasury.MANAGING"
                                  }
                                },
                                "src": "20187:36:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseBody": {
                                "condition": {
                                  "commonType": {
                                    "typeIdentifier": "t_enum$_MANAGING_$690",
                                    "typeString": "enum MockOlympusTreasury.MANAGING"
                                  },
                                  "id": 1963,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 1960,
                                    "name": "_managing",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1755,
                                    "src": "20614:9:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_enum$_MANAGING_$690",
                                      "typeString": "enum MockOlympusTreasury.MANAGING"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "expression": {
                                      "id": 1961,
                                      "name": "MANAGING",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 690,
                                      "src": "20627:8:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_enum$_MANAGING_$690_$",
                                        "typeString": "type(enum MockOlympusTreasury.MANAGING)"
                                      }
                                    },
                                    "id": 1962,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberName": "LIQUIDITYDEPOSITOR",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 684,
                                    "src": "20627:27:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_enum$_MANAGING_$690",
                                      "typeString": "enum MockOlympusTreasury.MANAGING"
                                    }
                                  },
                                  "src": "20614:40:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "falseBody": {
                                  "condition": {
                                    "commonType": {
                                      "typeIdentifier": "t_enum$_MANAGING_$690",
                                      "typeString": "enum MockOlympusTreasury.MANAGING"
                                    },
                                    "id": 2013,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 2010,
                                      "name": "_managing",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1755,
                                      "src": "21093:9:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_enum$_MANAGING_$690",
                                        "typeString": "enum MockOlympusTreasury.MANAGING"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "expression": {
                                        "id": 2011,
                                        "name": "MANAGING",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 690,
                                        "src": "21106:8:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_enum$_MANAGING_$690_$",
                                          "typeString": "type(enum MockOlympusTreasury.MANAGING)"
                                        }
                                      },
                                      "id": 2012,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberName": "LIQUIDITYTOKEN",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 685,
                                      "src": "21106:23:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_enum$_MANAGING_$690",
                                        "typeString": "enum MockOlympusTreasury.MANAGING"
                                      }
                                    },
                                    "src": "21093:36:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "falseBody": {
                                    "condition": {
                                      "commonType": {
                                        "typeIdentifier": "t_enum$_MANAGING_$690",
                                        "typeString": "enum MockOlympusTreasury.MANAGING"
                                      },
                                      "id": 2063,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 2060,
                                        "name": "_managing",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1755,
                                        "src": "21526:9:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_enum$_MANAGING_$690",
                                          "typeString": "enum MockOlympusTreasury.MANAGING"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "==",
                                      "rightExpression": {
                                        "expression": {
                                          "id": 2061,
                                          "name": "MANAGING",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 690,
                                          "src": "21539:8:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_enum$_MANAGING_$690_$",
                                            "typeString": "type(enum MockOlympusTreasury.MANAGING)"
                                          }
                                        },
                                        "id": 2062,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberName": "LIQUIDITYMANAGER",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 686,
                                        "src": "21539:25:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_enum$_MANAGING_$690",
                                          "typeString": "enum MockOlympusTreasury.MANAGING"
                                        }
                                      },
                                      "src": "21526:38:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "falseBody": {
                                      "condition": {
                                        "commonType": {
                                          "typeIdentifier": "t_enum$_MANAGING_$690",
                                          "typeString": "enum MockOlympusTreasury.MANAGING"
                                        },
                                        "id": 2107,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 2104,
                                          "name": "_managing",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1755,
                                          "src": "21929:9:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_enum$_MANAGING_$690",
                                            "typeString": "enum MockOlympusTreasury.MANAGING"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "==",
                                        "rightExpression": {
                                          "expression": {
                                            "id": 2105,
                                            "name": "MANAGING",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 690,
                                            "src": "21942:8:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_enum$_MANAGING_$690_$",
                                              "typeString": "type(enum MockOlympusTreasury.MANAGING)"
                                            }
                                          },
                                          "id": 2106,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "memberName": "DEBTOR",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 687,
                                          "src": "21942:15:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_enum$_MANAGING_$690",
                                            "typeString": "enum MockOlympusTreasury.MANAGING"
                                          }
                                        },
                                        "src": "21929:28:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "falseBody": {
                                        "condition": {
                                          "commonType": {
                                            "typeIdentifier": "t_enum$_MANAGING_$690",
                                            "typeString": "enum MockOlympusTreasury.MANAGING"
                                          },
                                          "id": 2151,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "id": 2148,
                                            "name": "_managing",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1755,
                                            "src": "22252:9:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_enum$_MANAGING_$690",
                                              "typeString": "enum MockOlympusTreasury.MANAGING"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "==",
                                          "rightExpression": {
                                            "expression": {
                                              "id": 2149,
                                              "name": "MANAGING",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 690,
                                              "src": "22265:8:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_enum$_MANAGING_$690_$",
                                                "typeString": "type(enum MockOlympusTreasury.MANAGING)"
                                              }
                                            },
                                            "id": 2150,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "memberName": "REWARDMANAGER",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 688,
                                            "src": "22265:22:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_enum$_MANAGING_$690",
                                              "typeString": "enum MockOlympusTreasury.MANAGING"
                                            }
                                          },
                                          "src": "22252:35:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        },
                                        "falseBody": {
                                          "condition": {
                                            "commonType": {
                                              "typeIdentifier": "t_enum$_MANAGING_$690",
                                              "typeString": "enum MockOlympusTreasury.MANAGING"
                                            },
                                            "id": 2195,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "id": 2192,
                                              "name": "_managing",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1755,
                                              "src": "22631:9:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_enum$_MANAGING_$690",
                                                "typeString": "enum MockOlympusTreasury.MANAGING"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "==",
                                            "rightExpression": {
                                              "expression": {
                                                "id": 2193,
                                                "name": "MANAGING",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 690,
                                                "src": "22644:8:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_type$_t_enum$_MANAGING_$690_$",
                                                  "typeString": "type(enum MockOlympusTreasury.MANAGING)"
                                                }
                                              },
                                              "id": 2194,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "memberName": "SOHM",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": 689,
                                              "src": "22644:13:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_enum$_MANAGING_$690",
                                                "typeString": "enum MockOlympusTreasury.MANAGING"
                                              }
                                            },
                                            "src": "22631:26:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bool",
                                              "typeString": "bool"
                                            }
                                          },
                                          "falseBody": {
                                            "expression": {
                                              "hexValue": "66616c7365",
                                              "id": 2209,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "bool",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "22755:5:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                              },
                                              "value": "false"
                                            },
                                            "functionReturnParameters": 1765,
                                            "id": 2210,
                                            "nodeType": "Return",
                                            "src": "22748:12:0"
                                          },
                                          "id": 2211,
                                          "nodeType": "IfStatement",
                                          "src": "22627:133:0",
                                          "trueBody": {
                                            "id": 2208,
                                            "nodeType": "Block",
                                            "src": "22659:83:0",
                                            "statements": [
                                              {
                                                "expression": {
                                                  "id": 2198,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "leftHandSide": {
                                                    "id": 2196,
                                                    "name": "sOHMQueue",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 805,
                                                    "src": "22678:9:0",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  },
                                                  "nodeType": "Assignment",
                                                  "operator": "=",
                                                  "rightHandSide": {
                                                    "hexValue": "30",
                                                    "id": 2197,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "number",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "22690:1:0",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_rational_0_by_1",
                                                      "typeString": "int_const 0"
                                                    },
                                                    "value": "0"
                                                  },
                                                  "src": "22678:13:0",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "id": 2199,
                                                "nodeType": "ExpressionStatement",
                                                "src": "22678:13:0"
                                              },
                                              {
                                                "expression": {
                                                  "id": 2202,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "leftHandSide": {
                                                    "id": 2200,
                                                    "name": "sOHM",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 803,
                                                    "src": "22699:4:0",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_address",
                                                      "typeString": "address"
                                                    }
                                                  },
                                                  "nodeType": "Assignment",
                                                  "operator": "=",
                                                  "rightHandSide": {
                                                    "id": 2201,
                                                    "name": "_address",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 1757,
                                                    "src": "22706:8:0",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_address",
                                                      "typeString": "address"
                                                    }
                                                  },
                                                  "src": "22699:15:0",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                  }
                                                },
                                                "id": 2203,
                                                "nodeType": "ExpressionStatement",
                                                "src": "22699:15:0"
                                              },
                                              {
                                                "expression": {
                                                  "id": 2206,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "leftHandSide": {
                                                    "id": 2204,
                                                    "name": "result",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 1776,
                                                    "src": "22722:6:0",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_bool",
                                                      "typeString": "bool"
                                                    }
                                                  },
                                                  "nodeType": "Assignment",
                                                  "operator": "=",
                                                  "rightHandSide": {
                                                    "hexValue": "74727565",
                                                    "id": 2205,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "bool",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "22731:4:0",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_bool",
                                                      "typeString": "bool"
                                                    },
                                                    "value": "true"
                                                  },
                                                  "src": "22722:13:0",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                  }
                                                },
                                                "id": 2207,
                                                "nodeType": "ExpressionStatement",
                                                "src": "22722:13:0"
                                              }
                                            ]
                                          }
                                        },
                                        "id": 2212,
                                        "nodeType": "IfStatement",
                                        "src": "22248:512:0",
                                        "trueBody": {
                                          "id": 2191,
                                          "nodeType": "Block",
                                          "src": "22289:332:0",
                                          "statements": [
                                            {
                                              "condition": {
                                                "arguments": [
                                                  {
                                                    "id": 2153,
                                                    "name": "rewardManagerQueue",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 801,
                                                    "src": "22325:18:0",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                                      "typeString": "mapping(address => uint256)"
                                                    }
                                                  },
                                                  {
                                                    "id": 2154,
                                                    "name": "isRewardManager",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 797,
                                                    "src": "22345:15:0",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                                      "typeString": "mapping(address => bool)"
                                                    }
                                                  },
                                                  {
                                                    "id": 2155,
                                                    "name": "_address",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 1757,
                                                    "src": "22362:8:0",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_address",
                                                      "typeString": "address"
                                                    }
                                                  }
                                                ],
                                                "expression": {
                                                  "argumentTypes": [
                                                    {
                                                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                                      "typeString": "mapping(address => uint256)"
                                                    },
                                                    {
                                                      "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                                      "typeString": "mapping(address => bool)"
                                                    },
                                                    {
                                                      "typeIdentifier": "t_address",
                                                      "typeString": "address"
                                                    }
                                                  ],
                                                  "id": 2152,
                                                  "name": "requirements",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 2276,
                                                  "src": "22312:12:0",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_function_internal_view$_t_mapping$_t_address_$_t_uint256_$_$_t_mapping$_t_address_$_t_bool_$_$_t_address_$returns$_t_bool_$",
                                                    "typeString": "function (mapping(address => uint256),mapping(address => bool),address) view returns (bool)"
                                                  }
                                                },
                                                "id": 2156,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "22312:59:0",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_bool",
                                                  "typeString": "bool"
                                                }
                                              },
                                              "id": 2177,
                                              "nodeType": "IfStatement",
                                              "src": "22308:222:0",
                                              "trueBody": {
                                                "id": 2176,
                                                "nodeType": "Block",
                                                "src": "22373:157:0",
                                                "statements": [
                                                  {
                                                    "expression": {
                                                      "id": 2161,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "leftHandSide": {
                                                        "baseExpression": {
                                                          "id": 2157,
                                                          "name": "rewardManagerQueue",
                                                          "nodeType": "Identifier",
                                                          "overloadedDeclarations": [],
                                                          "referencedDeclaration": 801,
                                                          "src": "22383:18:0",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                                            "typeString": "mapping(address => uint256)"
                                                          }
                                                        },
                                                        "id": 2159,
                                                        "indexExpression": {
                                                          "id": 2158,
                                                          "name": "_address",
                                                          "nodeType": "Identifier",
                                                          "overloadedDeclarations": [],
                                                          "referencedDeclaration": 1757,
                                                          "src": "22402:8:0",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                          }
                                                        },
                                                        "isConstant": false,
                                                        "isLValue": true,
                                                        "isPure": false,
                                                        "lValueRequested": true,
                                                        "nodeType": "IndexAccess",
                                                        "src": "22383:28:0",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_uint256",
                                                          "typeString": "uint256"
                                                        }
                                                      },
                                                      "nodeType": "Assignment",
                                                      "operator": "=",
                                                      "rightHandSide": {
                                                        "hexValue": "30",
                                                        "id": 2160,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "number",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "22414:1:0",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_rational_0_by_1",
                                                          "typeString": "int_const 0"
                                                        },
                                                        "value": "0"
                                                      },
                                                      "src": "22383:32:0",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      }
                                                    },
                                                    "id": 2162,
                                                    "nodeType": "ExpressionStatement",
                                                    "src": "22383:32:0"
                                                  },
                                                  {
                                                    "condition": {
                                                      "id": 2167,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "nodeType": "UnaryOperation",
                                                      "operator": "!",
                                                      "prefix": true,
                                                      "src": "22429:39:0",
                                                      "subExpression": {
                                                        "arguments": [
                                                          {
                                                            "id": 2164,
                                                            "name": "rewardManagers",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 793,
                                                            "src": "22443:14:0",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                                              "typeString": "address[] storage ref"
                                                            }
                                                          },
                                                          {
                                                            "id": 2165,
                                                            "name": "_address",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 1757,
                                                            "src": "22459:8:0",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_address",
                                                              "typeString": "address"
                                                            }
                                                          }
                                                        ],
                                                        "expression": {
                                                          "argumentTypes": [
                                                            {
                                                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                                              "typeString": "address[] storage ref"
                                                            },
                                                            {
                                                              "typeIdentifier": "t_address",
                                                              "typeString": "address"
                                                            }
                                                          ],
                                                          "id": 2163,
                                                          "name": "listContains",
                                                          "nodeType": "Identifier",
                                                          "overloadedDeclarations": [],
                                                          "referencedDeclaration": 2312,
                                                          "src": "22430:12:0",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_function_internal_view$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$_t_bool_$",
                                                            "typeString": "function (address[] storage pointer,address) view returns (bool)"
                                                          }
                                                        },
                                                        "id": 2166,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "kind": "functionCall",
                                                        "lValueRequested": false,
                                                        "names": [],
                                                        "nodeType": "FunctionCall",
                                                        "src": "22430:38:0",
                                                        "tryCall": false,
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_bool",
                                                          "typeString": "bool"
                                                        }
                                                      },
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                      }
                                                    },
                                                    "id": 2175,
                                                    "nodeType": "IfStatement",
                                                    "src": "22425:97:0",
                                                    "trueBody": {
                                                      "id": 2174,
                                                      "nodeType": "Block",
                                                      "src": "22470:52:0",
                                                      "statements": [
                                                        {
                                                          "expression": {
                                                            "arguments": [
                                                              {
                                                                "id": 2171,
                                                                "name": "_address",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 1757,
                                                                "src": "22502:8:0",
                                                                "typeDescriptions": {
                                                                  "typeIdentifier": "t_address",
                                                                  "typeString": "address"
                                                                }
                                                              }
                                                            ],
                                                            "expression": {
                                                              "argumentTypes": [
                                                                {
                                                                  "typeIdentifier": "t_address",
                                                                  "typeString": "address"
                                                                }
                                                              ],
                                                              "expression": {
                                                                "id": 2168,
                                                                "name": "rewardManagers",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 793,
                                                                "src": "22482:14:0",
                                                                "typeDescriptions": {
                                                                  "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                                                  "typeString": "address[] storage ref"
                                                                }
                                                              },
                                                              "id": 2170,
                                                              "isConstant": false,
                                                              "isLValue": false,
                                                              "isPure": false,
                                                              "lValueRequested": false,
                                                              "memberName": "push",
                                                              "nodeType": "MemberAccess",
                                                              "src": "22482:19:0",
                                                              "typeDescriptions": {
                                                                "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                                                                "typeString": "function (address[] storage pointer,address)"
                                                              }
                                                            },
                                                            "id": 2172,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "kind": "functionCall",
                                                            "lValueRequested": false,
                                                            "names": [],
                                                            "nodeType": "FunctionCall",
                                                            "src": "22482:29:0",
                                                            "tryCall": false,
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_tuple$__$",
                                                              "typeString": "tuple()"
                                                            }
                                                          },
                                                          "id": 2173,
                                                          "nodeType": "ExpressionStatement",
                                                          "src": "22482:29:0"
                                                        }
                                                      ]
                                                    }
                                                  }
                                                ]
                                              }
                                            },
                                            {
                                              "expression": {
                                                "id": 2183,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftHandSide": {
                                                  "id": 2178,
                                                  "name": "result",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 1776,
                                                  "src": "22537:6:0",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                  }
                                                },
                                                "nodeType": "Assignment",
                                                "operator": "=",
                                                "rightHandSide": {
                                                  "id": 2182,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "nodeType": "UnaryOperation",
                                                  "operator": "!",
                                                  "prefix": true,
                                                  "src": "22546:26:0",
                                                  "subExpression": {
                                                    "baseExpression": {
                                                      "id": 2179,
                                                      "name": "isRewardManager",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 797,
                                                      "src": "22547:15:0",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                                        "typeString": "mapping(address => bool)"
                                                      }
                                                    },
                                                    "id": 2181,
                                                    "indexExpression": {
                                                      "id": 2180,
                                                      "name": "_address",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 1757,
                                                      "src": "22563:8:0",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                      }
                                                    },
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "nodeType": "IndexAccess",
                                                    "src": "22547:25:0",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_bool",
                                                      "typeString": "bool"
                                                    }
                                                  },
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                  }
                                                },
                                                "src": "22537:35:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_bool",
                                                  "typeString": "bool"
                                                }
                                              },
                                              "id": 2184,
                                              "nodeType": "ExpressionStatement",
                                              "src": "22537:35:0"
                                            },
                                            {
                                              "expression": {
                                                "id": 2189,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftHandSide": {
                                                  "baseExpression": {
                                                    "id": 2185,
                                                    "name": "isRewardManager",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 797,
                                                    "src": "22580:15:0",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                                      "typeString": "mapping(address => bool)"
                                                    }
                                                  },
                                                  "id": 2187,
                                                  "indexExpression": {
                                                    "id": 2186,
                                                    "name": "_address",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 1757,
                                                    "src": "22596:8:0",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_address",
                                                      "typeString": "address"
                                                    }
                                                  },
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": true,
                                                  "nodeType": "IndexAccess",
                                                  "src": "22580:25:0",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                  }
                                                },
                                                "nodeType": "Assignment",
                                                "operator": "=",
                                                "rightHandSide": {
                                                  "id": 2188,
                                                  "name": "result",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 1776,
                                                  "src": "22608:6:0",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                  }
                                                },
                                                "src": "22580:34:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_bool",
                                                  "typeString": "bool"
                                                }
                                              },
                                              "id": 2190,
                                              "nodeType": "ExpressionStatement",
                                              "src": "22580:34:0"
                                            }
                                          ]
                                        }
                                      },
                                      "id": 2213,
                                      "nodeType": "IfStatement",
                                      "src": "21925:835:0",
                                      "trueBody": {
                                        "id": 2147,
                                        "nodeType": "Block",
                                        "src": "21959:283:0",
                                        "statements": [
                                          {
                                            "condition": {
                                              "arguments": [
                                                {
                                                  "id": 2109,
                                                  "name": "debtorQueue",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 786,
                                                  "src": "21995:11:0",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                                    "typeString": "mapping(address => uint256)"
                                                  }
                                                },
                                                {
                                                  "id": 2110,
                                                  "name": "isDebtor",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 782,
                                                  "src": "22008:8:0",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                                    "typeString": "mapping(address => bool)"
                                                  }
                                                },
                                                {
                                                  "id": 2111,
                                                  "name": "_address",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 1757,
                                                  "src": "22018:8:0",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                  }
                                                }
                                              ],
                                              "expression": {
                                                "argumentTypes": [
                                                  {
                                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                                    "typeString": "mapping(address => uint256)"
                                                  },
                                                  {
                                                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                                    "typeString": "mapping(address => bool)"
                                                  },
                                                  {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                  }
                                                ],
                                                "id": 2108,
                                                "name": "requirements",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 2276,
                                                "src": "21982:12:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_function_internal_view$_t_mapping$_t_address_$_t_uint256_$_$_t_mapping$_t_address_$_t_bool_$_$_t_address_$returns$_t_bool_$",
                                                  "typeString": "function (mapping(address => uint256),mapping(address => bool),address) view returns (bool)"
                                                }
                                              },
                                              "id": 2112,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "kind": "functionCall",
                                              "lValueRequested": false,
                                              "names": [],
                                              "nodeType": "FunctionCall",
                                              "src": "21982:45:0",
                                              "tryCall": false,
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                              }
                                            },
                                            "id": 2133,
                                            "nodeType": "IfStatement",
                                            "src": "21978:187:0",
                                            "trueBody": {
                                              "id": 2132,
                                              "nodeType": "Block",
                                              "src": "22029:136:0",
                                              "statements": [
                                                {
                                                  "expression": {
                                                    "id": 2117,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "leftHandSide": {
                                                      "baseExpression": {
                                                        "id": 2113,
                                                        "name": "debtorQueue",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 786,
                                                        "src": "22039:11:0",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                                          "typeString": "mapping(address => uint256)"
                                                        }
                                                      },
                                                      "id": 2115,
                                                      "indexExpression": {
                                                        "id": 2114,
                                                        "name": "_address",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 1757,
                                                        "src": "22051:8:0",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_address",
                                                          "typeString": "address"
                                                        }
                                                      },
                                                      "isConstant": false,
                                                      "isLValue": true,
                                                      "isPure": false,
                                                      "lValueRequested": true,
                                                      "nodeType": "IndexAccess",
                                                      "src": "22039:21:0",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      }
                                                    },
                                                    "nodeType": "Assignment",
                                                    "operator": "=",
                                                    "rightHandSide": {
                                                      "hexValue": "30",
                                                      "id": 2116,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": true,
                                                      "kind": "number",
                                                      "lValueRequested": false,
                                                      "nodeType": "Literal",
                                                      "src": "22063:1:0",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_rational_0_by_1",
                                                        "typeString": "int_const 0"
                                                      },
                                                      "value": "0"
                                                    },
                                                    "src": "22039:25:0",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  },
                                                  "id": 2118,
                                                  "nodeType": "ExpressionStatement",
                                                  "src": "22039:25:0"
                                                },
                                                {
                                                  "condition": {
                                                    "id": 2123,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "nodeType": "UnaryOperation",
                                                    "operator": "!",
                                                    "prefix": true,
                                                    "src": "22078:32:0",
                                                    "subExpression": {
                                                      "arguments": [
                                                        {
                                                          "id": 2120,
                                                          "name": "debtors",
                                                          "nodeType": "Identifier",
                                                          "overloadedDeclarations": [],
                                                          "referencedDeclaration": 778,
                                                          "src": "22092:7:0",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                                            "typeString": "address[] storage ref"
                                                          }
                                                        },
                                                        {
                                                          "id": 2121,
                                                          "name": "_address",
                                                          "nodeType": "Identifier",
                                                          "overloadedDeclarations": [],
                                                          "referencedDeclaration": 1757,
                                                          "src": "22101:8:0",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                          }
                                                        }
                                                      ],
                                                      "expression": {
                                                        "argumentTypes": [
                                                          {
                                                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                                            "typeString": "address[] storage ref"
                                                          },
                                                          {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                          }
                                                        ],
                                                        "id": 2119,
                                                        "name": "listContains",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 2312,
                                                        "src": "22079:12:0",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_function_internal_view$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$_t_bool_$",
                                                          "typeString": "function (address[] storage pointer,address) view returns (bool)"
                                                        }
                                                      },
                                                      "id": 2122,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": false,
                                                      "kind": "functionCall",
                                                      "lValueRequested": false,
                                                      "names": [],
                                                      "nodeType": "FunctionCall",
                                                      "src": "22079:31:0",
                                                      "tryCall": false,
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                      }
                                                    },
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_bool",
                                                      "typeString": "bool"
                                                    }
                                                  },
                                                  "id": 2131,
                                                  "nodeType": "IfStatement",
                                                  "src": "22074:83:0",
                                                  "trueBody": {
                                                    "id": 2130,
                                                    "nodeType": "Block",
                                                    "src": "22112:45:0",
                                                    "statements": [
                                                      {
                                                        "expression": {
                                                          "arguments": [
                                                            {
                                                              "id": 2127,
                                                              "name": "_address",
                                                              "nodeType": "Identifier",
                                                              "overloadedDeclarations": [],
                                                              "referencedDeclaration": 1757,
                                                              "src": "22137:8:0",
                                                              "typeDescriptions": {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                              }
                                                            }
                                                          ],
                                                          "expression": {
                                                            "argumentTypes": [
                                                              {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                              }
                                                            ],
                                                            "expression": {
                                                              "id": 2124,
                                                              "name": "debtors",
                                                              "nodeType": "Identifier",
                                                              "overloadedDeclarations": [],
                                                              "referencedDeclaration": 778,
                                                              "src": "22124:7:0",
                                                              "typeDescriptions": {
                                                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                                                "typeString": "address[] storage ref"
                                                              }
                                                            },
                                                            "id": 2126,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "memberName": "push",
                                                            "nodeType": "MemberAccess",
                                                            "src": "22124:12:0",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                                                              "typeString": "function (address[] storage pointer,address)"
                                                            }
                                                          },
                                                          "id": 2128,
                                                          "isConstant": false,
                                                          "isLValue": false,
                                                          "isPure": false,
                                                          "kind": "functionCall",
                                                          "lValueRequested": false,
                                                          "names": [],
                                                          "nodeType": "FunctionCall",
                                                          "src": "22124:22:0",
                                                          "tryCall": false,
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_tuple$__$",
                                                            "typeString": "tuple()"
                                                          }
                                                        },
                                                        "id": 2129,
                                                        "nodeType": "ExpressionStatement",
                                                        "src": "22124:22:0"
                                                      }
                                                    ]
                                                  }
                                                }
                                              ]
                                            }
                                          },
                                          {
                                            "expression": {
                                              "id": 2139,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftHandSide": {
                                                "id": 2134,
                                                "name": "result",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1776,
                                                "src": "22172:6:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_bool",
                                                  "typeString": "bool"
                                                }
                                              },
                                              "nodeType": "Assignment",
                                              "operator": "=",
                                              "rightHandSide": {
                                                "id": 2138,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "nodeType": "UnaryOperation",
                                                "operator": "!",
                                                "prefix": true,
                                                "src": "22181:19:0",
                                                "subExpression": {
                                                  "baseExpression": {
                                                    "id": 2135,
                                                    "name": "isDebtor",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 782,
                                                    "src": "22182:8:0",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                                      "typeString": "mapping(address => bool)"
                                                    }
                                                  },
                                                  "id": 2137,
                                                  "indexExpression": {
                                                    "id": 2136,
                                                    "name": "_address",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 1757,
                                                    "src": "22191:8:0",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_address",
                                                      "typeString": "address"
                                                    }
                                                  },
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "nodeType": "IndexAccess",
                                                  "src": "22182:18:0",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                  }
                                                },
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_bool",
                                                  "typeString": "bool"
                                                }
                                              },
                                              "src": "22172:28:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                              }
                                            },
                                            "id": 2140,
                                            "nodeType": "ExpressionStatement",
                                            "src": "22172:28:0"
                                          },
                                          {
                                            "expression": {
                                              "id": 2145,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftHandSide": {
                                                "baseExpression": {
                                                  "id": 2141,
                                                  "name": "isDebtor",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 782,
                                                  "src": "22208:8:0",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                                    "typeString": "mapping(address => bool)"
                                                  }
                                                },
                                                "id": 2143,
                                                "indexExpression": {
                                                  "id": 2142,
                                                  "name": "_address",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 1757,
                                                  "src": "22217:8:0",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                  }
                                                },
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": true,
                                                "nodeType": "IndexAccess",
                                                "src": "22208:18:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_bool",
                                                  "typeString": "bool"
                                                }
                                              },
                                              "nodeType": "Assignment",
                                              "operator": "=",
                                              "rightHandSide": {
                                                "id": 2144,
                                                "name": "result",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1776,
                                                "src": "22229:6:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_bool",
                                                  "typeString": "bool"
                                                }
                                              },
                                              "src": "22208:27:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                              }
                                            },
                                            "id": 2146,
                                            "nodeType": "ExpressionStatement",
                                            "src": "22208:27:0"
                                          }
                                        ]
                                      }
                                    },
                                    "id": 2214,
                                    "nodeType": "IfStatement",
                                    "src": "21522:1238:0",
                                    "trueBody": {
                                      "id": 2103,
                                      "nodeType": "Block",
                                      "src": "21566:353:0",
                                      "statements": [
                                        {
                                          "condition": {
                                            "arguments": [
                                              {
                                                "id": 2065,
                                                "name": "LiquidityManagerQueue",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 775,
                                                "src": "21602:21:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                                  "typeString": "mapping(address => uint256)"
                                                }
                                              },
                                              {
                                                "id": 2066,
                                                "name": "isLiquidityManager",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 771,
                                                "src": "21625:18:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                                  "typeString": "mapping(address => bool)"
                                                }
                                              },
                                              {
                                                "id": 2067,
                                                "name": "_address",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1757,
                                                "src": "21645:8:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                                  "typeString": "mapping(address => uint256)"
                                                },
                                                {
                                                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                                  "typeString": "mapping(address => bool)"
                                                },
                                                {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              ],
                                              "id": 2064,
                                              "name": "requirements",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 2276,
                                              "src": "21589:12:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_view$_t_mapping$_t_address_$_t_uint256_$_$_t_mapping$_t_address_$_t_bool_$_$_t_address_$returns$_t_bool_$",
                                                "typeString": "function (mapping(address => uint256),mapping(address => bool),address) view returns (bool)"
                                              }
                                            },
                                            "id": 2068,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "functionCall",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "21589:65:0",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bool",
                                              "typeString": "bool"
                                            }
                                          },
                                          "id": 2089,
                                          "nodeType": "IfStatement",
                                          "src": "21585:237:0",
                                          "trueBody": {
                                            "id": 2088,
                                            "nodeType": "Block",
                                            "src": "21656:166:0",
                                            "statements": [
                                              {
                                                "expression": {
                                                  "id": 2073,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "leftHandSide": {
                                                    "baseExpression": {
                                                      "id": 2069,
                                                      "name": "LiquidityManagerQueue",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 775,
                                                      "src": "21666:21:0",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                                        "typeString": "mapping(address => uint256)"
                                                      }
                                                    },
                                                    "id": 2071,
                                                    "indexExpression": {
                                                      "id": 2070,
                                                      "name": "_address",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 1757,
                                                      "src": "21688:8:0",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                      }
                                                    },
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": true,
                                                    "nodeType": "IndexAccess",
                                                    "src": "21666:31:0",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  },
                                                  "nodeType": "Assignment",
                                                  "operator": "=",
                                                  "rightHandSide": {
                                                    "hexValue": "30",
                                                    "id": 2072,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "number",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "21700:1:0",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_rational_0_by_1",
                                                      "typeString": "int_const 0"
                                                    },
                                                    "value": "0"
                                                  },
                                                  "src": "21666:35:0",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "id": 2074,
                                                "nodeType": "ExpressionStatement",
                                                "src": "21666:35:0"
                                              },
                                              {
                                                "condition": {
                                                  "id": 2079,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "nodeType": "UnaryOperation",
                                                  "operator": "!",
                                                  "prefix": true,
                                                  "src": "21715:42:0",
                                                  "subExpression": {
                                                    "arguments": [
                                                      {
                                                        "id": 2076,
                                                        "name": "liquidityManagers",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 767,
                                                        "src": "21729:17:0",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                                          "typeString": "address[] storage ref"
                                                        }
                                                      },
                                                      {
                                                        "id": 2077,
                                                        "name": "_address",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 1757,
                                                        "src": "21748:8:0",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_address",
                                                          "typeString": "address"
                                                        }
                                                      }
                                                    ],
                                                    "expression": {
                                                      "argumentTypes": [
                                                        {
                                                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                                          "typeString": "address[] storage ref"
                                                        },
                                                        {
                                                          "typeIdentifier": "t_address",
                                                          "typeString": "address"
                                                        }
                                                      ],
                                                      "id": 2075,
                                                      "name": "listContains",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 2312,
                                                      "src": "21716:12:0",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_function_internal_view$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$_t_bool_$",
                                                        "typeString": "function (address[] storage pointer,address) view returns (bool)"
                                                      }
                                                    },
                                                    "id": 2078,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "kind": "functionCall",
                                                    "lValueRequested": false,
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "21716:41:0",
                                                    "tryCall": false,
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_bool",
                                                      "typeString": "bool"
                                                    }
                                                  },
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                  }
                                                },
                                                "id": 2087,
                                                "nodeType": "IfStatement",
                                                "src": "21711:103:0",
                                                "trueBody": {
                                                  "id": 2086,
                                                  "nodeType": "Block",
                                                  "src": "21759:55:0",
                                                  "statements": [
                                                    {
                                                      "expression": {
                                                        "arguments": [
                                                          {
                                                            "id": 2083,
                                                            "name": "_address",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 1757,
                                                            "src": "21794:8:0",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_address",
                                                              "typeString": "address"
                                                            }
                                                          }
                                                        ],
                                                        "expression": {
                                                          "argumentTypes": [
                                                            {
                                                              "typeIdentifier": "t_address",
                                                              "typeString": "address"
                                                            }
                                                          ],
                                                          "expression": {
                                                            "id": 2080,
                                                            "name": "liquidityManagers",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 767,
                                                            "src": "21771:17:0",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                                              "typeString": "address[] storage ref"
                                                            }
                                                          },
                                                          "id": 2082,
                                                          "isConstant": false,
                                                          "isLValue": false,
                                                          "isPure": false,
                                                          "lValueRequested": false,
                                                          "memberName": "push",
                                                          "nodeType": "MemberAccess",
                                                          "src": "21771:22:0",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                                                            "typeString": "function (address[] storage pointer,address)"
                                                          }
                                                        },
                                                        "id": 2084,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "kind": "functionCall",
                                                        "lValueRequested": false,
                                                        "names": [],
                                                        "nodeType": "FunctionCall",
                                                        "src": "21771:32:0",
                                                        "tryCall": false,
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_tuple$__$",
                                                          "typeString": "tuple()"
                                                        }
                                                      },
                                                      "id": 2085,
                                                      "nodeType": "ExpressionStatement",
                                                      "src": "21771:32:0"
                                                    }
                                                  ]
                                                }
                                              }
                                            ]
                                          }
                                        },
                                        {
                                          "expression": {
                                            "id": 2095,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftHandSide": {
                                              "id": 2090,
                                              "name": "result",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1776,
                                              "src": "21829:6:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                              }
                                            },
                                            "nodeType": "Assignment",
                                            "operator": "=",
                                            "rightHandSide": {
                                              "id": 2094,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "nodeType": "UnaryOperation",
                                              "operator": "!",
                                              "prefix": true,
                                              "src": "21838:29:0",
                                              "subExpression": {
                                                "baseExpression": {
                                                  "id": 2091,
                                                  "name": "isLiquidityManager",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 771,
                                                  "src": "21839:18:0",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                                    "typeString": "mapping(address => bool)"
                                                  }
                                                },
                                                "id": 2093,
                                                "indexExpression": {
                                                  "id": 2092,
                                                  "name": "_address",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 1757,
                                                  "src": "21858:8:0",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                  }
                                                },
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "nodeType": "IndexAccess",
                                                "src": "21839:28:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_bool",
                                                  "typeString": "bool"
                                                }
                                              },
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                              }
                                            },
                                            "src": "21829:38:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bool",
                                              "typeString": "bool"
                                            }
                                          },
                                          "id": 2096,
                                          "nodeType": "ExpressionStatement",
                                          "src": "21829:38:0"
                                        },
                                        {
                                          "expression": {
                                            "id": 2101,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftHandSide": {
                                              "baseExpression": {
                                                "id": 2097,
                                                "name": "isLiquidityManager",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 771,
                                                "src": "21875:18:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                                  "typeString": "mapping(address => bool)"
                                                }
                                              },
                                              "id": 2099,
                                              "indexExpression": {
                                                "id": 2098,
                                                "name": "_address",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1757,
                                                "src": "21894:8:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              },
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": true,
                                              "nodeType": "IndexAccess",
                                              "src": "21875:28:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                              }
                                            },
                                            "nodeType": "Assignment",
                                            "operator": "=",
                                            "rightHandSide": {
                                              "id": 2100,
                                              "name": "result",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1776,
                                              "src": "21906:6:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                              }
                                            },
                                            "src": "21875:37:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bool",
                                              "typeString": "bool"
                                            }
                                          },
                                          "id": 2102,
                                          "nodeType": "ExpressionStatement",
                                          "src": "21875:37:0"
                                        }
                                      ]
                                    }
                                  },
                                  "id": 2215,
                                  "nodeType": "IfStatement",
                                  "src": "21089:1671:0",
                                  "trueBody": {
                                    "id": 2059,
                                    "nodeType": "Block",
                                    "src": "21131:385:0",
                                    "statements": [
                                      {
                                        "condition": {
                                          "arguments": [
                                            {
                                              "id": 2015,
                                              "name": "LiquidityTokenQueue",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 738,
                                              "src": "21167:19:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                                "typeString": "mapping(address => uint256)"
                                              }
                                            },
                                            {
                                              "id": 2016,
                                              "name": "isLiquidityToken",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 734,
                                              "src": "21188:16:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                                "typeString": "mapping(address => bool)"
                                              }
                                            },
                                            {
                                              "id": 2017,
                                              "name": "_address",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1757,
                                              "src": "21206:8:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                                "typeString": "mapping(address => uint256)"
                                              },
                                              {
                                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                                "typeString": "mapping(address => bool)"
                                              },
                                              {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            ],
                                            "id": 2014,
                                            "name": "requirements",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2276,
                                            "src": "21154:12:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_internal_view$_t_mapping$_t_address_$_t_uint256_$_$_t_mapping$_t_address_$_t_bool_$_$_t_address_$returns$_t_bool_$",
                                              "typeString": "function (mapping(address => uint256),mapping(address => bool),address) view returns (bool)"
                                            }
                                          },
                                          "id": 2018,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "21154:61:0",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        },
                                        "id": 2039,
                                        "nodeType": "IfStatement",
                                        "src": "21150:227:0",
                                        "trueBody": {
                                          "id": 2038,
                                          "nodeType": "Block",
                                          "src": "21217:160:0",
                                          "statements": [
                                            {
                                              "expression": {
                                                "id": 2023,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftHandSide": {
                                                  "baseExpression": {
                                                    "id": 2019,
                                                    "name": "LiquidityTokenQueue",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 738,
                                                    "src": "21227:19:0",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                                      "typeString": "mapping(address => uint256)"
                                                    }
                                                  },
                                                  "id": 2021,
                                                  "indexExpression": {
                                                    "id": 2020,
                                                    "name": "_address",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 1757,
                                                    "src": "21247:8:0",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_address",
                                                      "typeString": "address"
                                                    }
                                                  },
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": true,
                                                  "nodeType": "IndexAccess",
                                                  "src": "21227:29:0",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "nodeType": "Assignment",
                                                "operator": "=",
                                                "rightHandSide": {
                                                  "hexValue": "30",
                                                  "id": 2022,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "kind": "number",
                                                  "lValueRequested": false,
                                                  "nodeType": "Literal",
                                                  "src": "21259:1:0",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_rational_0_by_1",
                                                    "typeString": "int_const 0"
                                                  },
                                                  "value": "0"
                                                },
                                                "src": "21227:33:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "id": 2024,
                                              "nodeType": "ExpressionStatement",
                                              "src": "21227:33:0"
                                            },
                                            {
                                              "condition": {
                                                "id": 2029,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "nodeType": "UnaryOperation",
                                                "operator": "!",
                                                "prefix": true,
                                                "src": "21274:40:0",
                                                "subExpression": {
                                                  "arguments": [
                                                    {
                                                      "id": 2026,
                                                      "name": "liquidityTokens",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 730,
                                                      "src": "21288:15:0",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                                        "typeString": "address[] storage ref"
                                                      }
                                                    },
                                                    {
                                                      "id": 2027,
                                                      "name": "_address",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 1757,
                                                      "src": "21305:8:0",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                      }
                                                    }
                                                  ],
                                                  "expression": {
                                                    "argumentTypes": [
                                                      {
                                                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                                        "typeString": "address[] storage ref"
                                                      },
                                                      {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                      }
                                                    ],
                                                    "id": 2025,
                                                    "name": "listContains",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 2312,
                                                    "src": "21275:12:0",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_function_internal_view$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$_t_bool_$",
                                                      "typeString": "function (address[] storage pointer,address) view returns (bool)"
                                                    }
                                                  },
                                                  "id": 2028,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "kind": "functionCall",
                                                  "lValueRequested": false,
                                                  "names": [],
                                                  "nodeType": "FunctionCall",
                                                  "src": "21275:39:0",
                                                  "tryCall": false,
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                  }
                                                },
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_bool",
                                                  "typeString": "bool"
                                                }
                                              },
                                              "id": 2037,
                                              "nodeType": "IfStatement",
                                              "src": "21270:99:0",
                                              "trueBody": {
                                                "id": 2036,
                                                "nodeType": "Block",
                                                "src": "21316:53:0",
                                                "statements": [
                                                  {
                                                    "expression": {
                                                      "arguments": [
                                                        {
                                                          "id": 2033,
                                                          "name": "_address",
                                                          "nodeType": "Identifier",
                                                          "overloadedDeclarations": [],
                                                          "referencedDeclaration": 1757,
                                                          "src": "21349:8:0",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                          }
                                                        }
                                                      ],
                                                      "expression": {
                                                        "argumentTypes": [
                                                          {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                          }
                                                        ],
                                                        "expression": {
                                                          "id": 2030,
                                                          "name": "liquidityTokens",
                                                          "nodeType": "Identifier",
                                                          "overloadedDeclarations": [],
                                                          "referencedDeclaration": 730,
                                                          "src": "21328:15:0",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                                            "typeString": "address[] storage ref"
                                                          }
                                                        },
                                                        "id": 2032,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "memberName": "push",
                                                        "nodeType": "MemberAccess",
                                                        "src": "21328:20:0",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                                                          "typeString": "function (address[] storage pointer,address)"
                                                        }
                                                      },
                                                      "id": 2034,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": false,
                                                      "kind": "functionCall",
                                                      "lValueRequested": false,
                                                      "names": [],
                                                      "nodeType": "FunctionCall",
                                                      "src": "21328:30:0",
                                                      "tryCall": false,
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_tuple$__$",
                                                        "typeString": "tuple()"
                                                      }
                                                    },
                                                    "id": 2035,
                                                    "nodeType": "ExpressionStatement",
                                                    "src": "21328:30:0"
                                                  }
                                                ]
                                              }
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "expression": {
                                          "id": 2045,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftHandSide": {
                                            "id": 2040,
                                            "name": "result",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1776,
                                            "src": "21384:6:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bool",
                                              "typeString": "bool"
                                            }
                                          },
                                          "nodeType": "Assignment",
                                          "operator": "=",
                                          "rightHandSide": {
                                            "id": 2044,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "UnaryOperation",
                                            "operator": "!",
                                            "prefix": true,
                                            "src": "21393:27:0",
                                            "subExpression": {
                                              "baseExpression": {
                                                "id": 2041,
                                                "name": "isLiquidityToken",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 734,
                                                "src": "21394:16:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                                  "typeString": "mapping(address => bool)"
                                                }
                                              },
                                              "id": 2043,
                                              "indexExpression": {
                                                "id": 2042,
                                                "name": "_address",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1757,
                                                "src": "21411:8:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              },
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "nodeType": "IndexAccess",
                                              "src": "21394:26:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                              }
                                            },
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bool",
                                              "typeString": "bool"
                                            }
                                          },
                                          "src": "21384:36:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        },
                                        "id": 2046,
                                        "nodeType": "ExpressionStatement",
                                        "src": "21384:36:0"
                                      },
                                      {
                                        "expression": {
                                          "id": 2051,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftHandSide": {
                                            "baseExpression": {
                                              "id": 2047,
                                              "name": "isLiquidityToken",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 734,
                                              "src": "21428:16:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                                "typeString": "mapping(address => bool)"
                                              }
                                            },
                                            "id": 2049,
                                            "indexExpression": {
                                              "id": 2048,
                                              "name": "_address",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1757,
                                              "src": "21445:8:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": true,
                                            "nodeType": "IndexAccess",
                                            "src": "21428:26:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bool",
                                              "typeString": "bool"
                                            }
                                          },
                                          "nodeType": "Assignment",
                                          "operator": "=",
                                          "rightHandSide": {
                                            "id": 2050,
                                            "name": "result",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1776,
                                            "src": "21457:6:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bool",
                                              "typeString": "bool"
                                            }
                                          },
                                          "src": "21428:35:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        },
                                        "id": 2052,
                                        "nodeType": "ExpressionStatement",
                                        "src": "21428:35:0"
                                      },
                                      {
                                        "expression": {
                                          "id": 2057,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftHandSide": {
                                            "baseExpression": {
                                              "id": 2053,
                                              "name": "bondCalculator",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 753,
                                              "src": "21471:14:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                                                "typeString": "mapping(address => address)"
                                              }
                                            },
                                            "id": 2055,
                                            "indexExpression": {
                                              "id": 2054,
                                              "name": "_address",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1757,
                                              "src": "21486:8:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": true,
                                            "nodeType": "IndexAccess",
                                            "src": "21471:24:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          },
                                          "nodeType": "Assignment",
                                          "operator": "=",
                                          "rightHandSide": {
                                            "id": 2056,
                                            "name": "_calculator",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1759,
                                            "src": "21498:11:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          },
                                          "src": "21471:38:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        "id": 2058,
                                        "nodeType": "ExpressionStatement",
                                        "src": "21471:38:0"
                                      }
                                    ]
                                  }
                                },
                                "id": 2216,
                                "nodeType": "IfStatement",
                                "src": "20610:2150:0",
                                "trueBody": {
                                  "id": 2009,
                                  "nodeType": "Block",
                                  "src": "20656:427:0",
                                  "statements": [
                                    {
                                      "condition": {
                                        "arguments": [
                                          {
                                            "id": 1965,
                                            "name": "LiquidityDepositorQueue",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 749,
                                            "src": "20701:23:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                              "typeString": "mapping(address => uint256)"
                                            }
                                          },
                                          {
                                            "id": 1966,
                                            "name": "isLiquidityDepositor",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 745,
                                            "src": "20726:20:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                              "typeString": "mapping(address => bool)"
                                            }
                                          },
                                          {
                                            "id": 1967,
                                            "name": "_address",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1757,
                                            "src": "20748:8:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                              "typeString": "mapping(address => uint256)"
                                            },
                                            {
                                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                              "typeString": "mapping(address => bool)"
                                            },
                                            {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          ],
                                          "id": 1964,
                                          "name": "requirements",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2276,
                                          "src": "20688:12:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_internal_view$_t_mapping$_t_address_$_t_uint256_$_$_t_mapping$_t_address_$_t_bool_$_$_t_address_$returns$_t_bool_$",
                                            "typeString": "function (mapping(address => uint256),mapping(address => bool),address) view returns (bool)"
                                          }
                                        },
                                        "id": 1968,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "20688:69:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "id": 1995,
                                      "nodeType": "IfStatement",
                                      "src": "20675:307:0",
                                      "trueBody": {
                                        "id": 1994,
                                        "nodeType": "Block",
                                        "src": "20766:216:0",
                                        "statements": [
                                          {
                                            "expression": {
                                              "arguments": [
                                                {
                                                  "id": 1972,
                                                  "name": "_address",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 1757,
                                                  "src": "20801:8:0",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                  }
                                                }
                                              ],
                                              "expression": {
                                                "argumentTypes": [
                                                  {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                  }
                                                ],
                                                "expression": {
                                                  "id": 1969,
                                                  "name": "liquidityDepositors",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 741,
                                                  "src": "20776:19:0",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                                    "typeString": "address[] storage ref"
                                                  }
                                                },
                                                "id": 1971,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "push",
                                                "nodeType": "MemberAccess",
                                                "src": "20776:24:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                                                  "typeString": "function (address[] storage pointer,address)"
                                                }
                                              },
                                              "id": 1973,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "kind": "functionCall",
                                              "lValueRequested": false,
                                              "names": [],
                                              "nodeType": "FunctionCall",
                                              "src": "20776:34:0",
                                              "tryCall": false,
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_tuple$__$",
                                                "typeString": "tuple()"
                                              }
                                            },
                                            "id": 1974,
                                            "nodeType": "ExpressionStatement",
                                            "src": "20776:34:0"
                                          },
                                          {
                                            "expression": {
                                              "id": 1979,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftHandSide": {
                                                "baseExpression": {
                                                  "id": 1975,
                                                  "name": "LiquidityDepositorQueue",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 749,
                                                  "src": "20820:23:0",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                                    "typeString": "mapping(address => uint256)"
                                                  }
                                                },
                                                "id": 1977,
                                                "indexExpression": {
                                                  "id": 1976,
                                                  "name": "_address",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 1757,
                                                  "src": "20844:8:0",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                  }
                                                },
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": true,
                                                "nodeType": "IndexAccess",
                                                "src": "20820:33:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "nodeType": "Assignment",
                                              "operator": "=",
                                              "rightHandSide": {
                                                "hexValue": "30",
                                                "id": 1978,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "number",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "20856:1:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_rational_0_by_1",
                                                  "typeString": "int_const 0"
                                                },
                                                "value": "0"
                                              },
                                              "src": "20820:37:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "id": 1980,
                                            "nodeType": "ExpressionStatement",
                                            "src": "20820:37:0"
                                          },
                                          {
                                            "condition": {
                                              "id": 1985,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "nodeType": "UnaryOperation",
                                              "operator": "!",
                                              "prefix": true,
                                              "src": "20871:44:0",
                                              "subExpression": {
                                                "arguments": [
                                                  {
                                                    "id": 1982,
                                                    "name": "liquidityDepositors",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 741,
                                                    "src": "20885:19:0",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                                      "typeString": "address[] storage ref"
                                                    }
                                                  },
                                                  {
                                                    "id": 1983,
                                                    "name": "_address",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 1757,
                                                    "src": "20906:8:0",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_address",
                                                      "typeString": "address"
                                                    }
                                                  }
                                                ],
                                                "expression": {
                                                  "argumentTypes": [
                                                    {
                                                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                                      "typeString": "address[] storage ref"
                                                    },
                                                    {
                                                      "typeIdentifier": "t_address",
                                                      "typeString": "address"
                                                    }
                                                  ],
                                                  "id": 1981,
                                                  "name": "listContains",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 2312,
                                                  "src": "20872:12:0",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_function_internal_view$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$_t_bool_$",
                                                    "typeString": "function (address[] storage pointer,address) view returns (bool)"
                                                  }
                                                },
                                                "id": 1984,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "20872:43:0",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_bool",
                                                  "typeString": "bool"
                                                }
                                              },
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                              }
                                            },
                                            "id": 1993,
                                            "nodeType": "IfStatement",
                                            "src": "20867:107:0",
                                            "trueBody": {
                                              "id": 1992,
                                              "nodeType": "Block",
                                              "src": "20917:57:0",
                                              "statements": [
                                                {
                                                  "expression": {
                                                    "arguments": [
                                                      {
                                                        "id": 1989,
                                                        "name": "_address",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 1757,
                                                        "src": "20954:8:0",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_address",
                                                          "typeString": "address"
                                                        }
                                                      }
                                                    ],
                                                    "expression": {
                                                      "argumentTypes": [
                                                        {
                                                          "typeIdentifier": "t_address",
                                                          "typeString": "address"
                                                        }
                                                      ],
                                                      "expression": {
                                                        "id": 1986,
                                                        "name": "liquidityDepositors",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 741,
                                                        "src": "20929:19:0",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                                          "typeString": "address[] storage ref"
                                                        }
                                                      },
                                                      "id": 1988,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "memberName": "push",
                                                      "nodeType": "MemberAccess",
                                                      "src": "20929:24:0",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                                                        "typeString": "function (address[] storage pointer,address)"
                                                      }
                                                    },
                                                    "id": 1990,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "kind": "functionCall",
                                                    "lValueRequested": false,
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "20929:34:0",
                                                    "tryCall": false,
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_tuple$__$",
                                                      "typeString": "tuple()"
                                                    }
                                                  },
                                                  "id": 1991,
                                                  "nodeType": "ExpressionStatement",
                                                  "src": "20929:34:0"
                                                }
                                              ]
                                            }
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "expression": {
                                        "id": 2001,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                          "id": 1996,
                                          "name": "result",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1776,
                                          "src": "20989:6:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                          "id": 2000,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "UnaryOperation",
                                          "operator": "!",
                                          "prefix": true,
                                          "src": "20998:31:0",
                                          "subExpression": {
                                            "baseExpression": {
                                              "id": 1997,
                                              "name": "isLiquidityDepositor",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 745,
                                              "src": "20999:20:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                                "typeString": "mapping(address => bool)"
                                              }
                                            },
                                            "id": 1999,
                                            "indexExpression": {
                                              "id": 1998,
                                              "name": "_address",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1757,
                                              "src": "21020:8:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "20999:30:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bool",
                                              "typeString": "bool"
                                            }
                                          },
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        },
                                        "src": "20989:40:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "id": 2002,
                                      "nodeType": "ExpressionStatement",
                                      "src": "20989:40:0"
                                    },
                                    {
                                      "expression": {
                                        "id": 2007,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                          "baseExpression": {
                                            "id": 2003,
                                            "name": "isLiquidityDepositor",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 745,
                                            "src": "21037:20:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                              "typeString": "mapping(address => bool)"
                                            }
                                          },
                                          "id": 2005,
                                          "indexExpression": {
                                            "id": 2004,
                                            "name": "_address",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1757,
                                            "src": "21058:8:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": true,
                                          "nodeType": "IndexAccess",
                                          "src": "21037:30:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                          "id": 2006,
                                          "name": "result",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1776,
                                          "src": "21070:6:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        },
                                        "src": "21037:39:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "id": 2008,
                                      "nodeType": "ExpressionStatement",
                                      "src": "21037:39:0"
                                    }
                                  ]
                                }
                              },
                              "id": 2217,
                              "nodeType": "IfStatement",
                              "src": "20183:2577:0",
                              "trueBody": {
                                "id": 1959,
                                "nodeType": "Block",
                                "src": "20225:379:0",
                                "statements": [
                                  {
                                    "condition": {
                                      "arguments": [
                                        {
                                          "id": 1915,
                                          "name": "ReserveManagerQueue",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 764,
                                          "src": "20261:19:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                            "typeString": "mapping(address => uint256)"
                                          }
                                        },
                                        {
                                          "id": 1916,
                                          "name": "isReserveManager",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 760,
                                          "src": "20282:16:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                            "typeString": "mapping(address => bool)"
                                          }
                                        },
                                        {
                                          "id": 1917,
                                          "name": "_address",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1757,
                                          "src": "20300:8:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                            "typeString": "mapping(address => uint256)"
                                          },
                                          {
                                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                            "typeString": "mapping(address => bool)"
                                          },
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        ],
                                        "id": 1914,
                                        "name": "requirements",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2276,
                                        "src": "20248:12:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_view$_t_mapping$_t_address_$_t_uint256_$_$_t_mapping$_t_address_$_t_bool_$_$_t_address_$returns$_t_bool_$",
                                          "typeString": "function (mapping(address => uint256),mapping(address => bool),address) view returns (bool)"
                                        }
                                      },
                                      "id": 1918,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "20248:61:0",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "id": 1945,
                                    "nodeType": "IfStatement",
                                    "src": "20244:267:0",
                                    "trueBody": {
                                      "id": 1944,
                                      "nodeType": "Block",
                                      "src": "20311:200:0",
                                      "statements": [
                                        {
                                          "expression": {
                                            "arguments": [
                                              {
                                                "id": 1922,
                                                "name": "_address",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1757,
                                                "src": "20342:8:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              ],
                                              "expression": {
                                                "id": 1919,
                                                "name": "reserveManagers",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 756,
                                                "src": "20321:15:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                                  "typeString": "address[] storage ref"
                                                }
                                              },
                                              "id": 1921,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "push",
                                              "nodeType": "MemberAccess",
                                              "src": "20321:20:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                                                "typeString": "function (address[] storage pointer,address)"
                                              }
                                            },
                                            "id": 1923,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "functionCall",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "20321:30:0",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_tuple$__$",
                                              "typeString": "tuple()"
                                            }
                                          },
                                          "id": 1924,
                                          "nodeType": "ExpressionStatement",
                                          "src": "20321:30:0"
                                        },
                                        {
                                          "expression": {
                                            "id": 1929,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftHandSide": {
                                              "baseExpression": {
                                                "id": 1925,
                                                "name": "ReserveManagerQueue",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 764,
                                                "src": "20361:19:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                                  "typeString": "mapping(address => uint256)"
                                                }
                                              },
                                              "id": 1927,
                                              "indexExpression": {
                                                "id": 1926,
                                                "name": "_address",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1757,
                                                "src": "20381:8:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              },
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": true,
                                              "nodeType": "IndexAccess",
                                              "src": "20361:29:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "nodeType": "Assignment",
                                            "operator": "=",
                                            "rightHandSide": {
                                              "hexValue": "30",
                                              "id": 1928,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "number",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "20393:1:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_rational_0_by_1",
                                                "typeString": "int_const 0"
                                              },
                                              "value": "0"
                                            },
                                            "src": "20361:33:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "id": 1930,
                                          "nodeType": "ExpressionStatement",
                                          "src": "20361:33:0"
                                        },
                                        {
                                          "condition": {
                                            "id": 1935,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "UnaryOperation",
                                            "operator": "!",
                                            "prefix": true,
                                            "src": "20408:40:0",
                                            "subExpression": {
                                              "arguments": [
                                                {
                                                  "id": 1932,
                                                  "name": "reserveManagers",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 756,
                                                  "src": "20422:15:0",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                                    "typeString": "address[] storage ref"
                                                  }
                                                },
                                                {
                                                  "id": 1933,
                                                  "name": "_address",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 1757,
                                                  "src": "20439:8:0",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                  }
                                                }
                                              ],
                                              "expression": {
                                                "argumentTypes": [
                                                  {
                                                    "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                                    "typeString": "address[] storage ref"
                                                  },
                                                  {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                  }
                                                ],
                                                "id": 1931,
                                                "name": "listContains",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 2312,
                                                "src": "20409:12:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_function_internal_view$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$_t_bool_$",
                                                  "typeString": "function (address[] storage pointer,address) view returns (bool)"
                                                }
                                              },
                                              "id": 1934,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "kind": "functionCall",
                                              "lValueRequested": false,
                                              "names": [],
                                              "nodeType": "FunctionCall",
                                              "src": "20409:39:0",
                                              "tryCall": false,
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                              }
                                            },
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bool",
                                              "typeString": "bool"
                                            }
                                          },
                                          "id": 1943,
                                          "nodeType": "IfStatement",
                                          "src": "20404:99:0",
                                          "trueBody": {
                                            "id": 1942,
                                            "nodeType": "Block",
                                            "src": "20450:53:0",
                                            "statements": [
                                              {
                                                "expression": {
                                                  "arguments": [
                                                    {
                                                      "id": 1939,
                                                      "name": "_address",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 1757,
                                                      "src": "20483:8:0",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                      }
                                                    }
                                                  ],
                                                  "expression": {
                                                    "argumentTypes": [
                                                      {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                      }
                                                    ],
                                                    "expression": {
                                                      "id": 1936,
                                                      "name": "reserveManagers",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 756,
                                                      "src": "20462:15:0",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                                        "typeString": "address[] storage ref"
                                                      }
                                                    },
                                                    "id": 1938,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "push",
                                                    "nodeType": "MemberAccess",
                                                    "src": "20462:20:0",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                                                      "typeString": "function (address[] storage pointer,address)"
                                                    }
                                                  },
                                                  "id": 1940,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "kind": "functionCall",
                                                  "lValueRequested": false,
                                                  "names": [],
                                                  "nodeType": "FunctionCall",
                                                  "src": "20462:30:0",
                                                  "tryCall": false,
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                  }
                                                },
                                                "id": 1941,
                                                "nodeType": "ExpressionStatement",
                                                "src": "20462:30:0"
                                              }
                                            ]
                                          }
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 1951,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "id": 1946,
                                        "name": "result",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1776,
                                        "src": "20518:6:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "id": 1950,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "UnaryOperation",
                                        "operator": "!",
                                        "prefix": true,
                                        "src": "20527:27:0",
                                        "subExpression": {
                                          "baseExpression": {
                                            "id": 1947,
                                            "name": "isReserveManager",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 760,
                                            "src": "20528:16:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                              "typeString": "mapping(address => bool)"
                                            }
                                          },
                                          "id": 1949,
                                          "indexExpression": {
                                            "id": 1948,
                                            "name": "_address",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1757,
                                            "src": "20545:8:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "20528:26:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        },
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "src": "20518:36:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "id": 1952,
                                    "nodeType": "ExpressionStatement",
                                    "src": "20518:36:0"
                                  },
                                  {
                                    "expression": {
                                      "id": 1957,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "baseExpression": {
                                          "id": 1953,
                                          "name": "isReserveManager",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 760,
                                          "src": "20562:16:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                            "typeString": "mapping(address => bool)"
                                          }
                                        },
                                        "id": 1955,
                                        "indexExpression": {
                                          "id": 1954,
                                          "name": "_address",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1757,
                                          "src": "20579:8:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": true,
                                        "nodeType": "IndexAccess",
                                        "src": "20562:26:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "id": 1956,
                                        "name": "result",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1776,
                                        "src": "20591:6:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "src": "20562:35:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "id": 1958,
                                    "nodeType": "ExpressionStatement",
                                    "src": "20562:35:0"
                                  }
                                ]
                              }
                            },
                            "id": 2218,
                            "nodeType": "IfStatement",
                            "src": "19812:2948:0",
                            "trueBody": {
                              "id": 1909,
                              "nodeType": "Block",
                              "src": "19852:325:0",
                              "statements": [
                                {
                                  "condition": {
                                    "arguments": [
                                      {
                                        "id": 1871,
                                        "name": "reserveTokenQueue",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 705,
                                        "src": "19888:17:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                          "typeString": "mapping(address => uint256)"
                                        }
                                      },
                                      {
                                        "id": 1872,
                                        "name": "isReserveToken",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 701,
                                        "src": "19907:14:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                          "typeString": "mapping(address => bool)"
                                        }
                                      },
                                      {
                                        "id": 1873,
                                        "name": "_address",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1757,
                                        "src": "19923:8:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                          "typeString": "mapping(address => uint256)"
                                        },
                                        {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                          "typeString": "mapping(address => bool)"
                                        },
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 1870,
                                      "name": "requirements",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2276,
                                      "src": "19875:12:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_view$_t_mapping$_t_address_$_t_uint256_$_$_t_mapping$_t_address_$_t_bool_$_$_t_address_$returns$_t_bool_$",
                                        "typeString": "function (mapping(address => uint256),mapping(address => bool),address) view returns (bool)"
                                      }
                                    },
                                    "id": 1874,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "19875:57:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "id": 1895,
                                  "nodeType": "IfStatement",
                                  "src": "19871:217:0",
                                  "trueBody": {
                                    "id": 1894,
                                    "nodeType": "Block",
                                    "src": "19934:154:0",
                                    "statements": [
                                      {
                                        "expression": {
                                          "id": 1879,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftHandSide": {
                                            "baseExpression": {
                                              "id": 1875,
                                              "name": "reserveTokenQueue",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 705,
                                              "src": "19944:17:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                                "typeString": "mapping(address => uint256)"
                                              }
                                            },
                                            "id": 1877,
                                            "indexExpression": {
                                              "id": 1876,
                                              "name": "_address",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1757,
                                              "src": "19962:8:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": true,
                                            "nodeType": "IndexAccess",
                                            "src": "19944:27:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "Assignment",
                                          "operator": "=",
                                          "rightHandSide": {
                                            "hexValue": "30",
                                            "id": 1878,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "19974:1:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_0_by_1",
                                              "typeString": "int_const 0"
                                            },
                                            "value": "0"
                                          },
                                          "src": "19944:31:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "id": 1880,
                                        "nodeType": "ExpressionStatement",
                                        "src": "19944:31:0"
                                      },
                                      {
                                        "condition": {
                                          "id": 1885,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "UnaryOperation",
                                          "operator": "!",
                                          "prefix": true,
                                          "src": "19989:38:0",
                                          "subExpression": {
                                            "arguments": [
                                              {
                                                "id": 1882,
                                                "name": "reserveTokens",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 697,
                                                "src": "20003:13:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                                  "typeString": "address[] storage ref"
                                                }
                                              },
                                              {
                                                "id": 1883,
                                                "name": "_address",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1757,
                                                "src": "20018:8:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                                  "typeString": "address[] storage ref"
                                                },
                                                {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              ],
                                              "id": 1881,
                                              "name": "listContains",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 2312,
                                              "src": "19990:12:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_view$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$_t_bool_$",
                                                "typeString": "function (address[] storage pointer,address) view returns (bool)"
                                              }
                                            },
                                            "id": 1884,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "functionCall",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "19990:37:0",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bool",
                                              "typeString": "bool"
                                            }
                                          },
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        },
                                        "id": 1893,
                                        "nodeType": "IfStatement",
                                        "src": "19985:95:0",
                                        "trueBody": {
                                          "id": 1892,
                                          "nodeType": "Block",
                                          "src": "20029:51:0",
                                          "statements": [
                                            {
                                              "expression": {
                                                "arguments": [
                                                  {
                                                    "id": 1889,
                                                    "name": "_address",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 1757,
                                                    "src": "20060:8:0",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_address",
                                                      "typeString": "address"
                                                    }
                                                  }
                                                ],
                                                "expression": {
                                                  "argumentTypes": [
                                                    {
                                                      "typeIdentifier": "t_address",
                                                      "typeString": "address"
                                                    }
                                                  ],
                                                  "expression": {
                                                    "id": 1886,
                                                    "name": "reserveTokens",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 697,
                                                    "src": "20041:13:0",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                                      "typeString": "address[] storage ref"
                                                    }
                                                  },
                                                  "id": 1888,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "memberName": "push",
                                                  "nodeType": "MemberAccess",
                                                  "src": "20041:18:0",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                                                    "typeString": "function (address[] storage pointer,address)"
                                                  }
                                                },
                                                "id": 1890,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "20041:28:0",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_tuple$__$",
                                                  "typeString": "tuple()"
                                                }
                                              },
                                              "id": 1891,
                                              "nodeType": "ExpressionStatement",
                                              "src": "20041:28:0"
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 1901,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "id": 1896,
                                      "name": "result",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1776,
                                      "src": "20095:6:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "=",
                                    "rightHandSide": {
                                      "id": 1900,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "UnaryOperation",
                                      "operator": "!",
                                      "prefix": true,
                                      "src": "20104:25:0",
                                      "subExpression": {
                                        "baseExpression": {
                                          "id": 1897,
                                          "name": "isReserveToken",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 701,
                                          "src": "20105:14:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                            "typeString": "mapping(address => bool)"
                                          }
                                        },
                                        "id": 1899,
                                        "indexExpression": {
                                          "id": 1898,
                                          "name": "_address",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1757,
                                          "src": "20120:8:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "20105:24:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "src": "20095:34:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "id": 1902,
                                  "nodeType": "ExpressionStatement",
                                  "src": "20095:34:0"
                                },
                                {
                                  "expression": {
                                    "id": 1907,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "baseExpression": {
                                        "id": 1903,
                                        "name": "isReserveToken",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 701,
                                        "src": "20137:14:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                          "typeString": "mapping(address => bool)"
                                        }
                                      },
                                      "id": 1905,
                                      "indexExpression": {
                                        "id": 1904,
                                        "name": "_address",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1757,
                                        "src": "20152:8:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "nodeType": "IndexAccess",
                                      "src": "20137:24:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "=",
                                    "rightHandSide": {
                                      "id": 1906,
                                      "name": "result",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1776,
                                      "src": "20164:6:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "src": "20137:33:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "id": 1908,
                                  "nodeType": "ExpressionStatement",
                                  "src": "20137:33:0"
                                }
                              ]
                            }
                          },
                          "id": 2219,
                          "nodeType": "IfStatement",
                          "src": "19425:3335:0",
                          "trueBody": {
                            "id": 1865,
                            "nodeType": "Block",
                            "src": "19467:339:0",
                            "statements": [
                              {
                                "condition": {
                                  "arguments": [
                                    {
                                      "id": 1827,
                                      "name": "reserveSpenderQueue",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 727,
                                      "src": "19503:19:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                        "typeString": "mapping(address => uint256)"
                                      }
                                    },
                                    {
                                      "id": 1828,
                                      "name": "isReserveSpender",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 723,
                                      "src": "19524:16:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                        "typeString": "mapping(address => bool)"
                                      }
                                    },
                                    {
                                      "id": 1829,
                                      "name": "_address",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1757,
                                      "src": "19542:8:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                        "typeString": "mapping(address => uint256)"
                                      },
                                      {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                        "typeString": "mapping(address => bool)"
                                      },
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 1826,
                                    "name": "requirements",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2276,
                                    "src": "19490:12:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$_t_mapping$_t_address_$_t_uint256_$_$_t_mapping$_t_address_$_t_bool_$_$_t_address_$returns$_t_bool_$",
                                      "typeString": "function (mapping(address => uint256),mapping(address => bool),address) view returns (bool)"
                                    }
                                  },
                                  "id": 1830,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "19490:61:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "id": 1851,
                                "nodeType": "IfStatement",
                                "src": "19486:227:0",
                                "trueBody": {
                                  "id": 1850,
                                  "nodeType": "Block",
                                  "src": "19553:160:0",
                                  "statements": [
                                    {
                                      "expression": {
                                        "id": 1835,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                          "baseExpression": {
                                            "id": 1831,
                                            "name": "reserveSpenderQueue",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 727,
                                            "src": "19563:19:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                              "typeString": "mapping(address => uint256)"
                                            }
                                          },
                                          "id": 1833,
                                          "indexExpression": {
                                            "id": 1832,
                                            "name": "_address",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1757,
                                            "src": "19583:8:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": true,
                                          "nodeType": "IndexAccess",
                                          "src": "19563:29:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                          "hexValue": "30",
                                          "id": 1834,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "19595:1:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_0_by_1",
                                            "typeString": "int_const 0"
                                          },
                                          "value": "0"
                                        },
                                        "src": "19563:33:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "id": 1836,
                                      "nodeType": "ExpressionStatement",
                                      "src": "19563:33:0"
                                    },
                                    {
                                      "condition": {
                                        "id": 1841,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "UnaryOperation",
                                        "operator": "!",
                                        "prefix": true,
                                        "src": "19610:40:0",
                                        "subExpression": {
                                          "arguments": [
                                            {
                                              "id": 1838,
                                              "name": "reserveSpenders",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 719,
                                              "src": "19624:15:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                                "typeString": "address[] storage ref"
                                              }
                                            },
                                            {
                                              "id": 1839,
                                              "name": "_address",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1757,
                                              "src": "19641:8:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                                "typeString": "address[] storage ref"
                                              },
                                              {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            ],
                                            "id": 1837,
                                            "name": "listContains",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2312,
                                            "src": "19611:12:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_internal_view$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$_t_bool_$",
                                              "typeString": "function (address[] storage pointer,address) view returns (bool)"
                                            }
                                          },
                                          "id": 1840,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "19611:39:0",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        },
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "id": 1849,
                                      "nodeType": "IfStatement",
                                      "src": "19606:99:0",
                                      "trueBody": {
                                        "id": 1848,
                                        "nodeType": "Block",
                                        "src": "19652:53:0",
                                        "statements": [
                                          {
                                            "expression": {
                                              "arguments": [
                                                {
                                                  "id": 1845,
                                                  "name": "_address",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 1757,
                                                  "src": "19685:8:0",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                  }
                                                }
                                              ],
                                              "expression": {
                                                "argumentTypes": [
                                                  {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                  }
                                                ],
                                                "expression": {
                                                  "id": 1842,
                                                  "name": "reserveSpenders",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 719,
                                                  "src": "19664:15:0",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                                    "typeString": "address[] storage ref"
                                                  }
                                                },
                                                "id": 1844,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "push",
                                                "nodeType": "MemberAccess",
                                                "src": "19664:20:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                                                  "typeString": "function (address[] storage pointer,address)"
                                                }
                                              },
                                              "id": 1846,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "kind": "functionCall",
                                              "lValueRequested": false,
                                              "names": [],
                                              "nodeType": "FunctionCall",
                                              "src": "19664:30:0",
                                              "tryCall": false,
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_tuple$__$",
                                                "typeString": "tuple()"
                                              }
                                            },
                                            "id": 1847,
                                            "nodeType": "ExpressionStatement",
                                            "src": "19664:30:0"
                                          }
                                        ]
                                      }
                                    }
                                  ]
                                }
                              },
                              {
                                "expression": {
                                  "id": 1857,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftHandSide": {
                                    "id": 1852,
                                    "name": "result",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1776,
                                    "src": "19720:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "nodeType": "Assignment",
                                  "operator": "=",
                                  "rightHandSide": {
                                    "id": 1856,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "UnaryOperation",
                                    "operator": "!",
                                    "prefix": true,
                                    "src": "19729:27:0",
                                    "subExpression": {
                                      "baseExpression": {
                                        "id": 1853,
                                        "name": "isReserveSpender",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 723,
                                        "src": "19730:16:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                          "typeString": "mapping(address => bool)"
                                        }
                                      },
                                      "id": 1855,
                                      "indexExpression": {
                                        "id": 1854,
                                        "name": "_address",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1757,
                                        "src": "19747:8:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "19730:26:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "src": "19720:36:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "id": 1858,
                                "nodeType": "ExpressionStatement",
                                "src": "19720:36:0"
                              },
                              {
                                "expression": {
                                  "id": 1863,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftHandSide": {
                                    "baseExpression": {
                                      "id": 1859,
                                      "name": "isReserveSpender",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 723,
                                      "src": "19764:16:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                        "typeString": "mapping(address => bool)"
                                      }
                                    },
                                    "id": 1861,
                                    "indexExpression": {
                                      "id": 1860,
                                      "name": "_address",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1757,
                                      "src": "19781:8:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": true,
                                    "nodeType": "IndexAccess",
                                    "src": "19764:26:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "nodeType": "Assignment",
                                  "operator": "=",
                                  "rightHandSide": {
                                    "id": 1862,
                                    "name": "result",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1776,
                                    "src": "19793:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "src": "19764:35:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "id": 1864,
                                "nodeType": "ExpressionStatement",
                                "src": "19764:35:0"
                              }
                            ]
                          }
                        },
                        "id": 2220,
                        "nodeType": "IfStatement",
                        "src": "19022:3738:0",
                        "trueBody": {
                          "id": 1821,
                          "nodeType": "Block",
                          "src": "19066:353:0",
                          "statements": [
                            {
                              "condition": {
                                "arguments": [
                                  {
                                    "id": 1783,
                                    "name": "reserveDepositorQueue",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 716,
                                    "src": "19102:21:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                      "typeString": "mapping(address => uint256)"
                                    }
                                  },
                                  {
                                    "id": 1784,
                                    "name": "isReserveDepositor",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 712,
                                    "src": "19125:18:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                      "typeString": "mapping(address => bool)"
                                    }
                                  },
                                  {
                                    "id": 1785,
                                    "name": "_address",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1757,
                                    "src": "19145:8:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                      "typeString": "mapping(address => uint256)"
                                    },
                                    {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                      "typeString": "mapping(address => bool)"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 1782,
                                  "name": "requirements",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2276,
                                  "src": "19089:12:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_mapping$_t_address_$_t_uint256_$_$_t_mapping$_t_address_$_t_bool_$_$_t_address_$returns$_t_bool_$",
                                    "typeString": "function (mapping(address => uint256),mapping(address => bool),address) view returns (bool)"
                                  }
                                },
                                "id": 1786,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "19089:65:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1807,
                              "nodeType": "IfStatement",
                              "src": "19085:237:0",
                              "trueBody": {
                                "id": 1806,
                                "nodeType": "Block",
                                "src": "19156:166:0",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 1791,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "baseExpression": {
                                          "id": 1787,
                                          "name": "reserveDepositorQueue",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 716,
                                          "src": "19166:21:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                            "typeString": "mapping(address => uint256)"
                                          }
                                        },
                                        "id": 1789,
                                        "indexExpression": {
                                          "id": 1788,
                                          "name": "_address",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1757,
                                          "src": "19188:8:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": true,
                                        "nodeType": "IndexAccess",
                                        "src": "19166:31:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "hexValue": "30",
                                        "id": 1790,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "19200:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      },
                                      "src": "19166:35:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 1792,
                                    "nodeType": "ExpressionStatement",
                                    "src": "19166:35:0"
                                  },
                                  {
                                    "condition": {
                                      "id": 1797,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "UnaryOperation",
                                      "operator": "!",
                                      "prefix": true,
                                      "src": "19215:42:0",
                                      "subExpression": {
                                        "arguments": [
                                          {
                                            "id": 1794,
                                            "name": "reserveDepositors",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 708,
                                            "src": "19229:17:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                              "typeString": "address[] storage ref"
                                            }
                                          },
                                          {
                                            "id": 1795,
                                            "name": "_address",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1757,
                                            "src": "19248:8:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                              "typeString": "address[] storage ref"
                                            },
                                            {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          ],
                                          "id": 1793,
                                          "name": "listContains",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2312,
                                          "src": "19216:12:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_internal_view$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$_t_bool_$",
                                            "typeString": "function (address[] storage pointer,address) view returns (bool)"
                                          }
                                        },
                                        "id": 1796,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "19216:41:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "id": 1805,
                                    "nodeType": "IfStatement",
                                    "src": "19211:103:0",
                                    "trueBody": {
                                      "id": 1804,
                                      "nodeType": "Block",
                                      "src": "19259:55:0",
                                      "statements": [
                                        {
                                          "expression": {
                                            "arguments": [
                                              {
                                                "id": 1801,
                                                "name": "_address",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1757,
                                                "src": "19294:8:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              ],
                                              "expression": {
                                                "id": 1798,
                                                "name": "reserveDepositors",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 708,
                                                "src": "19271:17:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                                  "typeString": "address[] storage ref"
                                                }
                                              },
                                              "id": 1800,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "push",
                                              "nodeType": "MemberAccess",
                                              "src": "19271:22:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                                                "typeString": "function (address[] storage pointer,address)"
                                              }
                                            },
                                            "id": 1802,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "functionCall",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "19271:32:0",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_tuple$__$",
                                              "typeString": "tuple()"
                                            }
                                          },
                                          "id": 1803,
                                          "nodeType": "ExpressionStatement",
                                          "src": "19271:32:0"
                                        }
                                      ]
                                    }
                                  }
                                ]
                              }
                            },
                            {
                              "expression": {
                                "id": 1813,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 1808,
                                  "name": "result",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1776,
                                  "src": "19329:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 1812,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "UnaryOperation",
                                  "operator": "!",
                                  "prefix": true,
                                  "src": "19338:29:0",
                                  "subExpression": {
                                    "baseExpression": {
                                      "id": 1809,
                                      "name": "isReserveDepositor",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 712,
                                      "src": "19339:18:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                        "typeString": "mapping(address => bool)"
                                      }
                                    },
                                    "id": 1811,
                                    "indexExpression": {
                                      "id": 1810,
                                      "name": "_address",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1757,
                                      "src": "19358:8:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "19339:28:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "src": "19329:38:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1814,
                              "nodeType": "ExpressionStatement",
                              "src": "19329:38:0"
                            },
                            {
                              "expression": {
                                "id": 1819,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 1815,
                                    "name": "isReserveDepositor",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 712,
                                    "src": "19375:18:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                      "typeString": "mapping(address => bool)"
                                    }
                                  },
                                  "id": 1817,
                                  "indexExpression": {
                                    "id": 1816,
                                    "name": "_address",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1757,
                                    "src": "19394:8:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "19375:28:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 1818,
                                  "name": "result",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1776,
                                  "src": "19406:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "src": "19375:37:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1820,
                              "nodeType": "ExpressionStatement",
                              "src": "19375:37:0"
                            }
                          ]
                        }
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 2222,
                              "name": "_managing",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1755,
                              "src": "22788:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_MANAGING_$690",
                                "typeString": "enum MockOlympusTreasury.MANAGING"
                              }
                            },
                            {
                              "id": 2223,
                              "name": "_address",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1757,
                              "src": "22799:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2224,
                              "name": "result",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1776,
                              "src": "22809:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_enum$_MANAGING_$690",
                                "typeString": "enum MockOlympusTreasury.MANAGING"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 2221,
                            "name": "ChangeActivated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 679,
                            "src": "22772:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_enum$_MANAGING_$690_$_t_address_$_t_bool_$returns$__$",
                              "typeString": "function (enum MockOlympusTreasury.MANAGING,address,bool)"
                            }
                          },
                          "id": 2225,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "22772:44:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2226,
                        "nodeType": "EmitStatement",
                        "src": "22767:49:0"
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 2227,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "22829:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 1765,
                        "id": 2228,
                        "nodeType": "Return",
                        "src": "22822:11:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1752,
                    "nodeType": "StructuredDocumentation",
                    "src": "18642:190:0",
                    "text": "@notice verify queue then set boolean in mapping\n@param _managing MANAGING\n@param _address address\n@param _calculator address\n@return bool"
                  },
                  "functionSelector": "fbfd393b",
                  "id": 2230,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1762,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1761,
                        "name": "onlyManager",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 336,
                        "src": "18935:11:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "18935:11:0"
                    }
                  ],
                  "name": "toggle",
                  "nameLocation": "18844:6:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1760,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1755,
                        "mutability": "mutable",
                        "name": "_managing",
                        "nameLocation": "18865:9:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 2230,
                        "src": "18856:18:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_MANAGING_$690",
                          "typeString": "enum MockOlympusTreasury.MANAGING"
                        },
                        "typeName": {
                          "id": 1754,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1753,
                            "name": "MANAGING",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 690,
                            "src": "18856:8:0"
                          },
                          "referencedDeclaration": 690,
                          "src": "18856:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_MANAGING_$690",
                            "typeString": "enum MockOlympusTreasury.MANAGING"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1757,
                        "mutability": "mutable",
                        "name": "_address",
                        "nameLocation": "18888:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 2230,
                        "src": "18880:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1756,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "18880:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1759,
                        "mutability": "mutable",
                        "name": "_calculator",
                        "nameLocation": "18910:11:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 2230,
                        "src": "18902:19:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1758,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "18902:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "18850:75:0"
                  },
                  "returnParameters": {
                    "id": 1765,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1764,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2230,
                        "src": "18956:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1763,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "18956:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "18955:6:0"
                  },
                  "scope": 2313,
                  "src": "18835:4003:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 2275,
                    "nodeType": "Block",
                    "src": "23244:200:0",
                    "statements": [
                      {
                        "condition": {
                          "id": 2249,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "23254:18:0",
                          "subExpression": {
                            "baseExpression": {
                              "id": 2246,
                              "name": "status_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2239,
                              "src": "23255:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 2248,
                            "indexExpression": {
                              "id": 2247,
                              "name": "_address",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2241,
                              "src": "23263:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "23255:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2272,
                        "nodeType": "IfStatement",
                        "src": "23250:172:0",
                        "trueBody": {
                          "id": 2271,
                          "nodeType": "Block",
                          "src": "23274:148:0",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 2255,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "baseExpression": {
                                        "id": 2251,
                                        "name": "queue_",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2235,
                                        "src": "23290:6:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                          "typeString": "mapping(address => uint256)"
                                        }
                                      },
                                      "id": 2253,
                                      "indexExpression": {
                                        "id": 2252,
                                        "name": "_address",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2241,
                                        "src": "23297:8:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "23290:16:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "!=",
                                    "rightExpression": {
                                      "hexValue": "30",
                                      "id": 2254,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "23310:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    },
                                    "src": "23290:21:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "4d757374207175657565",
                                    "id": 2256,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "23313:12:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_aba60747e6633e488f9f393b8420ade3a0b44f9def8d4a3769b0b8220bd2a250",
                                      "typeString": "literal_string \"Must queue\""
                                    },
                                    "value": "Must queue"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_aba60747e6633e488f9f393b8420ade3a0b44f9def8d4a3769b0b8220bd2a250",
                                      "typeString": "literal_string \"Must queue\""
                                    }
                                  ],
                                  "id": 2250,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "23282:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 2257,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "23282:44:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 2258,
                              "nodeType": "ExpressionStatement",
                              "src": "23282:44:0"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 2265,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "baseExpression": {
                                        "id": 2260,
                                        "name": "queue_",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2235,
                                        "src": "23342:6:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                          "typeString": "mapping(address => uint256)"
                                        }
                                      },
                                      "id": 2262,
                                      "indexExpression": {
                                        "id": 2261,
                                        "name": "_address",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2241,
                                        "src": "23349:8:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "23342:16:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "<=",
                                    "rightExpression": {
                                      "expression": {
                                        "id": 2263,
                                        "name": "block",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -4,
                                        "src": "23362:5:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_block",
                                          "typeString": "block"
                                        }
                                      },
                                      "id": 2264,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "number",
                                      "nodeType": "MemberAccess",
                                      "src": "23362:12:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "23342:32:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "5175657565206e6f742065787069726564",
                                    "id": 2266,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "23376:19:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_20f81a12537dab2de6f63614f9df91e785d8b2db704bbdcc64e781adf7c0e2ff",
                                      "typeString": "literal_string \"Queue not expired\""
                                    },
                                    "value": "Queue not expired"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_20f81a12537dab2de6f63614f9df91e785d8b2db704bbdcc64e781adf7c0e2ff",
                                      "typeString": "literal_string \"Queue not expired\""
                                    }
                                  ],
                                  "id": 2259,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "23334:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 2267,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "23334:62:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 2268,
                              "nodeType": "ExpressionStatement",
                              "src": "23334:62:0"
                            },
                            {
                              "expression": {
                                "hexValue": "74727565",
                                "id": 2269,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "23411:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              },
                              "functionReturnParameters": 2245,
                              "id": 2270,
                              "nodeType": "Return",
                              "src": "23404:11:0"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "hexValue": "66616c7365",
                          "id": 2273,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "23434:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "functionReturnParameters": 2245,
                        "id": 2274,
                        "nodeType": "Return",
                        "src": "23427:12:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2231,
                    "nodeType": "StructuredDocumentation",
                    "src": "22842:228:0",
                    "text": "@notice checks requirements and returns altered structs\n@param queue_ mapping( address => uint )\n@param status_ mapping( address => bool )\n@param _address address\n@return bool "
                  },
                  "id": 2276,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "requirements",
                  "nameLocation": "23082:12:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2242,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2235,
                        "mutability": "mutable",
                        "name": "queue_",
                        "nameLocation": "23136:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 2276,
                        "src": "23100:42:0",
                        "stateVariable": false,
                        "storageLocation": "storage",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        },
                        "typeName": {
                          "id": 2234,
                          "keyType": {
                            "id": 2232,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "23108:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Mapping",
                          "src": "23100:27:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          },
                          "valueType": {
                            "id": 2233,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "23119:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2239,
                        "mutability": "mutable",
                        "name": "status_",
                        "nameLocation": "23181:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 2276,
                        "src": "23148:40:0",
                        "stateVariable": false,
                        "storageLocation": "storage",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        },
                        "typeName": {
                          "id": 2238,
                          "keyType": {
                            "id": 2236,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "23156:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Mapping",
                          "src": "23148:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          },
                          "valueType": {
                            "id": 2237,
                            "name": "bool",
                            "nodeType": "ElementaryTypeName",
                            "src": "23167:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2241,
                        "mutability": "mutable",
                        "name": "_address",
                        "nameLocation": "23202:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 2276,
                        "src": "23194:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2240,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "23194:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "23094:120:0"
                  },
                  "returnParameters": {
                    "id": 2245,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2244,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2276,
                        "src": "23238:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 2243,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "23238:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "23237:6:0"
                  },
                  "scope": 2313,
                  "src": "23073:371:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 2311,
                    "nodeType": "Block",
                    "src": "23707:139:0",
                    "statements": [
                      {
                        "body": {
                          "id": 2307,
                          "nodeType": "Block",
                          "src": "23756:68:0",
                          "statements": [
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 2302,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "baseExpression": {
                                    "id": 2298,
                                    "name": "_list",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2280,
                                    "src": "23768:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                                      "typeString": "address[] storage pointer"
                                    }
                                  },
                                  "id": 2300,
                                  "indexExpression": {
                                    "id": 2299,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2288,
                                    "src": "23774:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "23768:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "id": 2301,
                                  "name": "_token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2282,
                                  "src": "23780:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "23768:18:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 2306,
                              "nodeType": "IfStatement",
                              "src": "23764:54:0",
                              "trueBody": {
                                "id": 2305,
                                "nodeType": "Block",
                                "src": "23788:30:0",
                                "statements": [
                                  {
                                    "expression": {
                                      "hexValue": "74727565",
                                      "id": 2303,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "bool",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "23805:4:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      },
                                      "value": "true"
                                    },
                                    "functionReturnParameters": 2286,
                                    "id": 2304,
                                    "nodeType": "Return",
                                    "src": "23798:11:0"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2294,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2291,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2288,
                            "src": "23733:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 2292,
                              "name": "_list",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2280,
                              "src": "23737:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                                "typeString": "address[] storage pointer"
                              }
                            },
                            "id": 2293,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "23737:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "23733:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2308,
                        "initializationExpression": {
                          "assignments": [
                            2288
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 2288,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "23726:1:0",
                              "nodeType": "VariableDeclaration",
                              "scope": 2308,
                              "src": "23718:9:0",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 2287,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "23718:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 2290,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 2289,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "23730:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "23718:13:0"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 2296,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "23751:3:0",
                            "subExpression": {
                              "id": 2295,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2288,
                              "src": "23751:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 2297,
                          "nodeType": "ExpressionStatement",
                          "src": "23751:3:0"
                        },
                        "nodeType": "ForStatement",
                        "src": "23713:111:0"
                      },
                      {
                        "expression": {
                          "hexValue": "66616c7365",
                          "id": 2309,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "23836:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "functionReturnParameters": 2286,
                        "id": 2310,
                        "nodeType": "Return",
                        "src": "23829:12:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2277,
                    "nodeType": "StructuredDocumentation",
                    "src": "23448:150:0",
                    "text": "@notice checks array to ensure against duplicate\n@param _list address[]\n@param _token address\n@return bool"
                  },
                  "id": 2312,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "listContains",
                  "nameLocation": "23610:12:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2283,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2280,
                        "mutability": "mutable",
                        "name": "_list",
                        "nameLocation": "23641:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 2312,
                        "src": "23623:23:0",
                        "stateVariable": false,
                        "storageLocation": "storage",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 2278,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "23623:7:0",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 2279,
                          "nodeType": "ArrayTypeName",
                          "src": "23623:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2282,
                        "mutability": "mutable",
                        "name": "_token",
                        "nameLocation": "23656:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 2312,
                        "src": "23648:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2281,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "23648:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "23622:41:0"
                  },
                  "returnParameters": {
                    "id": 2286,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2285,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2312,
                        "src": "23699:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 2284,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "23699:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "23698:6:0"
                  },
                  "scope": 2313,
                  "src": "23601:245:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 2314,
              "src": "6320:17528:0",
              "usedErrors": []
            }
          ],
          "src": "32:23817:0"
        },
        "id": 0
      }
    }
  }
}
