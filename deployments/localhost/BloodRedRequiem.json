{
  "address": "0x5FC8d32690cc91D4c39d9d3abcBD16989F875707",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_lockedToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_minLockedAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "provider",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "locktime",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "Deposit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "penalty",
          "type": "uint256"
        }
      ],
      "name": "EarlyWithdrawPenaltySet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "MinLockedAmountSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "PenaltyCollectorSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "provider",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "Withdraw",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "MAXDAYS",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MAXTIME",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MAX_WITHDRAWAL_PENALTY",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MINDAYS",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "PRECISION",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burnFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_days",
          "type": "uint256"
        }
      ],
      "name": "create_lock",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_addr",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "deposit_for_id",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "earlyWithdrawPenaltyRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "emergencyWithdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "emergencyWithdrawAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_addr",
          "type": "address"
        }
      ],
      "name": "get_locks",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "end",
              "type": "uint256"
            }
          ],
          "internalType": "struct IGovernanceLock.LockedBalance[]",
          "name": "_balances",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_addr",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "get_minted_for_lock",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_minted",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_addr",
          "type": "address"
        }
      ],
      "name": "get_minted_for_locks",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "_minted",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "increase_amount",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_days",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "increase_unlock_time",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "lockIds",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "lockedBalances",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "end",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lockedToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_addr",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "locked_end",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_addr",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "locked_of",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minLockedAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "mintedForLock",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "penaltyCollector",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_earlyWithdrawPenaltyRate",
          "type": "uint256"
        }
      ],
      "name": "setEarlyWithdrawPenaltyRate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_minLockedAmount",
          "type": "uint256"
        }
      ],
      "name": "setMinLockedAmount",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_addr",
          "type": "address"
        }
      ],
      "name": "setPenaltyCollector",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        }
      ],
      "name": "transferFullLock",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amountThis",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        }
      ],
      "name": "transferLock",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner_",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_days",
          "type": "uint256"
        }
      ],
      "name": "voting_power_locked_days",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_unlock_time",
          "type": "uint256"
        }
      ],
      "name": "voting_power_unlock_time",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xe230aaeec51cfd32435e7015993c95e189e02efa3fee17d5aedb488fc9cc4300",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0x5FC8d32690cc91D4c39d9d3abcBD16989F875707",
    "transactionIndex": 0,
    "gasUsed": "2450525",
    "logsBloom": "0x
    "blockHash": "0xb4eb3613e151b6dd51f4847f75656f5c6b95507a348f63f9397af4dad7cd530f",
    "transactionHash": "0xe230aaeec51cfd32435e7015993c95e189e02efa3fee17d5aedb488fc9cc4300",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 6,
        "transactionHash": "0xe230aaeec51cfd32435e7015993c95e189e02efa3fee17d5aedb488fc9cc4300",
        "address": "0x5FC8d32690cc91D4c39d9d3abcBD16989F875707",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000f39fd6e51aad88f6f4ce6ab8827279cfffb92266"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0xb4eb3613e151b6dd51f4847f75656f5c6b95507a348f63f9397af4dad7cd530f"
      }
    ],
    "blockNumber": 6,
    "cumulativeGasUsed": "2450525",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "Red Requiem",
    "RREQ",
    "0x9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0",
    "1000000000000000000"
  ],
  "solcInputHash": "88c5ae2c1e8fefff0d1b8448f7d19401",
  "metadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_lockedToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_minLockedAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"locktime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"penalty\",\"type\":\"uint256\"}],\"name\":\"EarlyWithdrawPenaltySet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"MinLockedAmountSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"PenaltyCollectorSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MAXDAYS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAXTIME\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_WITHDRAWAL_PENALTY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINDAYS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PRECISION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_days\",\"type\":\"uint256\"}],\"name\":\"create_lock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"deposit_for_id\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"earlyWithdrawPenaltyRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"emergencyWithdrawAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"get_locks\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"end\",\"type\":\"uint256\"}],\"internalType\":\"struct IGovernanceLock.LockedBalance[]\",\"name\":\"_balances\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"get_minted_for_lock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_minted\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"get_minted_for_locks\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_minted\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"increase_amount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_days\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"increase_unlock_time\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"lockIds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"lockedBalances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"end\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lockedToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"locked_end\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"locked_of\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minLockedAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"mintedForLock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"penaltyCollector\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_earlyWithdrawPenaltyRate\",\"type\":\"uint256\"}],\"name\":\"setEarlyWithdrawPenaltyRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_minLockedAmount\",\"type\":\"uint256\"}],\"name\":\"setMinLockedAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"setPenaltyCollector\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"transferFullLock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amountThis\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"transferLock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner_\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_days\",\"type\":\"uint256\"}],\"name\":\"voting_power_locked_days\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_unlock_time\",\"type\":\"uint256\"}],\"name\":\"voting_power_unlock_time\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys `amount` tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/BloodRedRequiem.sol\":\"BloodRedRequiem\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/BloodRedRequiem.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity ^0.8.12;\\n\\nimport \\\"./libraries/ERC20BurnableLock.sol\\\";\\nimport \\\"./libraries/SafeERC20.sol\\\";\\nimport \\\"./libraries/Ownable.sol\\\";\\nimport \\\"./interfaces/IGovernanceLock.sol\\\";\\n\\ncontract BloodRedRequiem is ERC20BurnableLock, IGovernanceLock, Ownable {\\n  using SafeERC20 for IERC20;\\n\\n  // flags\\n  uint256 private _unlocked;\\n\\n  uint256 public constant MINDAYS = 1;\\n  uint256 public constant MAXDAYS = 3 * 365;\\n\\n  uint256 public constant MAXTIME = MAXDAYS * 1 days; // 3 years\\n  uint256 public constant MAX_WITHDRAWAL_PENALTY = 50000; // 50%\\n  uint256 public constant PRECISION = 100000; // 5 decimals\\n\\n  address public lockedToken;\\n  address public penaltyCollector;\\n  uint256 public minLockedAmount;\\n  uint256 public earlyWithdrawPenaltyRate;\\n\\n  mapping(address => mapping(uint256 => uint256)) public mintedForLock;\\n\\n  // each address has a dictionary of locked data\\n  // they will be simply numbered from 0 to n\\n  mapping(address => mapping(uint256 => LockedBalance)) public lockedBalances;\\n\\n  // count of entries for which a lock has been created\\n  // used as a reference to lockedBalances to know which entries exist\\n  mapping(address => uint256) public lockIds;\\n  uint256 lastLock;\\n  /* ========== MODIFIERS ========== */\\n\\n  modifier lock() {\\n    require(_unlocked == 1, \\\"LOCKED\\\");\\n    _unlocked = 0;\\n    _;\\n    _unlocked = 1;\\n  }\\n\\n  constructor(\\n    string memory _name,\\n    string memory _symbol,\\n    address _lockedToken,\\n    uint256 _minLockedAmount\\n  ) ERC20Lock(_name, _symbol, 18) {\\n    lockedToken = _lockedToken;\\n    minLockedAmount = _minLockedAmount;\\n    earlyWithdrawPenaltyRate = 30000; // 30%\\n    _unlocked = 1;\\n  }\\n\\n  /* ========== PUBLIC FUNCTIONS ========== */\\n\\n  function locked_of(address _addr, uint256 _id)\\n    external\\n    view\\n    override\\n    returns (uint256)\\n  {\\n    return lockedBalances[_addr][_id].amount;\\n  }\\n\\n  function locked_end(address _addr, uint256 _id)\\n    external\\n    view\\n    override\\n    returns (uint256)\\n  {\\n    return lockedBalances[_addr][_id].end;\\n  }\\n\\n  // returns locks created by and for user\\n  function get_locks(address _addr)\\n    external\\n    view\\n    override\\n    returns (LockedBalance[] memory _balances)\\n  {\\n    uint256 length = lockIds[_addr];\\n    _balances = new LockedBalance[](length);\\n    for (uint256 i = 0; i < length; i++) {\\n      _balances[i] = lockedBalances[_addr][i];\\n    }\\n  }\\n\\n  // returns locks created by and for user\\n  function get_minted_for_locks(address _addr)\\n    external\\n    view\\n    override\\n    returns (uint256[] memory _minted)\\n  {\\n    uint256 length = lockIds[_addr];\\n    _minted = new uint256[](length);\\n    for (uint256 i = 0; i < length; i++) {\\n      _minted[i] = mintedForLock[_addr][i];\\n    }\\n  }\\n\\n  // returns locks created by and for user\\n  function get_minted_for_lock(address _addr, uint256 _id)\\n    external\\n    view\\n    override\\n    returns (uint256 _minted)\\n  {\\n    _minted = mintedForLock[_addr][_id];\\n  }\\n\\n  function voting_power_unlock_time(uint256 _value, uint256 _unlock_time)\\n    public\\n    view\\n    override\\n    returns (uint256)\\n  {\\n    uint256 _now = block.timestamp;\\n    if (_unlock_time <= _now) return 0;\\n    uint256 _lockedSeconds = _unlock_time - _now;\\n    if (_lockedSeconds >= MAXTIME) {\\n      return _value;\\n    }\\n    return (_value * _lockedSeconds) / MAXTIME;\\n  }\\n\\n  function voting_power_locked_days(uint256 _value, uint256 _days)\\n    public\\n    pure\\n    override\\n    returns (uint256)\\n  {\\n    if (_days >= MAXDAYS) {\\n      return _value;\\n    }\\n    return (_value * _days) / MAXDAYS;\\n  }\\n\\n  function deposit_for_id(\\n    address _addr,\\n    uint256 _value,\\n    uint256 _id\\n  ) external override {\\n    require(_value >= minLockedAmount, \\\"less than min amount\\\");\\n    _deposit_for_id(_addr, _value, 0, _id);\\n  }\\n\\n  function create_lock(uint256 _value, uint256 _days) external override {\\n    uint256 newId = lockIds[_msgSender()];\\n    require(_value >= minLockedAmount, \\\"less than min amount\\\");\\n    require(_days >= MINDAYS, \\\"Voting lock can MINDAYS min\\\");\\n    require(_days <= MAXDAYS, \\\"Voting lock can MAXDAYS max\\\");\\n\\n    _deposit_for_id(_msgSender(), _value, _days, newId);\\n  }\\n\\n  function increase_amount(uint256 _value, uint256 _id) external override {\\n    require(_value >= minLockedAmount, \\\"less than min amount\\\");\\n    _deposit_for_id(_msgSender(), _value, 0, _id);\\n  }\\n\\n  function increase_unlock_time(uint256 _days, uint256 _id) external override {\\n    require(_days >= MINDAYS, \\\"Voting lock can be MINDAYS min\\\");\\n    require(_days <= MAXDAYS, \\\"Voting lock can be MAXDAYS max\\\");\\n    _deposit_for_id(_msgSender(), 0, _days, _id);\\n  }\\n\\n  // withdraws from all locks whenever possible\\n  function withdrawAll() external override lock {\\n    uint256 _ids = lockIds[_msgSender()];\\n    for (uint256 i = 0; i < _ids; i++) {\\n      LockedBalance storage _locked = lockedBalances[_msgSender()][i];\\n      uint256 _now = block.timestamp;\\n      if (_locked.amount > 0 && _now >= _locked.end) {\\n        uint256 _amount = _locked.amount;\\n        _locked.end = 0;\\n        _locked.amount = 0;\\n        _burn(_msgSender(), mintedForLock[_msgSender()][i]);\\n        mintedForLock[_msgSender()][i] = 0;\\n        IERC20(lockedToken).safeTransfer(_msgSender(), _amount);\\n        emit Withdraw(_msgSender(), _amount, _now);\\n      }\\n    }\\n  }\\n\\n  function withdraw(uint256 _id) external override lock {\\n    LockedBalance storage _locked = lockedBalances[_msgSender()][_id];\\n    uint256 _now = block.timestamp;\\n    require(_locked.amount > 0, \\\"Nothing to withdraw\\\");\\n    require(_now >= _locked.end, \\\"The lock didn't expire\\\");\\n    uint256 _amount = _locked.amount;\\n    _locked.end = 0;\\n    _locked.amount = 0;\\n    _burn(_msgSender(), mintedForLock[_msgSender()][_id]);\\n    mintedForLock[_msgSender()][_id] = 0;\\n    IERC20(lockedToken).safeTransfer(_msgSender(), _amount);\\n\\n    emit Withdraw(_msgSender(), _amount, _now);\\n  }\\n\\n  // This will charge PENALTY if lock is not expired yet\\n  function emergencyWithdraw(uint256 _id) external lock {\\n    LockedBalance storage _locked = lockedBalances[_msgSender()][_id];\\n    uint256 _now = block.timestamp;\\n    require(_locked.amount > 0, \\\"Nothing to withdraw\\\");\\n    uint256 _amount = _locked.amount;\\n    if (_now < _locked.end) {\\n      uint256 _fee = (_amount * earlyWithdrawPenaltyRate) / PRECISION;\\n      _penalize(_fee);\\n      _amount = _amount - _fee;\\n    }\\n    _locked.end = 0;\\n    _locked.amount = 0;\\n    _burn(_msgSender(), mintedForLock[_msgSender()][_id]);\\n    mintedForLock[_msgSender()][_id] = 0;\\n\\n    IERC20(lockedToken).safeTransfer(_msgSender(), _amount);\\n\\n    emit Withdraw(_msgSender(), _amount, _now);\\n  }\\n\\n  // This will charge PENALTY if lock is not expired yet\\n  function emergencyWithdrawAll() external lock {\\n    uint256 _ids = lockIds[_msgSender()];\\n    for (uint256 i = 0; i < _ids; i++) {\\n      LockedBalance storage _locked = lockedBalances[_msgSender()][i];\\n      uint256 _now = block.timestamp;\\n      if (_locked.amount > 0) {\\n        uint256 _amount = _locked.amount;\\n        if (_now < _locked.end) {\\n          uint256 _fee = (_amount * earlyWithdrawPenaltyRate) / PRECISION;\\n          _penalize(_fee);\\n          _amount = _amount - _fee;\\n        }\\n        _locked.end = 0;\\n        _locked.amount = 0;\\n        _burn(_msgSender(), mintedForLock[_msgSender()][i]);\\n        mintedForLock[_msgSender()][i] = 0;\\n\\n        IERC20(lockedToken).safeTransfer(_msgSender(), _amount);\\n\\n        emit Withdraw(_msgSender(), _amount, _now);\\n      }\\n    }\\n  }\\n\\n  function transferLock(\\n    uint256 _amountThis,\\n    uint256 _id,\\n    address _to\\n  ) public {\\n    // transfer the lock to recipient\\n    _transferLock(_amountThis, _id, _to);\\n\\n    // send the underying amount of this token\\n    IERC20(address(this)).safeTransferFrom(\\n      _msgSender(),\\n      address(this),\\n      _amountThis\\n    );\\n  }\\n\\n  function transferFullLock(uint256 _id, address _to) public {\\n    // for a full transfer, the full minted amount has to be paid\\n    uint256 _minted = mintedForLock[_msgSender()][_id];\\n\\n    // send the underying amount of this token\\n    IERC20(address(this)).safeTransferFrom(_msgSender(), _to, _minted);\\n  }\\n\\n  /* ========== INTERNAL FUNCTIONS ========== */\\n\\n  function _deposit_for_id(\\n    address _addr,\\n    uint256 _value,\\n    uint256 _days,\\n    uint256 _id\\n  ) internal lock {\\n    LockedBalance storage _locked = lockedBalances[_addr][_id];\\n    uint256 _now = block.timestamp;\\n    uint256 _amount = _locked.amount;\\n    uint256 _end = _locked.end;\\n    uint256 _vp;\\n    if (_amount == 0) {\\n      _vp = voting_power_locked_days(_value, _days);\\n      _locked.amount = _value;\\n      _locked.end = _now + _days * 1 days;\\n      lockIds[_addr] += 1;\\n    } else if (_days == 0) {\\n      _vp = voting_power_unlock_time(_value, _end);\\n      _locked.amount = _amount + _value;\\n    } else {\\n      require(\\n        _value == 0,\\n        \\\"Cannot increase amount and extend lock in the same time\\\"\\n      );\\n      _vp = voting_power_locked_days(_amount, _days);\\n      _locked.end = _end + _days * 1 days;\\n      require(\\n        _locked.end - _now <= MAXTIME,\\n        \\\"Cannot extend lock to more than MAXTIME\\\"\\n      );\\n    }\\n    require(_vp > 0, \\\"No benefit to lock\\\");\\n    if (_value > 0) {\\n      IERC20(lockedToken).safeTransferFrom(_msgSender(), address(this), _value);\\n    }\\n    _mint(_addr, _vp);\\n    mintedForLock[_addr][_id] += _vp;\\n\\n    emit Deposit(_addr, _locked.amount, _locked.end, _now);\\n  }\\n\\n  function _penalize(uint256 _amount) internal {\\n    if (penaltyCollector != address(0)) {\\n      // send to collector if `penaltyCollector` set\\n      IERC20(lockedToken).safeTransfer(penaltyCollector, _amount);\\n    } else {\\n      ERC20BurnableLock(lockedToken).burn(_amount);\\n    }\\n  }\\n\\n  /**\\n   * @dev Before transfer function that moves the respective locks to the recipient\\n   * Standard ERC20 function adjusted for ERC20 lock which does NOT execute these lines\\n   * for minting and burning as it would interfere with the lock logic.\\n   * @param from sender\\n   * @param to recipient\\n   * @param amount amount of this token to be sent\\n   */\\n  function _beforeTokenTransfer(\\n    address from,\\n    address to,\\n    uint256 amount\\n  ) internal override {\\n    uint256 _ids = lockIds[from];\\n    uint256 _amountLeft = amount;\\n    for (uint256 i = 0; i < _ids; i++) {\\n      uint256 minted = mintedForLock[from][i];\\n      if (_amountLeft >= minted) {\\n        _transferFullLock(from, to, i);\\n        _amountLeft -= minted;\\n      } else if (_amountLeft > 0) {\\n        // here we just transfer the last bit left\\n        _transferLock(_amountLeft, i, to);\\n        break;\\n      } else break;\\n    }\\n  }\\n\\n  /**\\n  * @dev Function that transfers the share of the underlying lock amount to the recipient.\\n  @param _amountThis amount of this token to transfer\\n  @param _id id of lock to transfer\\n  @param _to recipient address\\n  */\\n  function _transferLock(\\n    uint256 _amountThis,\\n    uint256 _id,\\n    address _to\\n  ) internal {\\n    LockedBalance storage _lock = lockedBalances[_msgSender()][_id];\\n    uint256 _mintedForLock = mintedForLock[_msgSender()][_id];\\n\\n    // define the share of the lock.amount that has to be transferred\\n    uint256 _undelyingAmount = (_amountThis * _lock.amount) / _mintedForLock;\\n\\n    // make sure that the amount to transfer is not too much\\n    require(_undelyingAmount <= _lock.amount, \\\"Insufficient funds in Lock\\\");\\n\\n    // log the amount for the recipient\\n    _receiveLock(_undelyingAmount, _lock.end, _to);\\n\\n    // reduce this users lock amount\\n    _lock.amount -= _undelyingAmount;\\n    mintedForLock[_msgSender()][_id] -= _undelyingAmount;\\n  }\\n\\n  /**\\n  * @dev Function that transfers the full lock of the user to the recipient.\\n  @param _id id of lock to transfer\\n  @param _to recipient address\\n  */\\n  function _transferFullLock(address _from, address _to, uint256 _id) internal {\\n    LockedBalance storage _lock = lockedBalances[_from][_id];\\n    // log the amount for the recipient\\n    _receiveLock(_lock.amount, _lock.end, _to);\\n\\n    // reduce this users lock amount\\n    _lock.amount = 0;\\n\\n    mintedForLock[_from][_id] = 0;\\n  }\\n\\n  /**\\n  Function that logs the recipients lock\\n  All locks will searched and once a match is found the lock amount is added\\n  @param _lockAmount locked amount that is received\\n  @param _lockEnd lock end time\\n  @param _recipient recipient address\\n  - does NOT reduce the senders lock, that has to be done before\\n   */\\n  function _receiveLock(\\n    uint256 _lockAmount,\\n    uint256 _lockEnd,\\n    address _recipient\\n  ) internal {\\n    uint256 _id = lockIds[_recipient];\\n    bool _lockExists = false;\\n    for (uint256 i = 0; i < _id; i++) {\\n      if ( lockedBalances[_recipient][i].end == _lockEnd) {\\n        _lockExists = true;\\n         lockedBalances[_recipient][i].amount += _lockAmount;\\n        mintedForLock[_recipient][i] += _lockAmount;\\n        break;\\n      }\\n    }\\n    if (!_lockExists) {\\n      lockedBalances[_recipient][_id] = LockedBalance(_lockAmount, _lockEnd);\\n      mintedForLock[_recipient][_id] = _lockAmount;\\n      lockIds[_recipient] += 1;\\n    }\\n  }\\n\\n  /* ========== RESTRICTED FUNCTIONS ========== */\\n\\n  function setMinLockedAmount(uint256 _minLockedAmount) external onlyOwner {\\n    minLockedAmount = _minLockedAmount;\\n    emit MinLockedAmountSet(_minLockedAmount);\\n  }\\n\\n  function setEarlyWithdrawPenaltyRate(uint256 _earlyWithdrawPenaltyRate)\\n    external\\n    onlyOwner\\n  {\\n    require(\\n      _earlyWithdrawPenaltyRate <= MAX_WITHDRAWAL_PENALTY,\\n      \\\"withdrawal penalty is too high\\\"\\n    ); // <= 50%\\n    earlyWithdrawPenaltyRate = _earlyWithdrawPenaltyRate;\\n    emit EarlyWithdrawPenaltySet(_earlyWithdrawPenaltyRate);\\n  }\\n\\n  function setPenaltyCollector(address _addr) external onlyOwner {\\n    penaltyCollector = _addr;\\n    emit PenaltyCollectorSet(_addr);\\n  }\\n\\n  /* =============== EVENTS ==================== */\\n  event Deposit(\\n    address indexed provider,\\n    uint256 value,\\n    uint256 locktime,\\n    uint256 timestamp\\n  );\\n  event Withdraw(address indexed provider, uint256 value, uint256 timestamp);\\n  event PenaltyCollectorSet(address indexed addr);\\n  event EarlyWithdrawPenaltySet(uint256 indexed penalty);\\n  event MinLockedAmountSet(uint256 indexed amount);\\n}\\n\",\"keccak256\":\"0xe716725036dd7cbfcbcb3517acf70106857752b094bce25c9239312fba0dda67\",\"license\":\"UNLICENSED\"},\"contracts/interfaces/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.12;\\n\\ninterface IERC20 {\\n    function decimals() external view returns (uint8);\\n\\n    function totalSupply() external view returns (uint256);\\n\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\n\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\",\"keccak256\":\"0x8dbe6c86e1a82d74cece2191fcab3537484a56449e27af3918e0d416871cfeb8\",\"license\":\"MIT\"},\"contracts/interfaces/ERC20/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.12;\\n\\nimport \\\"./IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\",\"keccak256\":\"0x8953c281afce43278a1654e00deebff3141ad67faa26238843068f62f20a2e90\",\"license\":\"MIT\"},\"contracts/interfaces/IGovernanceLock.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity ^0.8.12;\\n\\ninterface IGovernanceLock {\\n  struct LockedBalance {\\n    uint256 amount;\\n    uint256 end;\\n  }\\n\\n  function get_locks(address _addr)\\n    external\\n    view\\n    returns (LockedBalance[] memory _balances);\\n\\n  function get_minted_for_locks(address _addr)\\n    external\\n    view\\n    returns (uint256[] memory _minted);\\n\\n  function get_minted_for_lock(address _addr, uint256 _id)\\n    external\\n    view\\n    returns (uint256 _minted);\\n\\n  function locked_of(address _addr, uint256 _id)\\n    external\\n    view\\n    returns (uint256);\\n\\n  function locked_end(address _addr, uint256 _id)\\n    external\\n    view\\n    returns (uint256);\\n\\n  function voting_power_unlock_time(uint256 _value, uint256 _unlock_time)\\n    external\\n    view\\n    returns (uint256);\\n\\n  function voting_power_locked_days(uint256 _value, uint256 _days)\\n    external\\n    view\\n    returns (uint256);\\n\\n  function deposit_for_id(\\n    address _addr,\\n    uint256 _value,\\n    uint256 _id\\n  ) external;\\n\\n  function create_lock(uint256 _value, uint256 _days) external;\\n\\n  function increase_amount(uint256 _value, uint256 _id) external;\\n\\n  function increase_unlock_time(uint256 _days, uint256 _id) external;\\n\\n  function withdraw(uint256 _id) external;\\n\\n  function withdrawAll() external;\\n}\\n\",\"keccak256\":\"0x2025915063b6bfcdd3e2947cd935b4b6f9229b27cff2175e37b17086bde318e8\",\"license\":\"UNLICENSED\"},\"contracts/interfaces/IOwnable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.12;\\n\\ninterface IOwnable {\\n  function owner() external view returns (address);\\n\\n  function renounceOwnership() external;\\n  \\n  function transferOwnership( address newOwner_ ) external;\\n}\",\"keccak256\":\"0x25ba057b10c88e873a141b59e3397527042a41f8f3caa819dd15d9b64bfe3a34\",\"license\":\"MIT\"},\"contracts/libraries/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.12;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\",\"keccak256\":\"0x120a788e5a65b0fd09c3095fd9a7e6d537e1febaf9597c354ac566784f42552a\",\"license\":\"MIT\"},\"contracts/libraries/ERC20BurnableLock.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.12;\\n\\nimport \\\"./ERC20Lock.sol\\\";\\nimport \\\"./Context.sol\\\";\\n\\n/**\\n * @dev Extension of {ERC20} that allows token holders to destroy both their own\\n * tokens and those that they have an allowance for, in a way that can be\\n * recognized off-chain (via event analysis).\\n */\\nabstract contract ERC20BurnableLock is Context, ERC20Lock {\\n  /**\\n   * @dev Destroys `amount` tokens from the caller.\\n   *\\n   * See {ERC20-_burn}.\\n   */\\n  function burn(uint256 amount) public virtual {\\n    _burn(_msgSender(), amount);\\n  }\\n\\n  /**\\n   * @dev Destroys `amount` tokens from `account`, deducting from the caller's\\n   * allowance.\\n   *\\n   * See {ERC20-_burn} and {ERC20-allowance}.\\n   *\\n   * Requirements:\\n   *\\n   * - the caller must have allowance for ``accounts``'s tokens of at least\\n   * `amount`.\\n   */\\n  function burnFrom(address account, uint256 amount) public virtual {\\n    uint256 currentAllowance = allowance(account, _msgSender());\\n    require(currentAllowance >= amount, \\\"ERC20: burn amount exceeds allowance\\\");\\n    unchecked {\\n      _approve(account, _msgSender(), currentAllowance - amount);\\n    }\\n    _burn(account, amount);\\n  }\\n}\\n\",\"keccak256\":\"0xd23ea730bccbcec8db3ee7c8fe75d7a207ebda61e531df5e77b5a1f084b0f2c9\",\"license\":\"MIT\"},\"contracts/libraries/ERC20Lock.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.12;\\n\\nimport \\\"../interfaces/ERC20/IERC20.sol\\\";\\nimport \\\"../interfaces/ERC20/IERC20Metadata.sol\\\";\\nimport \\\"./Context.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20Lock is Context, IERC20, IERC20Metadata {\\n  mapping(address => uint256) private _balances;\\n\\n  mapping(address => mapping(address => uint256)) private _allowances;\\n\\n  uint256 internal _totalSupply;\\n\\n  string private _name;\\n  string private _symbol;\\n  uint8 private _decimals;\\n\\n  /**\\n   * @dev Sets the values for {name} and {symbol}.\\n   *\\n   * The default value of {decimals} is 18. To select a different value for\\n   * {decimals} you should overload it.\\n   *\\n   * All two of these values are immutable: they can only be set once during\\n   * construction.\\n   */\\n  constructor(\\n    string memory name_,\\n    string memory symbol_,\\n    uint8 decimals_\\n  ) {\\n    _name = name_;\\n    _symbol = symbol_;\\n    _decimals = decimals_;\\n  }\\n\\n  /**\\n   * @dev Returns the name of the token.\\n   */\\n  function name() public view virtual override returns (string memory) {\\n    return _name;\\n  }\\n\\n  /**\\n   * @dev Returns the symbol of the token, usually a shorter version of the\\n   * name.\\n   */\\n  function symbol() public view virtual override returns (string memory) {\\n    return _symbol;\\n  }\\n\\n  /**\\n   * @dev Returns the number of decimals used to get its user representation.\\n   * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n   * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n   *\\n   * Tokens usually opt for a value of 18, imitating the relationship between\\n   * Ether and Wei. This is the value {ERC20} uses, unless this function is\\n   * overridden;\\n   *\\n   * NOTE: This information is only used for _display_ purposes: it in\\n   * no way affects any of the arithmetic of the contract, including\\n   * {IERC20-balanceOf} and {IERC20-transfer}.\\n   */\\n  function decimals()\\n    public\\n    view\\n    virtual\\n    override(IERC20, IERC20Metadata)\\n    returns (uint8)\\n  {\\n    return _decimals;\\n  }\\n\\n  /**\\n   * @dev See {IERC20-totalSupply}.\\n   */\\n  function totalSupply() public view virtual override returns (uint256) {\\n    return _totalSupply;\\n  }\\n\\n  /**\\n   * @dev See {IERC20-balanceOf}.\\n   */\\n  function balanceOf(address account)\\n    public\\n    view\\n    virtual\\n    override\\n    returns (uint256)\\n  {\\n    return _balances[account];\\n  }\\n\\n  /**\\n   * @dev See {IERC20-transfer}.\\n   *\\n   * Requirements:\\n   *\\n   * - `recipient` cannot be the zero address.\\n   * - the caller must have a balance of at least `amount`.\\n   */\\n  function transfer(address recipient, uint256 amount)\\n    public\\n    virtual\\n    override\\n    returns (bool)\\n  {\\n    _transfer(_msgSender(), recipient, amount);\\n    return true;\\n  }\\n\\n  /**\\n   * @dev See {IERC20-allowance}.\\n   */\\n  function allowance(address owner, address spender)\\n    public\\n    view\\n    virtual\\n    override\\n    returns (uint256)\\n  {\\n    return _allowances[owner][spender];\\n  }\\n\\n  /**\\n   * @dev See {IERC20-approve}.\\n   *\\n   * Requirements:\\n   *\\n   * - `spender` cannot be the zero address.\\n   */\\n  function approve(address spender, uint256 amount)\\n    public\\n    virtual\\n    override\\n    returns (bool)\\n  {\\n    _approve(_msgSender(), spender, amount);\\n    return true;\\n  }\\n\\n  /**\\n   * @dev See {IERC20-transferFrom}.\\n   *\\n   * Emits an {Approval} event indicating the updated allowance. This is not\\n   * required by the EIP. See the note at the beginning of {ERC20}.\\n   *\\n   * Requirements:\\n   *\\n   * - `sender` and `recipient` cannot be the zero address.\\n   * - `sender` must have a balance of at least `amount`.\\n   * - the caller must have allowance for ``sender``'s tokens of at least\\n   * `amount`.\\n   */\\n  function transferFrom(\\n    address sender,\\n    address recipient,\\n    uint256 amount\\n  ) public virtual override returns (bool) {\\n    _transfer(sender, recipient, amount);\\n\\n    uint256 currentAllowance = _allowances[sender][_msgSender()];\\n    require(\\n      currentAllowance >= amount,\\n      \\\"ERC20: transfer amount exceeds allowance\\\"\\n    );\\n    unchecked {\\n      _approve(sender, _msgSender(), currentAllowance - amount);\\n    }\\n\\n    return true;\\n  }\\n\\n  /**\\n   * @dev Atomically increases the allowance granted to `spender` by the caller.\\n   *\\n   * This is an alternative to {approve} that can be used as a mitigation for\\n   * problems described in {IERC20-approve}.\\n   *\\n   * Emits an {Approval} event indicating the updated allowance.\\n   *\\n   * Requirements:\\n   *\\n   * - `spender` cannot be the zero address.\\n   */\\n  function increaseAllowance(address spender, uint256 addedValue)\\n    public\\n    virtual\\n    returns (bool)\\n  {\\n    _approve(\\n      _msgSender(),\\n      spender,\\n      _allowances[_msgSender()][spender] + addedValue\\n    );\\n    return true;\\n  }\\n\\n  /**\\n   * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n   *\\n   * This is an alternative to {approve} that can be used as a mitigation for\\n   * problems described in {IERC20-approve}.\\n   *\\n   * Emits an {Approval} event indicating the updated allowance.\\n   *\\n   * Requirements:\\n   *\\n   * - `spender` cannot be the zero address.\\n   * - `spender` must have allowance for the caller of at least\\n   * `subtractedValue`.\\n   */\\n  function decreaseAllowance(address spender, uint256 subtractedValue)\\n    public\\n    virtual\\n    returns (bool)\\n  {\\n    uint256 currentAllowance = _allowances[_msgSender()][spender];\\n    require(\\n      currentAllowance >= subtractedValue,\\n      \\\"ERC20: decreased allowance below zero\\\"\\n    );\\n    unchecked {\\n      _approve(_msgSender(), spender, currentAllowance - subtractedValue);\\n    }\\n\\n    return true;\\n  }\\n\\n  /**\\n   * @dev Moves `amount` of tokens from `sender` to `recipient`.\\n   *\\n   * This internal function is equivalent to {transfer}, and can be used to\\n   * e.g. implement automatic token fees, slashing mechanisms, etc.\\n   *\\n   * Emits a {Transfer} event.\\n   *\\n   * Requirements:\\n   *\\n   * - `sender` cannot be the zero address.\\n   * - `recipient` cannot be the zero address.\\n   * - `sender` must have a balance of at least `amount`.\\n   */\\n  function _transfer(\\n    address sender,\\n    address recipient,\\n    uint256 amount\\n  ) internal virtual {\\n    require(sender != address(0), \\\"ERC20: transfer from the zero address\\\");\\n    require(recipient != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n    _beforeTokenTransfer(sender, recipient, amount);\\n\\n    uint256 senderBalance = _balances[sender];\\n    require(senderBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n    unchecked {\\n      _balances[sender] = senderBalance - amount;\\n    }\\n    _balances[recipient] += amount;\\n\\n    emit Transfer(sender, recipient, amount);\\n\\n    _afterTokenTransfer(sender, recipient, amount);\\n  }\\n\\n  /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n   * the total supply.\\n   *\\n   * Emits a {Transfer} event with `from` set to the zero address.\\n   *\\n   * Custom version that does not execute before and after transaction tasks.\\n   *\\n   * Requirements:\\n   *\\n   * - `account` cannot be the zero address.\\n   */\\n  function _mint(address account, uint256 amount) internal virtual {\\n    require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n    _totalSupply += amount;\\n    _balances[account] += amount;\\n    emit Transfer(address(0), account, amount);\\n  }\\n\\n  /**\\n   * @dev Destroys `amount` tokens from `account`, reducing the\\n   * total supply.\\n   * Custom version that does not execute the before and after transaction\\n   * tasks.\\n   *\\n   * Emits a {Transfer} event with `to` set to the zero address.\\n   *\\n   * Requirements:\\n   *\\n   * - `account` cannot be the zero address.\\n   * - `account` must have at least `amount` tokens.\\n   */\\n  function _burn(address account, uint256 amount) internal virtual {\\n    require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n    uint256 accountBalance = _balances[account];\\n    require(accountBalance >= amount, \\\"ERC20: burn amount exceeds balance\\\");\\n    unchecked {\\n      _balances[account] = accountBalance - amount;\\n    }\\n    _totalSupply -= amount;\\n\\n    emit Transfer(account, address(0), amount);\\n  }\\n\\n  /**\\n   * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\n   *\\n   * This internal function is equivalent to `approve`, and can be used to\\n   * e.g. set automatic allowances for certain subsystems, etc.\\n   *\\n   * Emits an {Approval} event.\\n   *\\n   * Requirements:\\n   *\\n   * - `owner` cannot be the zero address.\\n   * - `spender` cannot be the zero address.\\n   */\\n  function _approve(\\n    address owner,\\n    address spender,\\n    uint256 amount\\n  ) internal virtual {\\n    require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n    require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n    _allowances[owner][spender] = amount;\\n    emit Approval(owner, spender, amount);\\n  }\\n\\n  /**\\n   * @dev Hook that is called before any transfer of tokens. This includes\\n   * minting and burning.\\n   *\\n   * Calling conditions:\\n   *\\n   * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n   * will be transferred to `to`.\\n   * - when `from` is zero, `amount` tokens will be minted for `to`.\\n   * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n   * - `from` and `to` are never both zero.\\n   *\\n   * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n   */\\n  function _beforeTokenTransfer(\\n    address from,\\n    address to,\\n    uint256 amount\\n  ) internal virtual {}\\n\\n  /**\\n   * @dev Hook that is called after any transfer of tokens. This includes\\n   * minting and burning.\\n   *\\n   * Calling conditions:\\n   *\\n   * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n   * has been transferred to `to`.\\n   * - when `from` is zero, `amount` tokens have been minted for `to`.\\n   * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\\n   * - `from` and `to` are never both zero.\\n   *\\n   * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n   */\\n  function _afterTokenTransfer(\\n    address from,\\n    address to,\\n    uint256 amount\\n  ) internal virtual {}\\n}\\n\",\"keccak256\":\"0x71f17dd556a548e59c43fa5f8bdf95d4c449c57b95e15f17c321e52e7aea7065\",\"license\":\"MIT\"},\"contracts/libraries/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.12;\\n\\nimport \\\"../interfaces/IOwnable.sol\\\";\\n\\ncontract Ownable is IOwnable {\\n    \\n  address internal _owner;\\n\\n  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n  constructor () {\\n    _owner = msg.sender;\\n    emit OwnershipTransferred( address(0), _owner );\\n  }\\n\\n  function owner() public view override returns (address) {\\n    return _owner;\\n  }\\n\\n  modifier onlyOwner() {\\n    require( _owner == msg.sender, \\\"Ownable: caller is not the owner\\\" );\\n    _;\\n  }\\n\\n  function renounceOwnership() public virtual override onlyOwner() {\\n    emit OwnershipTransferred( _owner, address(0) );\\n    _owner = address(0);\\n  }\\n\\n  function transferOwnership( address newOwner_ ) public virtual override onlyOwner() {\\n    require( newOwner_ != address(0), \\\"Ownable: new owner is the zero address\\\");\\n    emit OwnershipTransferred( _owner, newOwner_ );\\n    _owner = newOwner_;\\n  }\\n}\",\"keccak256\":\"0x5392be04c5915011130d24c683f6c82784e3117e180abd04313e6aece7cae986\",\"license\":\"MIT\"},\"contracts/libraries/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\n// Based on the ReentrancyGuard library from OpenZeppelin Contracts, altered to reduce gas costs.\\n// The `safeTransfer` and `safeTransferFrom` functions assume that `token` is a contract (an account with code), and\\n// work differently from the OpenZeppelin version if it is not.\\n\\npragma solidity ^0.8.12;\\n\\nimport \\\"../interfaces/ERC20/IERC20.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n  function safeTransfer(\\n    IERC20 token,\\n    address to,\\n    uint256 value\\n  ) internal {\\n    _callOptionalReturn(\\n      address(token),\\n      abi.encodeWithSelector(token.transfer.selector, to, value)\\n    );\\n  }\\n\\n  function safeTransferFrom(\\n    IERC20 token,\\n    address from,\\n    address to,\\n    uint256 value\\n  ) internal {\\n    _callOptionalReturn(\\n      address(token),\\n      abi.encodeWithSelector(token.transferFrom.selector, from, to, value)\\n    );\\n  }\\n\\n  function safeIncreaseAllowance(\\n    IERC20 token,\\n    address spender,\\n    uint256 value\\n  ) internal {\\n    uint256 newAllowance = token.allowance(address(this), spender) + value;\\n    _callOptionalReturn(\\n      address(token),\\n      abi.encodeWithSelector(token.approve.selector, spender, newAllowance)\\n    );\\n  }\\n\\n  /**\\n   * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n   * on the return value: the return value is optional (but if data is returned, it must not be false).\\n   *\\n   * WARNING: `token` is assumed to be a contract: calls to EOAs will *not* revert.\\n   */\\n  function _callOptionalReturn(address token, bytes memory data) private {\\n    // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n    // we're implementing it ourselves.\\n    (bool success, bytes memory returndata) = token.call(data);\\n\\n    // If the low-level call didn't succeed we return whatever was returned from it.\\n    assembly {\\n      if eq(success, 0) {\\n        returndatacopy(0, 0, returndatasize())\\n        revert(0, returndatasize())\\n      }\\n    }\\n\\n    // Finally we check the returndata size is either zero or true - note that this check will always pass for EOAs\\n    require(\\n      returndata.length == 0 || abi.decode(returndata, (bool)),\\n      \\\"SAFE_ERC20_CALL_FAILED\\\"\\n    );\\n  }\\n}\\n\",\"keccak256\":\"0xcf1f0a6ad9896170de07c190358be86e5f3cc4faf5c8be7ed30f2b7ad8316911\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5060405162002b8d38038062002b8d833981016040819052620000349162000270565b83836012826003908051906020019062000050929190620000fd565b50815162000066906004906020850190620000fd565b5060058054336101009081026001600160a81b031990921660ff9094169390931717908190556040519190046001600160a01b03169250600091507f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3600780546001600160a01b0319166001600160a01b0393909316929092179091556009555050617530600a55600160065562000340565b8280546200010b9062000303565b90600052602060002090601f0160209004810192826200012f57600085556200017a565b82601f106200014a57805160ff19168380011785556200017a565b828001600101855582156200017a579182015b828111156200017a5782518255916020019190600101906200015d565b50620001889291506200018c565b5090565b5b808211156200018857600081556001016200018d565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620001cb57600080fd5b81516001600160401b0380821115620001e857620001e8620001a3565b604051601f8301601f19908116603f01168101908282118183101715620002135762000213620001a3565b816040528381526020925086838588010111156200023057600080fd5b600091505b8382101562000254578582018301518183018401529082019062000235565b83821115620002665760008385830101525b9695505050505050565b600080600080608085870312156200028757600080fd5b84516001600160401b03808211156200029f57600080fd5b620002ad88838901620001b9565b95506020870151915080821115620002c457600080fd5b50620002d387828801620001b9565b604087015190945090506001600160a01b0381168114620002f357600080fd5b6060959095015193969295505050565b600181811c908216806200031857607f821691505b602082108114156200033a57634e487b7160e01b600052602260045260246000fd5b50919050565b61283d80620003506000396000f3fe608060405234801561001057600080fd5b50600436106102a05760003560e01c8063802c0a1c11610167578063aaf5eb68116100ce578063db5ea63e11610087578063db5ea63e1461067f578063dd19171914610692578063dd62ed3e1461069a578063ee00ef3a146106d3578063f2fde38b146106db578063f4da99c7146106ee57600080fd5b8063aaf5eb68146105f1578063ae6ef65f146105fb578063b1c933e614610604578063bf201c7f14610617578063c1917a5a1461064c578063d08a12ff1461066c57600080fd5b8063a25b39b711610120578063a25b39b714610566578063a457c2d71461056f578063a4d855df14610582578063a650adbd14610595578063a8a4a376146105cb578063a9059cbb146105de57600080fd5b8063802c0a1c146104d4578063853828b6146104f45780638da5cb5b146104fc57806395d89b4114610512578063989bca441461051a578063a183af521461055357600080fd5b806338b4321b1161020b57806365fc3873116101c457806365fc38731461044a57806370a082311461045d578063715018a61461048657806373426cff1461048e57806376b15a57146104a157806379cc6790146104c157600080fd5b806338b4321b146103a457806339509351146103b757806342966c68146103ca5780635312ea8e146103dd5780635b7d8f05146103f05780635d16a6f91461040357600080fd5b806318160ddd1161025d57806318160ddd146103455780632060176b1461034d57806323b872dd146103565780632e1a7d4d14610369578063308097b21461037c578063313ce5671461038f57600080fd5b8063063da9df146102a557806306fdde03146102ba578063095ea7b3146102d85780630f45cc81146102fb5780630f51c09c146103265780631767c4331461033c575b600080fd5b6102b86102b33660046123d2565b610719565b005b6102c2610747565b6040516102cf919061242a565b60405180910390f35b6102eb6102e636600461245d565b6107d9565b60405190151581526020016102cf565b60075461030e906001600160a01b031681565b6040516001600160a01b0390911681526020016102cf565b61032e600181565b6040519081526020016102cf565b61032e61044781565b60025461032e565b61032e61c35081565b6102eb610364366004612487565b6107f0565b6102b86103773660046124c3565b61089f565b60085461030e906001600160a01b031681565b60055460405160ff90911681526020016102cf565b61032e6103b23660046124dc565b610a1d565b6102eb6103c536600461245d565b610a8a565b6102b86103d83660046124c3565b610ac6565b6102b86103eb3660046124c3565b610ad3565b6102b86103fe3660046124fe565b610bb2565b61043561041136600461245d565b600c6020908152600092835260408084209091529082529020805460019091015482565b604080519283526020830191909152016102cf565b6102b86104583660046124dc565b610c2b565b61032e61046b3660046124fe565b6001600160a01b031660009081526020819052604090205490565b6102b8610d0c565b61032e61049c3660046124dc565b610d8b565b6104b46104af3660046124fe565b610dbb565b6040516102cf9190612519565b6102b86104cf36600461245d565b610e83565b61032e6104e23660046124fe565b600d6020526000908152604090205481565b6102b8610f04565b60055461010090046001600160a01b031661030e565b6102c261100e565b61032e61052836600461245d565b6001600160a01b03919091166000908152600c60209081526040808320938352929052206001015490565b6102b86105613660046124dc565b61101d565b61032e60095481565b6102eb61057d36600461245d565b611050565b6102b86105903660046124dc565b6110e9565b61032e6105a336600461245d565b6001600160a01b03919091166000908152600c60209081526040808320938352929052205490565b6102b86105d93660046124c3565b611199565b6102eb6105ec36600461245d565b61124d565b61032e620186a081565b61032e600a5481565b6102b861061236600461255d565b61125a565b61032e61062536600461245d565b6001600160a01b039091166000908152600b60209081526040808320938352929052205490565b61065f61065a3660046124fe565b611289565b6040516102cf9190612590565b6102b861067a3660046124c3565b61137b565b6102b861068d3660046125df565b6113dd565b6102b86113f4565b61032e6106a8366004612614565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b61032e611526565b6102b86106e93660046124fe565b611538565b61032e6106fc36600461245d565b600b60209081526000928352604080842090915290825290205481565b336000818152600b60209081526040808320868452909152902054906107429030908484611633565b505050565b6060600380546107569061263e565b80601f01602080910402602001604051908101604052809291908181526020018280546107829061263e565b80156107cf5780601f106107a4576101008083540402835291602001916107cf565b820191906000526020600020905b8154815290600101906020018083116107b257829003601f168201915b5050505050905090565b60006107e63384846116a4565b5060015b92915050565b60006107fd8484846117c9565b6001600160a01b0384166000908152600160209081526040808320338452909152902054828110156108875760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b61089485338584036116a4565b506001949350505050565b6006546001146108c15760405162461bcd60e51b815260040161087e90612679565b60006006819055338152600c602090815260408083208484529091529020805442906109255760405162461bcd60e51b81526020600482015260136024820152724e6f7468696e6720746f20776974686472617760681b604482015260640161087e565b81600101548110156109725760405162461bcd60e51b8152602060048201526016602482015275546865206c6f636b206469646e27742065787069726560501b604482015260640161087e565b815460006001840181905583556109a4335b336000908152600b602090815260408083208984529091529020546119a2565b336000818152600b602090815260408083208884529091528120556109d7905b6007546001600160a01b03169083611ae8565b604080518281526020810184905233917ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b568910160405180910390a2505060016006555050565b600042808311610a315760009150506107ea565b6000610a3d82856126af565b9050610a4e610447620151806126c6565b8110610a5e5784925050506107ea565b610a6d610447620151806126c6565b610a7782876126c6565b610a8191906126e5565b95945050505050565b3360008181526001602090815260408083206001600160a01b038716845290915281205490916107e6918590610ac1908690612707565b6116a4565b610ad033826119a2565b50565b600654600114610af55760405162461bcd60e51b815260040161087e90612679565b60006006819055338152600c60209081526040808320848452909152902080544290610b595760405162461bcd60e51b81526020600482015260136024820152724e6f7468696e6720746f20776974686472617760681b604482015260640161087e565b81546001830154821015610b9e576000620186a0600a5483610b7b91906126c6565b610b8591906126e5565b9050610b9081611b18565b610b9a81836126af565b9150505b60006001840181905583556109a433610984565b60055461010090046001600160a01b03163314610be15760405162461bcd60e51b815260040161087e9061271f565b600880546001600160a01b0319166001600160a01b0383169081179091556040517f2541601c97bce42b47813f2be715ba4eb0a571f2aafaf35cda2054137d9a79af90600090a250565b336000908152600d6020526040902054600954831015610c5d5760405162461bcd60e51b815260040161087e90612754565b6001821015610cae5760405162461bcd60e51b815260206004820152601b60248201527f566f74696e67206c6f636b2063616e204d494e44415953206d696e0000000000604482015260640161087e565b610447821115610d005760405162461bcd60e51b815260206004820152601b60248201527f566f74696e67206c6f636b2063616e204d415844415953206d61780000000000604482015260640161087e565b61074233848484611ba7565b60055461010090046001600160a01b03163314610d3b5760405162461bcd60e51b815260040161087e9061271f565b60055460405160009161010090046001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a360058054610100600160a81b0319169055565b60006104478210610d9d5750816107ea565b610447610daa83856126c6565b610db491906126e5565b9392505050565b6001600160a01b0381166000908152600d60205260409020546060908067ffffffffffffffff811115610df057610df0612782565b604051908082528060200260200182016040528015610e19578160200160208202803683370190505b50915060005b81811015610e7c576001600160a01b0384166000908152600b602090815260408083208484529091529020548351849083908110610e5f57610e5f612798565b602090810291909101015280610e74816127ae565b915050610e1f565b5050919050565b6000610e8f83336106a8565b905081811015610eed5760405162461bcd60e51b8152602060048201526024808201527f45524332303a206275726e20616d6f756e74206578636565647320616c6c6f77604482015263616e636560e01b606482015260840161087e565b610efa83338484036116a4565b61074283836119a2565b600654600114610f265760405162461bcd60e51b815260040161087e90612679565b60006006819055338152600d6020526040812054905b8181101561100557336000908152600c6020908152604080832084845290915290208054429015801590610f74575081600101548110155b15610ff05781546000600184018190558355610f8f33610984565b336000818152600b60209081526040808320888452909152812055610fb3906109c4565b604080518281526020810184905233917ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b568910160405180910390a2505b50508080610ffd906127ae565b915050610f3c565b50506001600655565b6060600480546107569061263e565b60095482101561103f5760405162461bcd60e51b815260040161087e90612754565b61104c3383600084611ba7565b5050565b3360009081526001602090815260408083206001600160a01b0386168452909152812054828110156110d25760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b606482015260840161087e565b6110df33858584036116a4565b5060019392505050565b600182101561113a5760405162461bcd60e51b815260206004820152601e60248201527f566f74696e67206c6f636b2063616e206265204d494e44415953206d696e0000604482015260640161087e565b61044782111561118c5760405162461bcd60e51b815260206004820152601e60248201527f566f74696e67206c6f636b2063616e206265204d415844415953206d61780000604482015260640161087e565b61104c3360008484611ba7565b60055461010090046001600160a01b031633146111c85760405162461bcd60e51b815260040161087e9061271f565b61c35081111561121a5760405162461bcd60e51b815260206004820152601e60248201527f7769746864726177616c2070656e616c747920697320746f6f20686967680000604482015260640161087e565b600a81905560405181907fa7d10353d34f5fe96bad91fa358f55fbea8ad6ee0d30924022d2b58e77f476e390600090a250565b60006107e63384846117c9565b60095482101561127c5760405162461bcd60e51b815260040161087e90612754565b6107428383600084611ba7565b6001600160a01b0381166000908152600d60205260409020546060908067ffffffffffffffff8111156112be576112be612782565b60405190808252806020026020018201604052801561130357816020015b60408051808201909152600080825260208201528152602001906001900390816112dc5790505b50915060005b81811015610e7c576001600160a01b0384166000908152600c602090815260408083208484528252918290208251808401909352805483526001015490820152835184908390811061135d5761135d612798565b60200260200101819052508080611373906127ae565b915050611309565b60055461010090046001600160a01b031633146113aa5760405162461bcd60e51b815260040161087e9061271f565b600981905560405181907f9a8dc7fb9d13b0f5acaf673226d570d31ec15d8a813fceced1eb36ad11afebc590600090a250565b6113e8838383611ea6565b61074230338186611633565b6006546001146114165760405162461bcd60e51b815260040161087e90612679565b60006006819055338152600d6020526040812054905b8181101561100557336000908152600c6020908152604080832084845290915290208054429015611511578154600183015482101561149c576000620186a0600a548361147991906126c6565b61148391906126e5565b905061148e81611b18565b61149881836126af565b9150505b60006001840181905583556114b033610984565b336000818152600b602090815260408083208884529091528120556114d4906109c4565b604080518281526020810184905233917ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b568910160405180910390a2505b5050808061151e906127ae565b91505061142c565b611535610447620151806126c6565b81565b60055461010090046001600160a01b031633146115675760405162461bcd60e51b815260040161087e9061271f565b6001600160a01b0381166115cc5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161087e565b6005546040516001600160a01b0380841692610100900416907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600580546001600160a01b0390921661010002610100600160a81b0319909216919091179055565b6040516001600160a01b038085166024830152831660448201526064810182905261169e9085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152611fa1565b50505050565b6001600160a01b0383166117065760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161087e565b6001600160a01b0382166117675760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161087e565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b03831661182d5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161087e565b6001600160a01b03821661188f5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161087e565b61189a838383612078565b6001600160a01b038316600090815260208190526040902054818110156119125760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161087e565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290611949908490612707565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161199591815260200190565b60405180910390a361169e565b6001600160a01b038216611a025760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b606482015260840161087e565b6001600160a01b03821660009081526020819052604090205481811015611a765760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b606482015260840161087e565b6001600160a01b0383166000908152602081905260408120838303905560028054849290611aa59084906126af565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906020016117bc565b6040516001600160a01b03831660248201526044810182905261074290849063a9059cbb60e01b90606401611667565b6008546001600160a01b031615611b4657600854600754610ad0916001600160a01b03918216911683611ae8565b600754604051630852cd8d60e31b8152600481018390526001600160a01b03909116906342966c6890602401600060405180830381600087803b158015611b8c57600080fd5b505af1158015611ba0573d6000803e3d6000fd5b5050505050565b600654600114611bc95760405162461bcd60e51b815260040161087e90612679565b600060068190556001600160a01b0385168152600c60209081526040808320848452909152812080546001820154919242929082611c6357611c0b8888610d8b565b8886559050611c1d87620151806126c6565b611c279085612707565b6001808701919091556001600160a01b038a166000908152600d602052604081208054909190611c58908490612707565b90915550611d9e9050565b86611c8557611c728883610a1d565b9050611c7e8884612707565b8555611d9e565b8715611cf95760405162461bcd60e51b815260206004820152603760248201527f43616e6e6f7420696e63726561736520616d6f756e7420616e6420657874656e60448201527f64206c6f636b20696e207468652073616d652074696d65000000000000000000606482015260840161087e565b611d038388610d8b565b9050611d1287620151806126c6565b611d1c9083612707565b6001860155611d30610447620151806126c6565b848660010154611d4091906126af565b1115611d9e5760405162461bcd60e51b815260206004820152602760248201527f43616e6e6f7420657874656e64206c6f636b20746f206d6f7265207468616e206044820152664d415854494d4560c81b606482015260840161087e565b60008111611de35760405162461bcd60e51b81526020600482015260126024820152714e6f2062656e6566697420746f206c6f636b60701b604482015260640161087e565b8715611e0157611e01336007546001600160a01b031690308b611633565b611e0b8982612116565b6001600160a01b0389166000908152600b6020908152604080832089845290915281208054839290611e3e908490612707565b90915550508454600186015460408051928352602083019190915281018590526001600160a01b038a16907f36af321ec8d3c75236829c5317affd40ddb308863a1236d2d277a4025cccee1e9060600160405180910390a25050600160065550505050505050565b336000818152600c602090815260408083208684528252808320938352600b825280832086845290915281205482549091908290611ee490886126c6565b611eee91906126e5565b8354909150811115611f425760405162461bcd60e51b815260206004820152601a60248201527f496e73756666696369656e742066756e647320696e204c6f636b000000000000604482015260640161087e565b611f51818460010154866121f5565b80836000016000828254611f6591906126af565b9091555050336000908152600b6020908152604080832088845290915281208054839290611f949084906126af565b9091555050505050505050565b600080836001600160a01b031683604051611fbc91906127c9565b6000604051808303816000865af19150503d8060008114611ff9576040519150601f19603f3d011682016040523d82523d6000602084013e611ffe565b606091505b50915091506000821415612016573d6000803e3d6000fd5b8051158061203357508080602001905181019061203391906127e5565b61169e5760405162461bcd60e51b815260206004820152601660248201527514d0519157d15490cc8c17d0d0531317d1905253115160521b604482015260640161087e565b6001600160a01b0383166000908152600d60205260408120549082905b8281101561210e576001600160a01b0386166000908152600b602090815260408083208484529091529020548083106120e4576120d3878784612353565b6120dd81846126af565b92506120fb565b82156120f5576120f5838388611ea6565b5061210e565b5080612106816127ae565b915050612095565b505050505050565b6001600160a01b03821661216c5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161087e565b806002600082825461217e9190612707565b90915550506001600160a01b038216600090815260208190526040812080548392906121ab908490612707565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6001600160a01b0381166000908152600d602052604081205490805b828110156122d3576001600160a01b0384166000908152600c602090815260408083208484529091529020600101548514156122c1576001600160a01b0384166000908152600c60209081526040808320848452909152812080546001945088929061227e908490612707565b90915550506001600160a01b0384166000908152600b60209081526040808320848452909152812080548892906122b6908490612707565b909155506122d39050565b806122cb816127ae565b915050612211565b5080611ba05760408051808201825286815260208082018781526001600160a01b0387166000818152600c84528581208882528452858120945185559151600194850155808252600b835284822087835283528482208a90558152600d909152918220805491929091612347908490612707565b90915550505050505050565b6001600160a01b0383166000908152600c602090815260408083208484529091529020805460018201546123889190856121f5565b6000908190556001600160a01b039093168352600b6020908152604080852092855291905282209190915550565b80356001600160a01b03811681146123cd57600080fd5b919050565b600080604083850312156123e557600080fd5b823591506123f5602084016123b6565b90509250929050565b60005b83811015612419578181015183820152602001612401565b8381111561169e5750506000910152565b60208152600082518060208401526124498160408501602087016123fe565b601f01601f19169190910160400192915050565b6000806040838503121561247057600080fd5b612479836123b6565b946020939093013593505050565b60008060006060848603121561249c57600080fd5b6124a5846123b6565b92506124b3602085016123b6565b9150604084013590509250925092565b6000602082840312156124d557600080fd5b5035919050565b600080604083850312156124ef57600080fd5b50508035926020909101359150565b60006020828403121561251057600080fd5b610db4826123b6565b6020808252825182820181905260009190848201906040850190845b8181101561255157835183529284019291840191600101612535565b50909695505050505050565b60008060006060848603121561257257600080fd5b61257b846123b6565b95602085013595506040909401359392505050565b602080825282518282018190526000919060409081850190868401855b828110156125d2578151805185528601518685015292840192908501906001016125ad565b5091979650505050505050565b6000806000606084860312156125f457600080fd5b833592506020840135915061260b604085016123b6565b90509250925092565b6000806040838503121561262757600080fd5b612630836123b6565b91506123f5602084016123b6565b600181811c9082168061265257607f821691505b6020821081141561267357634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252600690820152651313d0d2d15160d21b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b6000828210156126c1576126c1612699565b500390565b60008160001904831182151516156126e0576126e0612699565b500290565b60008261270257634e487b7160e01b600052601260045260246000fd5b500490565b6000821982111561271a5761271a612699565b500190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252601490820152731b195cdcc81d1a185b881b5a5b88185b5bdd5b9d60621b604082015260600190565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b60006000198214156127c2576127c2612699565b5060010190565b600082516127db8184602087016123fe565b9190910192915050565b6000602082840312156127f757600080fd5b81518015158114610db457600080fdfea2646970667358221220a399ebea08650da87f6cf07ac451786d5aca234c52de2349430d37d218e9392964736f6c634300080c0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106102a05760003560e01c8063802c0a1c11610167578063aaf5eb68116100ce578063db5ea63e11610087578063db5ea63e1461067f578063dd19171914610692578063dd62ed3e1461069a578063ee00ef3a146106d3578063f2fde38b146106db578063f4da99c7146106ee57600080fd5b8063aaf5eb68146105f1578063ae6ef65f146105fb578063b1c933e614610604578063bf201c7f14610617578063c1917a5a1461064c578063d08a12ff1461066c57600080fd5b8063a25b39b711610120578063a25b39b714610566578063a457c2d71461056f578063a4d855df14610582578063a650adbd14610595578063a8a4a376146105cb578063a9059cbb146105de57600080fd5b8063802c0a1c146104d4578063853828b6146104f45780638da5cb5b146104fc57806395d89b4114610512578063989bca441461051a578063a183af521461055357600080fd5b806338b4321b1161020b57806365fc3873116101c457806365fc38731461044a57806370a082311461045d578063715018a61461048657806373426cff1461048e57806376b15a57146104a157806379cc6790146104c157600080fd5b806338b4321b146103a457806339509351146103b757806342966c68146103ca5780635312ea8e146103dd5780635b7d8f05146103f05780635d16a6f91461040357600080fd5b806318160ddd1161025d57806318160ddd146103455780632060176b1461034d57806323b872dd146103565780632e1a7d4d14610369578063308097b21461037c578063313ce5671461038f57600080fd5b8063063da9df146102a557806306fdde03146102ba578063095ea7b3146102d85780630f45cc81146102fb5780630f51c09c146103265780631767c4331461033c575b600080fd5b6102b86102b33660046123d2565b610719565b005b6102c2610747565b6040516102cf919061242a565b60405180910390f35b6102eb6102e636600461245d565b6107d9565b60405190151581526020016102cf565b60075461030e906001600160a01b031681565b6040516001600160a01b0390911681526020016102cf565b61032e600181565b6040519081526020016102cf565b61032e61044781565b60025461032e565b61032e61c35081565b6102eb610364366004612487565b6107f0565b6102b86103773660046124c3565b61089f565b60085461030e906001600160a01b031681565b60055460405160ff90911681526020016102cf565b61032e6103b23660046124dc565b610a1d565b6102eb6103c536600461245d565b610a8a565b6102b86103d83660046124c3565b610ac6565b6102b86103eb3660046124c3565b610ad3565b6102b86103fe3660046124fe565b610bb2565b61043561041136600461245d565b600c6020908152600092835260408084209091529082529020805460019091015482565b604080519283526020830191909152016102cf565b6102b86104583660046124dc565b610c2b565b61032e61046b3660046124fe565b6001600160a01b031660009081526020819052604090205490565b6102b8610d0c565b61032e61049c3660046124dc565b610d8b565b6104b46104af3660046124fe565b610dbb565b6040516102cf9190612519565b6102b86104cf36600461245d565b610e83565b61032e6104e23660046124fe565b600d6020526000908152604090205481565b6102b8610f04565b60055461010090046001600160a01b031661030e565b6102c261100e565b61032e61052836600461245d565b6001600160a01b03919091166000908152600c60209081526040808320938352929052206001015490565b6102b86105613660046124dc565b61101d565b61032e60095481565b6102eb61057d36600461245d565b611050565b6102b86105903660046124dc565b6110e9565b61032e6105a336600461245d565b6001600160a01b03919091166000908152600c60209081526040808320938352929052205490565b6102b86105d93660046124c3565b611199565b6102eb6105ec36600461245d565b61124d565b61032e620186a081565b61032e600a5481565b6102b861061236600461255d565b61125a565b61032e61062536600461245d565b6001600160a01b039091166000908152600b60209081526040808320938352929052205490565b61065f61065a3660046124fe565b611289565b6040516102cf9190612590565b6102b861067a3660046124c3565b61137b565b6102b861068d3660046125df565b6113dd565b6102b86113f4565b61032e6106a8366004612614565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b61032e611526565b6102b86106e93660046124fe565b611538565b61032e6106fc36600461245d565b600b60209081526000928352604080842090915290825290205481565b336000818152600b60209081526040808320868452909152902054906107429030908484611633565b505050565b6060600380546107569061263e565b80601f01602080910402602001604051908101604052809291908181526020018280546107829061263e565b80156107cf5780601f106107a4576101008083540402835291602001916107cf565b820191906000526020600020905b8154815290600101906020018083116107b257829003601f168201915b5050505050905090565b60006107e63384846116a4565b5060015b92915050565b60006107fd8484846117c9565b6001600160a01b0384166000908152600160209081526040808320338452909152902054828110156108875760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b61089485338584036116a4565b506001949350505050565b6006546001146108c15760405162461bcd60e51b815260040161087e90612679565b60006006819055338152600c602090815260408083208484529091529020805442906109255760405162461bcd60e51b81526020600482015260136024820152724e6f7468696e6720746f20776974686472617760681b604482015260640161087e565b81600101548110156109725760405162461bcd60e51b8152602060048201526016602482015275546865206c6f636b206469646e27742065787069726560501b604482015260640161087e565b815460006001840181905583556109a4335b336000908152600b602090815260408083208984529091529020546119a2565b336000818152600b602090815260408083208884529091528120556109d7905b6007546001600160a01b03169083611ae8565b604080518281526020810184905233917ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b568910160405180910390a2505060016006555050565b600042808311610a315760009150506107ea565b6000610a3d82856126af565b9050610a4e610447620151806126c6565b8110610a5e5784925050506107ea565b610a6d610447620151806126c6565b610a7782876126c6565b610a8191906126e5565b95945050505050565b3360008181526001602090815260408083206001600160a01b038716845290915281205490916107e6918590610ac1908690612707565b6116a4565b610ad033826119a2565b50565b600654600114610af55760405162461bcd60e51b815260040161087e90612679565b60006006819055338152600c60209081526040808320848452909152902080544290610b595760405162461bcd60e51b81526020600482015260136024820152724e6f7468696e6720746f20776974686472617760681b604482015260640161087e565b81546001830154821015610b9e576000620186a0600a5483610b7b91906126c6565b610b8591906126e5565b9050610b9081611b18565b610b9a81836126af565b9150505b60006001840181905583556109a433610984565b60055461010090046001600160a01b03163314610be15760405162461bcd60e51b815260040161087e9061271f565b600880546001600160a01b0319166001600160a01b0383169081179091556040517f2541601c97bce42b47813f2be715ba4eb0a571f2aafaf35cda2054137d9a79af90600090a250565b336000908152600d6020526040902054600954831015610c5d5760405162461bcd60e51b815260040161087e90612754565b6001821015610cae5760405162461bcd60e51b815260206004820152601b60248201527f566f74696e67206c6f636b2063616e204d494e44415953206d696e0000000000604482015260640161087e565b610447821115610d005760405162461bcd60e51b815260206004820152601b60248201527f566f74696e67206c6f636b2063616e204d415844415953206d61780000000000604482015260640161087e565b61074233848484611ba7565b60055461010090046001600160a01b03163314610d3b5760405162461bcd60e51b815260040161087e9061271f565b60055460405160009161010090046001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a360058054610100600160a81b0319169055565b60006104478210610d9d5750816107ea565b610447610daa83856126c6565b610db491906126e5565b9392505050565b6001600160a01b0381166000908152600d60205260409020546060908067ffffffffffffffff811115610df057610df0612782565b604051908082528060200260200182016040528015610e19578160200160208202803683370190505b50915060005b81811015610e7c576001600160a01b0384166000908152600b602090815260408083208484529091529020548351849083908110610e5f57610e5f612798565b602090810291909101015280610e74816127ae565b915050610e1f565b5050919050565b6000610e8f83336106a8565b905081811015610eed5760405162461bcd60e51b8152602060048201526024808201527f45524332303a206275726e20616d6f756e74206578636565647320616c6c6f77604482015263616e636560e01b606482015260840161087e565b610efa83338484036116a4565b61074283836119a2565b600654600114610f265760405162461bcd60e51b815260040161087e90612679565b60006006819055338152600d6020526040812054905b8181101561100557336000908152600c6020908152604080832084845290915290208054429015801590610f74575081600101548110155b15610ff05781546000600184018190558355610f8f33610984565b336000818152600b60209081526040808320888452909152812055610fb3906109c4565b604080518281526020810184905233917ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b568910160405180910390a2505b50508080610ffd906127ae565b915050610f3c565b50506001600655565b6060600480546107569061263e565b60095482101561103f5760405162461bcd60e51b815260040161087e90612754565b61104c3383600084611ba7565b5050565b3360009081526001602090815260408083206001600160a01b0386168452909152812054828110156110d25760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b606482015260840161087e565b6110df33858584036116a4565b5060019392505050565b600182101561113a5760405162461bcd60e51b815260206004820152601e60248201527f566f74696e67206c6f636b2063616e206265204d494e44415953206d696e0000604482015260640161087e565b61044782111561118c5760405162461bcd60e51b815260206004820152601e60248201527f566f74696e67206c6f636b2063616e206265204d415844415953206d61780000604482015260640161087e565b61104c3360008484611ba7565b60055461010090046001600160a01b031633146111c85760405162461bcd60e51b815260040161087e9061271f565b61c35081111561121a5760405162461bcd60e51b815260206004820152601e60248201527f7769746864726177616c2070656e616c747920697320746f6f20686967680000604482015260640161087e565b600a81905560405181907fa7d10353d34f5fe96bad91fa358f55fbea8ad6ee0d30924022d2b58e77f476e390600090a250565b60006107e63384846117c9565b60095482101561127c5760405162461bcd60e51b815260040161087e90612754565b6107428383600084611ba7565b6001600160a01b0381166000908152600d60205260409020546060908067ffffffffffffffff8111156112be576112be612782565b60405190808252806020026020018201604052801561130357816020015b60408051808201909152600080825260208201528152602001906001900390816112dc5790505b50915060005b81811015610e7c576001600160a01b0384166000908152600c602090815260408083208484528252918290208251808401909352805483526001015490820152835184908390811061135d5761135d612798565b60200260200101819052508080611373906127ae565b915050611309565b60055461010090046001600160a01b031633146113aa5760405162461bcd60e51b815260040161087e9061271f565b600981905560405181907f9a8dc7fb9d13b0f5acaf673226d570d31ec15d8a813fceced1eb36ad11afebc590600090a250565b6113e8838383611ea6565b61074230338186611633565b6006546001146114165760405162461bcd60e51b815260040161087e90612679565b60006006819055338152600d6020526040812054905b8181101561100557336000908152600c6020908152604080832084845290915290208054429015611511578154600183015482101561149c576000620186a0600a548361147991906126c6565b61148391906126e5565b905061148e81611b18565b61149881836126af565b9150505b60006001840181905583556114b033610984565b336000818152600b602090815260408083208884529091528120556114d4906109c4565b604080518281526020810184905233917ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b568910160405180910390a2505b5050808061151e906127ae565b91505061142c565b611535610447620151806126c6565b81565b60055461010090046001600160a01b031633146115675760405162461bcd60e51b815260040161087e9061271f565b6001600160a01b0381166115cc5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161087e565b6005546040516001600160a01b0380841692610100900416907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600580546001600160a01b0390921661010002610100600160a81b0319909216919091179055565b6040516001600160a01b038085166024830152831660448201526064810182905261169e9085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152611fa1565b50505050565b6001600160a01b0383166117065760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161087e565b6001600160a01b0382166117675760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161087e565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b03831661182d5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161087e565b6001600160a01b03821661188f5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161087e565b61189a838383612078565b6001600160a01b038316600090815260208190526040902054818110156119125760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161087e565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290611949908490612707565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161199591815260200190565b60405180910390a361169e565b6001600160a01b038216611a025760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b606482015260840161087e565b6001600160a01b03821660009081526020819052604090205481811015611a765760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b606482015260840161087e565b6001600160a01b0383166000908152602081905260408120838303905560028054849290611aa59084906126af565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906020016117bc565b6040516001600160a01b03831660248201526044810182905261074290849063a9059cbb60e01b90606401611667565b6008546001600160a01b031615611b4657600854600754610ad0916001600160a01b03918216911683611ae8565b600754604051630852cd8d60e31b8152600481018390526001600160a01b03909116906342966c6890602401600060405180830381600087803b158015611b8c57600080fd5b505af1158015611ba0573d6000803e3d6000fd5b5050505050565b600654600114611bc95760405162461bcd60e51b815260040161087e90612679565b600060068190556001600160a01b0385168152600c60209081526040808320848452909152812080546001820154919242929082611c6357611c0b8888610d8b565b8886559050611c1d87620151806126c6565b611c279085612707565b6001808701919091556001600160a01b038a166000908152600d602052604081208054909190611c58908490612707565b90915550611d9e9050565b86611c8557611c728883610a1d565b9050611c7e8884612707565b8555611d9e565b8715611cf95760405162461bcd60e51b815260206004820152603760248201527f43616e6e6f7420696e63726561736520616d6f756e7420616e6420657874656e60448201527f64206c6f636b20696e207468652073616d652074696d65000000000000000000606482015260840161087e565b611d038388610d8b565b9050611d1287620151806126c6565b611d1c9083612707565b6001860155611d30610447620151806126c6565b848660010154611d4091906126af565b1115611d9e5760405162461bcd60e51b815260206004820152602760248201527f43616e6e6f7420657874656e64206c6f636b20746f206d6f7265207468616e206044820152664d415854494d4560c81b606482015260840161087e565b60008111611de35760405162461bcd60e51b81526020600482015260126024820152714e6f2062656e6566697420746f206c6f636b60701b604482015260640161087e565b8715611e0157611e01336007546001600160a01b031690308b611633565b611e0b8982612116565b6001600160a01b0389166000908152600b6020908152604080832089845290915281208054839290611e3e908490612707565b90915550508454600186015460408051928352602083019190915281018590526001600160a01b038a16907f36af321ec8d3c75236829c5317affd40ddb308863a1236d2d277a4025cccee1e9060600160405180910390a25050600160065550505050505050565b336000818152600c602090815260408083208684528252808320938352600b825280832086845290915281205482549091908290611ee490886126c6565b611eee91906126e5565b8354909150811115611f425760405162461bcd60e51b815260206004820152601a60248201527f496e73756666696369656e742066756e647320696e204c6f636b000000000000604482015260640161087e565b611f51818460010154866121f5565b80836000016000828254611f6591906126af565b9091555050336000908152600b6020908152604080832088845290915281208054839290611f949084906126af565b9091555050505050505050565b600080836001600160a01b031683604051611fbc91906127c9565b6000604051808303816000865af19150503d8060008114611ff9576040519150601f19603f3d011682016040523d82523d6000602084013e611ffe565b606091505b50915091506000821415612016573d6000803e3d6000fd5b8051158061203357508080602001905181019061203391906127e5565b61169e5760405162461bcd60e51b815260206004820152601660248201527514d0519157d15490cc8c17d0d0531317d1905253115160521b604482015260640161087e565b6001600160a01b0383166000908152600d60205260408120549082905b8281101561210e576001600160a01b0386166000908152600b602090815260408083208484529091529020548083106120e4576120d3878784612353565b6120dd81846126af565b92506120fb565b82156120f5576120f5838388611ea6565b5061210e565b5080612106816127ae565b915050612095565b505050505050565b6001600160a01b03821661216c5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161087e565b806002600082825461217e9190612707565b90915550506001600160a01b038216600090815260208190526040812080548392906121ab908490612707565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6001600160a01b0381166000908152600d602052604081205490805b828110156122d3576001600160a01b0384166000908152600c602090815260408083208484529091529020600101548514156122c1576001600160a01b0384166000908152600c60209081526040808320848452909152812080546001945088929061227e908490612707565b90915550506001600160a01b0384166000908152600b60209081526040808320848452909152812080548892906122b6908490612707565b909155506122d39050565b806122cb816127ae565b915050612211565b5080611ba05760408051808201825286815260208082018781526001600160a01b0387166000818152600c84528581208882528452858120945185559151600194850155808252600b835284822087835283528482208a90558152600d909152918220805491929091612347908490612707565b90915550505050505050565b6001600160a01b0383166000908152600c602090815260408083208484529091529020805460018201546123889190856121f5565b6000908190556001600160a01b039093168352600b6020908152604080852092855291905282209190915550565b80356001600160a01b03811681146123cd57600080fd5b919050565b600080604083850312156123e557600080fd5b823591506123f5602084016123b6565b90509250929050565b60005b83811015612419578181015183820152602001612401565b8381111561169e5750506000910152565b60208152600082518060208401526124498160408501602087016123fe565b601f01601f19169190910160400192915050565b6000806040838503121561247057600080fd5b612479836123b6565b946020939093013593505050565b60008060006060848603121561249c57600080fd5b6124a5846123b6565b92506124b3602085016123b6565b9150604084013590509250925092565b6000602082840312156124d557600080fd5b5035919050565b600080604083850312156124ef57600080fd5b50508035926020909101359150565b60006020828403121561251057600080fd5b610db4826123b6565b6020808252825182820181905260009190848201906040850190845b8181101561255157835183529284019291840191600101612535565b50909695505050505050565b60008060006060848603121561257257600080fd5b61257b846123b6565b95602085013595506040909401359392505050565b602080825282518282018190526000919060409081850190868401855b828110156125d2578151805185528601518685015292840192908501906001016125ad565b5091979650505050505050565b6000806000606084860312156125f457600080fd5b833592506020840135915061260b604085016123b6565b90509250925092565b6000806040838503121561262757600080fd5b612630836123b6565b91506123f5602084016123b6565b600181811c9082168061265257607f821691505b6020821081141561267357634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252600690820152651313d0d2d15160d21b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b6000828210156126c1576126c1612699565b500390565b60008160001904831182151516156126e0576126e0612699565b500290565b60008261270257634e487b7160e01b600052601260045260246000fd5b500490565b6000821982111561271a5761271a612699565b500190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252601490820152731b195cdcc81d1a185b881b5a5b88185b5bdd5b9d60621b604082015260600190565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b60006000198214156127c2576127c2612699565b5060010190565b600082516127db8184602087016123fe565b9190910192915050565b6000602082840312156127f757600080fd5b81518015158114610db457600080fdfea2646970667358221220a399ebea08650da87f6cf07ac451786d5aca234c52de2349430d37d218e9392964736f6c634300080c0033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "burn(uint256)": {
        "details": "Destroys `amount` tokens from the caller. See {ERC20-_burn}."
      },
      "burnFrom(address,uint256)": {
        "details": "Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 8660,
        "contract": "contracts/BloodRedRequiem.sol:BloodRedRequiem",
        "label": "_balances",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 8666,
        "contract": "contracts/BloodRedRequiem.sol:BloodRedRequiem",
        "label": "_allowances",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
      },
      {
        "astId": 8668,
        "contract": "contracts/BloodRedRequiem.sol:BloodRedRequiem",
        "label": "_totalSupply",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 8670,
        "contract": "contracts/BloodRedRequiem.sol:BloodRedRequiem",
        "label": "_name",
        "offset": 0,
        "slot": "3",
        "type": "t_string_storage"
      },
      {
        "astId": 8672,
        "contract": "contracts/BloodRedRequiem.sol:BloodRedRequiem",
        "label": "_symbol",
        "offset": 0,
        "slot": "4",
        "type": "t_string_storage"
      },
      {
        "astId": 8674,
        "contract": "contracts/BloodRedRequiem.sol:BloodRedRequiem",
        "label": "_decimals",
        "offset": 0,
        "slot": "5",
        "type": "t_uint8"
      },
      {
        "astId": 9512,
        "contract": "contracts/BloodRedRequiem.sol:BloodRedRequiem",
        "label": "_owner",
        "offset": 1,
        "slot": "5",
        "type": "t_address"
      },
      {
        "astId": 17,
        "contract": "contracts/BloodRedRequiem.sol:BloodRedRequiem",
        "label": "_unlocked",
        "offset": 0,
        "slot": "6",
        "type": "t_uint256"
      },
      {
        "astId": 38,
        "contract": "contracts/BloodRedRequiem.sol:BloodRedRequiem",
        "label": "lockedToken",
        "offset": 0,
        "slot": "7",
        "type": "t_address"
      },
      {
        "astId": 40,
        "contract": "contracts/BloodRedRequiem.sol:BloodRedRequiem",
        "label": "penaltyCollector",
        "offset": 0,
        "slot": "8",
        "type": "t_address"
      },
      {
        "astId": 42,
        "contract": "contracts/BloodRedRequiem.sol:BloodRedRequiem",
        "label": "minLockedAmount",
        "offset": 0,
        "slot": "9",
        "type": "t_uint256"
      },
      {
        "astId": 44,
        "contract": "contracts/BloodRedRequiem.sol:BloodRedRequiem",
        "label": "earlyWithdrawPenaltyRate",
        "offset": 0,
        "slot": "10",
        "type": "t_uint256"
      },
      {
        "astId": 50,
        "contract": "contracts/BloodRedRequiem.sol:BloodRedRequiem",
        "label": "mintedForLock",
        "offset": 0,
        "slot": "11",
        "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))"
      },
      {
        "astId": 57,
        "contract": "contracts/BloodRedRequiem.sol:BloodRedRequiem",
        "label": "lockedBalances",
        "offset": 0,
        "slot": "12",
        "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(LockedBalance)6917_storage))"
      },
      {
        "astId": 61,
        "contract": "contracts/BloodRedRequiem.sol:BloodRedRequiem",
        "label": "lockIds",
        "offset": 0,
        "slot": "13",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 63,
        "contract": "contracts/BloodRedRequiem.sol:BloodRedRequiem",
        "label": "lastLock",
        "offset": 0,
        "slot": "14",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_uint256)"
      },
      "t_mapping(t_address,t_mapping(t_uint256,t_struct(LockedBalance)6917_storage))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(uint256 => struct IGovernanceLock.LockedBalance))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint256,t_struct(LockedBalance)6917_storage)"
      },
      "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(uint256 => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint256,t_uint256)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_uint256,t_struct(LockedBalance)6917_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct IGovernanceLock.LockedBalance)",
        "numberOfBytes": "32",
        "value": "t_struct(LockedBalance)6917_storage"
      },
      "t_mapping(t_uint256,t_uint256)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(LockedBalance)6917_storage": {
        "encoding": "inplace",
        "label": "struct IGovernanceLock.LockedBalance",
        "members": [
          {
            "astId": 6914,
            "contract": "contracts/BloodRedRequiem.sol:BloodRedRequiem",
            "label": "amount",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 6916,
            "contract": "contracts/BloodRedRequiem.sol:BloodRedRequiem",
            "label": "end",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  }
}