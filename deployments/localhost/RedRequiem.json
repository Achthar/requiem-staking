{
  "address": "0x5FC8d32690cc91D4c39d9d3abcBD16989F875707",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_lockedToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_minLockedAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "provider",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "locktime",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "Deposit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "penalty",
          "type": "uint256"
        }
      ],
      "name": "EarlyWithdrawPenaltySet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "MinLockedAmountSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "PenaltyCollectorSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "provider",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "Withdraw",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "MAXDAYS",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MAXTIME",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MAX_WITHDRAWAL_PENALTY",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MINDAYS",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "PRECISION",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burnFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_days",
          "type": "uint256"
        }
      ],
      "name": "create_lock",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_addr",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "deposit_for",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "earlyWithdrawPenaltyRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "emergencyWithdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "increase_amount",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_days",
          "type": "uint256"
        }
      ],
      "name": "increase_unlock_time",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "locked",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "end",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lockedToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_addr",
          "type": "address"
        }
      ],
      "name": "locked__end",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_addr",
          "type": "address"
        }
      ],
      "name": "locked__of",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minLockedAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "mintedForLock",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "penaltyCollector",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_earlyWithdrawPenaltyRate",
          "type": "uint256"
        }
      ],
      "name": "setEarlyWithdrawPenaltyRate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_minLockedAmount",
          "type": "uint256"
        }
      ],
      "name": "setMinLockedAmount",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_addr",
          "type": "address"
        }
      ],
      "name": "setPenaltyCollector",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner_",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_days",
          "type": "uint256"
        }
      ],
      "name": "voting_power_locked_days",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_unlock_time",
          "type": "uint256"
        }
      ],
      "name": "voting_power_unlock_time",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x1c3abe4a72bfdc4ff1ea94e72fbfa63642df162ef5d71dacee9e245566a97f14",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0x5FC8d32690cc91D4c39d9d3abcBD16989F875707",
    "transactionIndex": 0,
    "gasUsed": "1865181",
    "logsBloom": "0x
    "blockHash": "0x77a1db4782c0f4b50b8e7929cb36fc7f63c5359a7a884894fad84d6249bb8f81",
    "transactionHash": "0x1c3abe4a72bfdc4ff1ea94e72fbfa63642df162ef5d71dacee9e245566a97f14",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 6,
        "transactionHash": "0x1c3abe4a72bfdc4ff1ea94e72fbfa63642df162ef5d71dacee9e245566a97f14",
        "address": "0x5FC8d32690cc91D4c39d9d3abcBD16989F875707",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000f39fd6e51aad88f6f4ce6ab8827279cfffb92266"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0x77a1db4782c0f4b50b8e7929cb36fc7f63c5359a7a884894fad84d6249bb8f81"
      }
    ],
    "blockNumber": 6,
    "cumulativeGasUsed": "1865181",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "Red Requiem",
    "RREQ",
    "0x9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0",
    "1000000000000000000"
  ],
  "solcInputHash": "32302213c98df724d7b81dc9a6f1eea5",
  "metadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_lockedToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_minLockedAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"locktime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"penalty\",\"type\":\"uint256\"}],\"name\":\"EarlyWithdrawPenaltySet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"MinLockedAmountSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"PenaltyCollectorSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MAXDAYS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAXTIME\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_WITHDRAWAL_PENALTY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINDAYS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PRECISION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_days\",\"type\":\"uint256\"}],\"name\":\"create_lock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"deposit_for\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"earlyWithdrawPenaltyRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"increase_amount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_days\",\"type\":\"uint256\"}],\"name\":\"increase_unlock_time\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"locked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"end\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lockedToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"locked__end\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"locked__of\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minLockedAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"mintedForLock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"penaltyCollector\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_earlyWithdrawPenaltyRate\",\"type\":\"uint256\"}],\"name\":\"setEarlyWithdrawPenaltyRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_minLockedAmount\",\"type\":\"uint256\"}],\"name\":\"setMinLockedAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"setPenaltyCollector\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner_\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_days\",\"type\":\"uint256\"}],\"name\":\"voting_power_locked_days\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_unlock_time\",\"type\":\"uint256\"}],\"name\":\"voting_power_unlock_time\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys `amount` tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/RedRequiem.sol\":\"RedRequiem\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/RedRequiem.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity ^0.8.12;\\n\\nimport \\\"./libraries/ERC20Burnable.sol\\\";\\nimport \\\"./libraries/SafeERC20.sol\\\";\\nimport \\\"./libraries/Ownable.sol\\\";\\nimport \\\"./interfaces/IGovernanceToken.sol\\\";\\n\\ncontract RedRequiem is ERC20Burnable, IGovernanceToken, Ownable {\\n    using SafeERC20 for IERC20;\\n\\n    // flags\\n    uint256 private _unlocked;\\n\\n    uint256 public constant MINDAYS = 7;\\n    uint256 public constant MAXDAYS = 3 * 365;\\n\\n    uint256 public constant MAXTIME = MAXDAYS * 1 days; // 3 years\\n    uint256 public constant MAX_WITHDRAWAL_PENALTY = 50000; // 50%\\n    uint256 public constant PRECISION = 100000; // 5 decimals\\n\\n    address public lockedToken;\\n    address public penaltyCollector;\\n    uint256 public minLockedAmount;\\n    uint256 public earlyWithdrawPenaltyRate;\\n\\n    struct LockedBalance {\\n        uint256 amount;\\n        uint256 end;\\n    }\\n\\n    mapping(address => LockedBalance) public locked;\\n    mapping(address => uint256) public mintedForLock;\\n\\n    /* ========== MODIFIERS ========== */\\n\\n    modifier lock() {\\n        require(_unlocked == 1, \\\"LOCKED\\\");\\n        _unlocked = 0;\\n        _;\\n        _unlocked = 1;\\n    }\\n\\n    constructor(\\n        string memory _name,\\n        string memory _symbol,\\n        address _lockedToken,\\n        uint256 _minLockedAmount) ERC20(_name, _symbol, 18)\\n    {\\n        lockedToken = _lockedToken;\\n        minLockedAmount = _minLockedAmount;\\n        earlyWithdrawPenaltyRate = 30000; // 30%\\n        _unlocked = 1;\\n    }\\n\\n    /* ========== PUBLIC FUNCTIONS ========== */\\n\\n    function locked__of(address _addr) external view override returns (uint256) {\\n        return locked[_addr].amount;\\n    }\\n\\n    function locked__end(address _addr) external view override returns (uint256) {\\n        return locked[_addr].end;\\n    }\\n\\n    function voting_power_unlock_time(uint256 _value, uint256 _unlock_time) public view override returns (uint256) {\\n        uint256 _now = block.timestamp;\\n        if (_unlock_time <= _now) return 0;\\n        uint256 _lockedSeconds = _unlock_time - _now;\\n        if (_lockedSeconds >= MAXTIME) {\\n            return _value;\\n        }\\n        return _value * _lockedSeconds / MAXTIME;\\n    }\\n\\n    function voting_power_locked_days(uint256 _value, uint256 _days) public pure override returns (uint256) {\\n        if (_days >= MAXDAYS) {\\n            return _value;\\n        }\\n        return _value * _days / MAXDAYS;\\n    }\\n\\n    function deposit_for(address _addr, uint256 _value) external override {\\n        require(_value >= minLockedAmount, \\\"less than min amount\\\");\\n        _deposit_for(_addr, _value, 0);\\n    }\\n\\n    function create_lock(uint256 _value, uint256 _days) external override {\\n        require(_value >= minLockedAmount, \\\"less than min amount\\\");\\n        require(locked[_msgSender()].amount == 0, \\\"Withdraw old tokens first\\\");\\n        require(_days >= MINDAYS, \\\"Voting lock can be 7 days min\\\");\\n        require(_days <= MAXDAYS, \\\"Voting lock can be 4 years max\\\");\\n        _deposit_for(_msgSender(), _value, _days);\\n    }\\n\\n    function increase_amount(uint256 _value) external override {\\n        require(_value >= minLockedAmount, \\\"less than min amount\\\");\\n        _deposit_for(_msgSender(), _value, 0);\\n    }\\n\\n    function increase_unlock_time(uint256 _days) external override {\\n        require(_days >= MINDAYS, \\\"Voting lock can be 7 days min\\\");\\n        require(_days <= MAXDAYS, \\\"Voting lock can be 4 years max\\\");\\n        _deposit_for(_msgSender(), 0, _days);\\n    }\\n\\n    function withdraw() external override lock {\\n        LockedBalance storage _locked = locked[_msgSender()];\\n        uint256 _now = block.timestamp;\\n        require(_locked.amount > 0, \\\"Nothing to withdraw\\\");\\n        require(_now >= _locked.end, \\\"The lock didn't expire\\\");\\n        uint256 _amount = _locked.amount;\\n        _locked.end = 0;\\n        _locked.amount = 0;\\n        _burn(_msgSender(), mintedForLock[_msgSender()]);\\n        mintedForLock[_msgSender()] = 0;\\n        IERC20(lockedToken).safeTransfer(_msgSender(), _amount);\\n\\n        emit Withdraw(_msgSender(), _amount, _now);\\n    }\\n\\n    // This will charge PENALTY if lock is not expired yet\\n    function emergencyWithdraw() external lock {\\n        LockedBalance storage _locked = locked[_msgSender()];\\n        uint256 _now = block.timestamp;\\n        require(_locked.amount > 0, \\\"Nothing to withdraw\\\");\\n        uint256 _amount = _locked.amount;\\n        if (_now < _locked.end) {\\n            uint256 _fee = _amount * earlyWithdrawPenaltyRate / PRECISION;\\n            _penalize(_fee);\\n            _amount = _amount - _fee;\\n        }\\n        _locked.end = 0;\\n        _locked.amount = 0;\\n        _burn(_msgSender(), mintedForLock[_msgSender()]);\\n        mintedForLock[_msgSender()] = 0;\\n\\n        IERC20(lockedToken).safeTransfer(_msgSender(), _amount);\\n\\n        emit Withdraw(_msgSender(), _amount, _now);\\n    }\\n\\n    /* ========== INTERNAL FUNCTIONS ========== */\\n\\n    function _deposit_for(\\n        address _addr,\\n        uint256 _value,\\n        uint256 _days\\n    ) internal lock {\\n        LockedBalance storage _locked = locked[_addr];\\n        uint256 _now = block.timestamp;\\n        uint256 _amount = _locked.amount;\\n        uint256 _end = _locked.end;\\n        uint256 _vp;\\n        if (_amount == 0) {\\n            _vp = voting_power_locked_days(_value, _days);\\n            _locked.amount = _value;\\n            _locked.end = _now + _days * 1 days;\\n        } else if (_days == 0) {\\n            _vp = voting_power_unlock_time(_value, _end);\\n            _locked.amount = _amount + _value;\\n        } else {\\n            require(_value == 0, \\\"Cannot increase amount and extend lock in the same time\\\");\\n            _vp = voting_power_locked_days(_amount, _days);\\n            _locked.end = _end + _days * 1 days;\\n            require(_locked.end - _now <= MAXTIME, \\\"Cannot extend lock to more than 4 years\\\");\\n        }\\n        require(_vp > 0, \\\"No benefit to lock\\\");\\n        if (_value > 0) {\\n            IERC20(lockedToken).safeTransferFrom(_msgSender(), address(this), _value);\\n        }\\n        _mint(_addr, _vp);\\n        mintedForLock[_addr] += _vp;\\n\\n        emit Deposit(_addr, _locked.amount, _locked.end, _now);\\n    }\\n\\n    function _penalize(uint256 _amount) internal {\\n        if (penaltyCollector != address(0)) {\\n            // send to collector if `penaltyCollector` set\\n            IERC20(lockedToken).safeTransfer(penaltyCollector, _amount);\\n        } else {\\n            ERC20Burnable(lockedToken).burn(_amount);\\n        }\\n    }\\n\\n    /* ========== RESTRICTED FUNCTIONS ========== */\\n\\n    function setMinLockedAmount(uint256 _minLockedAmount) external onlyOwner {\\n        minLockedAmount = _minLockedAmount;\\n        emit MinLockedAmountSet(_minLockedAmount);\\n    }\\n\\n    function setEarlyWithdrawPenaltyRate(uint256 _earlyWithdrawPenaltyRate) external onlyOwner {\\n        require(_earlyWithdrawPenaltyRate <= MAX_WITHDRAWAL_PENALTY, \\\"withdrawal penalty is too high\\\"); // <= 50%\\n        earlyWithdrawPenaltyRate = _earlyWithdrawPenaltyRate;\\n        emit EarlyWithdrawPenaltySet(_earlyWithdrawPenaltyRate);\\n    }\\n\\n    function setPenaltyCollector(address _addr) external onlyOwner {\\n        penaltyCollector = _addr;\\n        emit PenaltyCollectorSet(_addr);\\n    }\\n\\n    /* =============== EVENTS ==================== */\\n    event Deposit(address indexed provider, uint256 value, uint256 locktime, uint256 timestamp);\\n    event Withdraw(address indexed provider, uint256 value, uint256 timestamp);\\n    event PenaltyCollectorSet(address indexed addr);\\n    event EarlyWithdrawPenaltySet(uint256 indexed penalty);\\n    event MinLockedAmountSet(uint256 indexed amount);\\n}\\n\",\"keccak256\":\"0xb632028ebe8e719c3bd1db3d60c7b186b0351fbcafc687145ff277b7f17cec77\",\"license\":\"UNLICENSED\"},\"contracts/interfaces/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.12;\\n\\ninterface IERC20 {\\n    function decimals() external view returns (uint8);\\n\\n    function totalSupply() external view returns (uint256);\\n\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\n\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\",\"keccak256\":\"0x8dbe6c86e1a82d74cece2191fcab3537484a56449e27af3918e0d416871cfeb8\",\"license\":\"MIT\"},\"contracts/interfaces/ERC20/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.12;\\n\\nimport \\\"./IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\",\"keccak256\":\"0x8953c281afce43278a1654e00deebff3141ad67faa26238843068f62f20a2e90\",\"license\":\"MIT\"},\"contracts/interfaces/IGovernanceToken.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity ^0.8.12;\\n\\ninterface IGovernanceToken {\\n    function locked__of(address _addr) external view returns (uint256);\\n\\n    function locked__end(address _addr) external view returns (uint256);\\n\\n    function voting_power_unlock_time(uint256 _value, uint256 _unlock_time) external view returns (uint256);\\n\\n    function voting_power_locked_days(uint256 _value, uint256 _days) external view returns (uint256);\\n\\n    function deposit_for(address _addr, uint256 _value) external;\\n\\n    function create_lock(uint256 _value, uint256 _days) external;\\n\\n    function increase_amount(uint256 _value) external;\\n\\n    function increase_unlock_time(uint256 _days) external;\\n\\n    function withdraw() external;\\n}\\n\",\"keccak256\":\"0xe53b0512eb9eb9b55cdbe2c9ea0b5944739cd8ce30c9589fc2bcae573df150a5\",\"license\":\"UNLICENSED\"},\"contracts/interfaces/IOwnable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.12;\\n\\ninterface IOwnable {\\n  function owner() external view returns (address);\\n\\n  function renounceOwnership() external;\\n  \\n  function transferOwnership( address newOwner_ ) external;\\n}\",\"keccak256\":\"0x25ba057b10c88e873a141b59e3397527042a41f8f3caa819dd15d9b64bfe3a34\",\"license\":\"MIT\"},\"contracts/libraries/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.12;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\",\"keccak256\":\"0x120a788e5a65b0fd09c3095fd9a7e6d537e1febaf9597c354ac566784f42552a\",\"license\":\"MIT\"},\"contracts/libraries/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.12;\\n\\nimport \\\"../interfaces/ERC20/IERC20.sol\\\";\\nimport \\\"../interfaces/ERC20/IERC20Metadata.sol\\\";\\nimport \\\"./Context.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20 is Context, IERC20, IERC20Metadata {\\n    mapping(address => uint256) private _balances;\\n\\n    mapping(address => mapping(address => uint256)) private _allowances;\\n\\n    uint256 internal _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n    uint8 private _decimals;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * The default value of {decimals} is 18. To select a different value for\\n     * {decimals} you should overload it.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_, uint8 decimals_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n        _decimals = decimals_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\\n     * overridden;\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual override(IERC20, IERC20Metadata) returns (uint8) {\\n        return _decimals;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `recipient` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\\n        _transfer(_msgSender(), recipient, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n        _approve(_msgSender(), spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * Requirements:\\n     *\\n     * - `sender` and `recipient` cannot be the zero address.\\n     * - `sender` must have a balance of at least `amount`.\\n     * - the caller must have allowance for ``sender``'s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) public virtual override returns (bool) {\\n        _transfer(sender, recipient, amount);\\n\\n        uint256 currentAllowance = _allowances[sender][_msgSender()];\\n        require(currentAllowance >= amount, \\\"ERC20: transfer amount exceeds allowance\\\");\\n        unchecked {\\n            _approve(sender, _msgSender(), currentAllowance - amount);\\n        }\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender] + addedValue);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `spender` must have allowance for the caller of at least\\n     * `subtractedValue`.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\n        uint256 currentAllowance = _allowances[_msgSender()][spender];\\n        require(currentAllowance >= subtractedValue, \\\"ERC20: decreased allowance below zero\\\");\\n        unchecked {\\n            _approve(_msgSender(), spender, currentAllowance - subtractedValue);\\n        }\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves `amount` of tokens from `sender` to `recipient`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `sender` cannot be the zero address.\\n     * - `recipient` cannot be the zero address.\\n     * - `sender` must have a balance of at least `amount`.\\n     */\\n    function _transfer(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) internal virtual {\\n        require(sender != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(recipient != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(sender, recipient, amount);\\n\\n        uint256 senderBalance = _balances[sender];\\n        require(senderBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        unchecked {\\n            _balances[sender] = senderBalance - amount;\\n        }\\n        _balances[recipient] += amount;\\n\\n        emit Transfer(sender, recipient, amount);\\n\\n        _afterTokenTransfer(sender, recipient, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply += amount;\\n        _balances[account] += amount;\\n        emit Transfer(address(0), account, amount);\\n\\n        _afterTokenTransfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _beforeTokenTransfer(account, address(0), amount);\\n\\n        uint256 accountBalance = _balances[account];\\n        require(accountBalance >= amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        unchecked {\\n            _balances[account] = accountBalance - amount;\\n        }\\n        _totalSupply -= amount;\\n\\n        emit Transfer(account, address(0), amount);\\n\\n        _afterTokenTransfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(\\n        address owner,\\n        address spender,\\n        uint256 amount\\n    ) internal virtual {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * will be transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * has been transferred to `to`.\\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n}\\n\",\"keccak256\":\"0xcfdaeae1609e4f1fe75d63b230f29a8f6a20d945f40868a6af707d1211f92eef\",\"license\":\"MIT\"},\"contracts/libraries/ERC20Burnable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.12;\\n\\nimport \\\"./ERC20.sol\\\";\\nimport \\\"./Context.sol\\\";\\n\\n/**\\n * @dev Extension of {ERC20} that allows token holders to destroy both their own\\n * tokens and those that they have an allowance for, in a way that can be\\n * recognized off-chain (via event analysis).\\n */\\nabstract contract ERC20Burnable is Context, ERC20 {\\n  /**\\n   * @dev Destroys `amount` tokens from the caller.\\n   *\\n   * See {ERC20-_burn}.\\n   */\\n  function burn(uint256 amount) public virtual {\\n    _burn(_msgSender(), amount);\\n  }\\n\\n  /**\\n   * @dev Destroys `amount` tokens from `account`, deducting from the caller's\\n   * allowance.\\n   *\\n   * See {ERC20-_burn} and {ERC20-allowance}.\\n   *\\n   * Requirements:\\n   *\\n   * - the caller must have allowance for ``accounts``'s tokens of at least\\n   * `amount`.\\n   */\\n  function burnFrom(address account, uint256 amount) public virtual {\\n    uint256 currentAllowance = allowance(account, _msgSender());\\n    require(currentAllowance >= amount, \\\"ERC20: burn amount exceeds allowance\\\");\\n    unchecked {\\n      _approve(account, _msgSender(), currentAllowance - amount);\\n    }\\n    _burn(account, amount);\\n  }\\n}\\n\",\"keccak256\":\"0x48bd2dd19c658ab194e5d8d544118889aa0e32e54ec900b7b8f728c820cb318e\",\"license\":\"MIT\"},\"contracts/libraries/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.12;\\n\\nimport \\\"../interfaces/IOwnable.sol\\\";\\n\\ncontract Ownable is IOwnable {\\n    \\n  address internal _owner;\\n\\n  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n  constructor () {\\n    _owner = msg.sender;\\n    emit OwnershipTransferred( address(0), _owner );\\n  }\\n\\n  function owner() public view override returns (address) {\\n    return _owner;\\n  }\\n\\n  modifier onlyOwner() {\\n    require( _owner == msg.sender, \\\"Ownable: caller is not the owner\\\" );\\n    _;\\n  }\\n\\n  function renounceOwnership() public virtual override onlyOwner() {\\n    emit OwnershipTransferred( _owner, address(0) );\\n    _owner = address(0);\\n  }\\n\\n  function transferOwnership( address newOwner_ ) public virtual override onlyOwner() {\\n    require( newOwner_ != address(0), \\\"Ownable: new owner is the zero address\\\");\\n    emit OwnershipTransferred( _owner, newOwner_ );\\n    _owner = newOwner_;\\n  }\\n}\",\"keccak256\":\"0x5392be04c5915011130d24c683f6c82784e3117e180abd04313e6aece7cae986\",\"license\":\"MIT\"},\"contracts/libraries/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\n// Based on the ReentrancyGuard library from OpenZeppelin Contracts, altered to reduce gas costs.\\n// The `safeTransfer` and `safeTransferFrom` functions assume that `token` is a contract (an account with code), and\\n// work differently from the OpenZeppelin version if it is not.\\n\\npragma solidity ^0.8.12;\\n\\nimport \\\"../interfaces/ERC20/IERC20.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n  function safeTransfer(\\n    IERC20 token,\\n    address to,\\n    uint256 value\\n  ) internal {\\n    _callOptionalReturn(\\n      address(token),\\n      abi.encodeWithSelector(token.transfer.selector, to, value)\\n    );\\n  }\\n\\n  function safeTransferFrom(\\n    IERC20 token,\\n    address from,\\n    address to,\\n    uint256 value\\n  ) internal {\\n    _callOptionalReturn(\\n      address(token),\\n      abi.encodeWithSelector(token.transferFrom.selector, from, to, value)\\n    );\\n  }\\n\\n  function safeIncreaseAllowance(\\n    IERC20 token,\\n    address spender,\\n    uint256 value\\n  ) internal {\\n    uint256 newAllowance = token.allowance(address(this), spender) + value;\\n    _callOptionalReturn(\\n      address(token),\\n      abi.encodeWithSelector(token.approve.selector, spender, newAllowance)\\n    );\\n  }\\n\\n  /**\\n   * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n   * on the return value: the return value is optional (but if data is returned, it must not be false).\\n   *\\n   * WARNING: `token` is assumed to be a contract: calls to EOAs will *not* revert.\\n   */\\n  function _callOptionalReturn(address token, bytes memory data) private {\\n    // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n    // we're implementing it ourselves.\\n    (bool success, bytes memory returndata) = token.call(data);\\n\\n    // If the low-level call didn't succeed we return whatever was returned from it.\\n    assembly {\\n      if eq(success, 0) {\\n        returndatacopy(0, 0, returndatasize())\\n        revert(0, returndatasize())\\n      }\\n    }\\n\\n    // Finally we check the returndata size is either zero or true - note that this check will always pass for EOAs\\n    require(\\n      returndata.length == 0 || abi.decode(returndata, (bool)),\\n      \\\"SAFE_ERC20_CALL_FAILED\\\"\\n    );\\n  }\\n}\\n\",\"keccak256\":\"0xcf1f0a6ad9896170de07c190358be86e5f3cc4faf5c8be7ed30f2b7ad8316911\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b50604051620020f7380380620020f7833981016040819052620000349162000270565b83836012826003908051906020019062000050929190620000fd565b50815162000066906004906020850190620000fd565b5060058054336101009081026001600160a81b031990921660ff9094169390931717908190556040519190046001600160a01b03169250600091507f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3600780546001600160a01b0319166001600160a01b0393909316929092179091556009555050617530600a55600160065562000340565b8280546200010b9062000303565b90600052602060002090601f0160209004810192826200012f57600085556200017a565b82601f106200014a57805160ff19168380011785556200017a565b828001600101855582156200017a579182015b828111156200017a5782518255916020019190600101906200015d565b50620001889291506200018c565b5090565b5b808211156200018857600081556001016200018d565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620001cb57600080fd5b81516001600160401b0380821115620001e857620001e8620001a3565b604051601f8301601f19908116603f01168101908282118183101715620002135762000213620001a3565b816040528381526020925086838588010111156200023057600080fd5b600091505b8382101562000254578582018301518183018401529082019062000235565b83821115620002665760008385830101525b9695505050505050565b600080600080608085870312156200028757600080fd5b84516001600160401b03808211156200029f57600080fd5b620002ad88838901620001b9565b95506020870151915080821115620002c457600080fd5b50620002d387828801620001b9565b604087015190945090506001600160a01b0381168114620002f357600080fd5b6060959095015193969295505050565b600181811c908216806200031857607f821691505b602082108114156200033a57634e487b7160e01b600052602260045260246000fd5b50919050565b611da780620003506000396000f3fe608060405234801561001057600080fd5b50600436106102485760003560e01c806370a082311161013b578063aaf5eb68116100b8578063db2e21bc1161007c578063db2e21bc1461053d578063dd62ed3e14610545578063ee00ef3a1461057e578063eff7a61214610586578063f2fde38b1461059957600080fd5b8063aaf5eb68146104af578063adc63589146104b9578063ae6ef65f146104e5578063cbf9fe5f146104ee578063d08a12ff1461052a57600080fd5b806395d89b41116100ff57806395d89b4114610465578063a25b39b71461046d578063a457c2d714610476578063a8a4a37614610489578063a9059cbb1461049c57600080fd5b806370a08231146103f8578063715018a61461042157806373426cff1461042957806379cc67901461043c5780638da5cb5b1461044f57600080fd5b8063308097b2116101c95780633ccfd60b1161018d5780633ccfd60b146103a457806342966c68146103ac5780634957677c146103bf5780635b7d8f05146103d257806365fc3873146103e557600080fd5b8063308097b214610341578063313ce5671461035457806338b4321b14610369578063395093511461037c5780633a46273e1461038f57600080fd5b8063113f665311610210578063113f6653146102f45780631767c4331461031457806318160ddd1461031d5780632060176b1461032557806323b872dd1461032e57600080fd5b80630193512b1461024d57806306fdde0314610289578063095ea7b31461029e5780630f45cc81146102c15780630f51c09c146102ec575b600080fd5b61027661025b366004611aa1565b6001600160a01b03166000908152600b602052604090205490565b6040519081526020015b60405180910390f35b6102916105ac565b6040516102809190611ae8565b6102b16102ac366004611b1b565b61063e565b6040519015158152602001610280565b6007546102d4906001600160a01b031681565b6040516001600160a01b039091168152602001610280565b610276600781565b610276610302366004611aa1565b600c6020526000908152604090205481565b61027661044781565b600254610276565b61027661c35081565b6102b161033c366004611b45565b610655565b6008546102d4906001600160a01b031681565b60055460405160ff9091168152602001610280565b610276610377366004611b81565b610704565b6102b161038a366004611b1b565b610771565b6103a261039d366004611b1b565b6107ad565b005b6103a26107df565b6103a26103ba366004611ba3565b61093c565b6103a26103cd366004611ba3565b610949565b6103a26103e0366004611aa1565b610977565b6103a26103f3366004611b81565b6109f0565b610276610406366004611aa1565b6001600160a01b031660009081526020819052604090205490565b6103a2610b1d565b610276610437366004611b81565b610b9c565b6103a261044a366004611b1b565b610bcc565b60055461010090046001600160a01b03166102d4565b610291610c52565b61027660095481565b6102b1610484366004611b1b565b610c61565b6103a2610497366004611ba3565b610cfa565b6102b16104aa366004611b1b565b610dae565b610276620186a081565b6102766104c7366004611aa1565b6001600160a01b03166000908152600b602052604090206001015490565b610276600a5481565b6105156104fc366004611aa1565b600b602052600090815260409020805460019091015482565b60408051928352602083019190915201610280565b6103a2610538366004611ba3565b610dbb565b6103a2610e1d565b610276610553366004611bbc565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b610276610ef1565b6103a2610594366004611ba3565b610f03565b6103a26105a7366004611aa1565b610fb2565b6060600380546105bb90611bef565b80601f01602080910402602001604051908101604052809291908181526020018280546105e790611bef565b80156106345780601f1061060957610100808354040283529160200191610634565b820191906000526020600020905b81548152906001019060200180831161061757829003601f168201915b5050505050905090565b600061064b3384846110ad565b5060015b92915050565b60006106628484846111d1565b6001600160a01b0384166000908152600160209081526040808320338452909152902054828110156106ec5760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b6106f985338584036110ad565b506001949350505050565b60004280831161071857600091505061064f565b60006107248285611c40565b905061073561044762015180611c57565b811061074557849250505061064f565b61075461044762015180611c57565b61075e8287611c57565b6107689190611c76565b95945050505050565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909161064b9185906107a8908690611c98565b6110ad565b6009548110156107cf5760405162461bcd60e51b81526004016106e390611cb0565b6107db828260006113a1565b5050565b6006546001146108015760405162461bcd60e51b81526004016106e390611cde565b60006006819055338152600b602052604090208054429061085a5760405162461bcd60e51b81526020600482015260136024820152724e6f7468696e6720746f20776974686472617760681b60448201526064016106e3565b81600101548110156108a75760405162461bcd60e51b8152602060048201526016602482015275546865206c6f636b206469646e27742065787069726560501b60448201526064016106e3565b815460006001840181905583556108ce335b336000908152600c6020526040902054611657565b336000818152600c60205260408120556007546108f7916001600160a01b0390911690836117a5565b604080518281526020810184905233917ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b568910160405180910390a25050600160065550565b6109463382611657565b50565b60095481101561096b5760405162461bcd60e51b81526004016106e390611cb0565b610946338260006113a1565b60055461010090046001600160a01b031633146109a65760405162461bcd60e51b81526004016106e390611cfe565b600880546001600160a01b0319166001600160a01b0383169081179091556040517f2541601c97bce42b47813f2be715ba4eb0a571f2aafaf35cda2054137d9a79af90600090a250565b600954821015610a125760405162461bcd60e51b81526004016106e390611cb0565b336000908152600b602052604090205415610a6f5760405162461bcd60e51b815260206004820152601960248201527f5769746864726177206f6c6420746f6b656e732066697273740000000000000060448201526064016106e3565b6007811015610ac05760405162461bcd60e51b815260206004820152601d60248201527f566f74696e67206c6f636b2063616e20626520372064617973206d696e00000060448201526064016106e3565b610447811115610b125760405162461bcd60e51b815260206004820152601e60248201527f566f74696e67206c6f636b2063616e2062652034207965617273206d6178000060448201526064016106e3565b6107db3383836113a1565b60055461010090046001600160a01b03163314610b4c5760405162461bcd60e51b81526004016106e390611cfe565b60055460405160009161010090046001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a360058054610100600160a81b0319169055565b60006104478210610bae57508161064f565b610447610bbb8385611c57565b610bc59190611c76565b9392505050565b6000610bd88333610553565b905081811015610c365760405162461bcd60e51b8152602060048201526024808201527f45524332303a206275726e20616d6f756e74206578636565647320616c6c6f77604482015263616e636560e01b60648201526084016106e3565b610c4383338484036110ad565b610c4d8383611657565b505050565b6060600480546105bb90611bef565b3360009081526001602090815260408083206001600160a01b038616845290915281205482811015610ce35760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016106e3565b610cf033858584036110ad565b5060019392505050565b60055461010090046001600160a01b03163314610d295760405162461bcd60e51b81526004016106e390611cfe565b61c350811115610d7b5760405162461bcd60e51b815260206004820152601e60248201527f7769746864726177616c2070656e616c747920697320746f6f2068696768000060448201526064016106e3565b600a81905560405181907fa7d10353d34f5fe96bad91fa358f55fbea8ad6ee0d30924022d2b58e77f476e390600090a250565b600061064b3384846111d1565b60055461010090046001600160a01b03163314610dea5760405162461bcd60e51b81526004016106e390611cfe565b600981905560405181907f9a8dc7fb9d13b0f5acaf673226d570d31ec15d8a813fceced1eb36ad11afebc590600090a250565b600654600114610e3f5760405162461bcd60e51b81526004016106e390611cde565b60006006819055338152600b6020526040902080544290610e985760405162461bcd60e51b81526020600482015260136024820152724e6f7468696e6720746f20776974686472617760681b60448201526064016106e3565b81546001830154821015610edd576000620186a0600a5483610eba9190611c57565b610ec49190611c76565b9050610ecf81611808565b610ed98183611c40565b9150505b60006001840181905583556108ce336108b9565b610f0061044762015180611c57565b81565b6007811015610f545760405162461bcd60e51b815260206004820152601d60248201527f566f74696e67206c6f636b2063616e20626520372064617973206d696e00000060448201526064016106e3565b610447811115610fa65760405162461bcd60e51b815260206004820152601e60248201527f566f74696e67206c6f636b2063616e2062652034207965617273206d6178000060448201526064016106e3565b610946336000836113a1565b60055461010090046001600160a01b03163314610fe15760405162461bcd60e51b81526004016106e390611cfe565b6001600160a01b0381166110465760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016106e3565b6005546040516001600160a01b0380841692610100900416907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600580546001600160a01b0390921661010002610100600160a81b0319909216919091179055565b6001600160a01b03831661110f5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016106e3565b6001600160a01b0382166111705760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016106e3565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b0383166112355760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016106e3565b6001600160a01b0382166112975760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016106e3565b6001600160a01b0383166000908152602081905260409020548181101561130f5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016106e3565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290611346908490611c98565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161139291815260200190565b60405180910390a35b50505050565b6006546001146113c35760405162461bcd60e51b81526004016106e390611cde565b600060068190556001600160a01b0384168152600b6020526040812080546001820154919242929082611420576113fa8787610b9c565b878655905061140c8662015180611c57565b6114169085611c98565b600186015561155b565b856114425761142f8783610704565b905061143b8784611c98565b855561155b565b86156114b65760405162461bcd60e51b815260206004820152603760248201527f43616e6e6f7420696e63726561736520616d6f756e7420616e6420657874656e60448201527f64206c6f636b20696e207468652073616d652074696d6500000000000000000060648201526084016106e3565b6114c08387610b9c565b90506114cf8662015180611c57565b6114d99083611c98565b60018601556114ed61044762015180611c57565b8486600101546114fd9190611c40565b111561155b5760405162461bcd60e51b815260206004820152602760248201527f43616e6e6f7420657874656e64206c6f636b20746f206d6f7265207468616e206044820152663420796561727360c81b60648201526084016106e3565b600081116115a05760405162461bcd60e51b81526020600482015260126024820152714e6f2062656e6566697420746f206c6f636b60701b60448201526064016106e3565b86156115be576115be336007546001600160a01b031690308a611897565b6115c888826118cf565b6001600160a01b0388166000908152600c6020526040812080548392906115f0908490611c98565b90915550508454600186015460408051928352602083019190915281018590526001600160a01b038916907f36af321ec8d3c75236829c5317affd40ddb308863a1236d2d277a4025cccee1e9060600160405180910390a250506001600655505050505050565b6001600160a01b0382166116b75760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016106e3565b6001600160a01b0382166000908152602081905260409020548181101561172b5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016106e3565b6001600160a01b038316600090815260208190526040812083830390556002805484929061175a908490611c40565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3505050565b6040516001600160a01b038316602482015260448101829052610c4d90849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526119ae565b6008546001600160a01b03161561183657600854600754610946916001600160a01b039182169116836117a5565b600754604051630852cd8d60e31b8152600481018390526001600160a01b03909116906342966c6890602401600060405180830381600087803b15801561187c57600080fd5b505af1158015611890573d6000803e3d6000fd5b5050505050565b6040516001600160a01b038085166024830152831660448201526064810182905261139b9085906323b872dd60e01b906084016117d1565b6001600160a01b0382166119255760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016106e3565b80600260008282546119379190611c98565b90915550506001600160a01b03821660009081526020819052604081208054839290611964908490611c98565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b600080836001600160a01b0316836040516119c99190611d33565b6000604051808303816000865af19150503d8060008114611a06576040519150601f19603f3d011682016040523d82523d6000602084013e611a0b565b606091505b50915091506000821415611a23573d6000803e3d6000fd5b80511580611a40575080806020019051810190611a409190611d4f565b61139b5760405162461bcd60e51b815260206004820152601660248201527514d0519157d15490cc8c17d0d0531317d1905253115160521b60448201526064016106e3565b80356001600160a01b0381168114611a9c57600080fd5b919050565b600060208284031215611ab357600080fd5b610bc582611a85565b60005b83811015611ad7578181015183820152602001611abf565b8381111561139b5750506000910152565b6020815260008251806020840152611b07816040850160208701611abc565b601f01601f19169190910160400192915050565b60008060408385031215611b2e57600080fd5b611b3783611a85565b946020939093013593505050565b600080600060608486031215611b5a57600080fd5b611b6384611a85565b9250611b7160208501611a85565b9150604084013590509250925092565b60008060408385031215611b9457600080fd5b50508035926020909101359150565b600060208284031215611bb557600080fd5b5035919050565b60008060408385031215611bcf57600080fd5b611bd883611a85565b9150611be660208401611a85565b90509250929050565b600181811c90821680611c0357607f821691505b60208210811415611c2457634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b600082821015611c5257611c52611c2a565b500390565b6000816000190483118215151615611c7157611c71611c2a565b500290565b600082611c9357634e487b7160e01b600052601260045260246000fd5b500490565b60008219821115611cab57611cab611c2a565b500190565b6020808252601490820152731b195cdcc81d1a185b881b5a5b88185b5bdd5b9d60621b604082015260600190565b6020808252600690820152651313d0d2d15160d21b604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60008251611d45818460208701611abc565b9190910192915050565b600060208284031215611d6157600080fd5b81518015158114610bc557600080fdfea2646970667358221220c7e4a3fa1552669143e4866962039b11664a0ed7c64f254530c3b2f9585ea0d664736f6c634300080c0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106102485760003560e01c806370a082311161013b578063aaf5eb68116100b8578063db2e21bc1161007c578063db2e21bc1461053d578063dd62ed3e14610545578063ee00ef3a1461057e578063eff7a61214610586578063f2fde38b1461059957600080fd5b8063aaf5eb68146104af578063adc63589146104b9578063ae6ef65f146104e5578063cbf9fe5f146104ee578063d08a12ff1461052a57600080fd5b806395d89b41116100ff57806395d89b4114610465578063a25b39b71461046d578063a457c2d714610476578063a8a4a37614610489578063a9059cbb1461049c57600080fd5b806370a08231146103f8578063715018a61461042157806373426cff1461042957806379cc67901461043c5780638da5cb5b1461044f57600080fd5b8063308097b2116101c95780633ccfd60b1161018d5780633ccfd60b146103a457806342966c68146103ac5780634957677c146103bf5780635b7d8f05146103d257806365fc3873146103e557600080fd5b8063308097b214610341578063313ce5671461035457806338b4321b14610369578063395093511461037c5780633a46273e1461038f57600080fd5b8063113f665311610210578063113f6653146102f45780631767c4331461031457806318160ddd1461031d5780632060176b1461032557806323b872dd1461032e57600080fd5b80630193512b1461024d57806306fdde0314610289578063095ea7b31461029e5780630f45cc81146102c15780630f51c09c146102ec575b600080fd5b61027661025b366004611aa1565b6001600160a01b03166000908152600b602052604090205490565b6040519081526020015b60405180910390f35b6102916105ac565b6040516102809190611ae8565b6102b16102ac366004611b1b565b61063e565b6040519015158152602001610280565b6007546102d4906001600160a01b031681565b6040516001600160a01b039091168152602001610280565b610276600781565b610276610302366004611aa1565b600c6020526000908152604090205481565b61027661044781565b600254610276565b61027661c35081565b6102b161033c366004611b45565b610655565b6008546102d4906001600160a01b031681565b60055460405160ff9091168152602001610280565b610276610377366004611b81565b610704565b6102b161038a366004611b1b565b610771565b6103a261039d366004611b1b565b6107ad565b005b6103a26107df565b6103a26103ba366004611ba3565b61093c565b6103a26103cd366004611ba3565b610949565b6103a26103e0366004611aa1565b610977565b6103a26103f3366004611b81565b6109f0565b610276610406366004611aa1565b6001600160a01b031660009081526020819052604090205490565b6103a2610b1d565b610276610437366004611b81565b610b9c565b6103a261044a366004611b1b565b610bcc565b60055461010090046001600160a01b03166102d4565b610291610c52565b61027660095481565b6102b1610484366004611b1b565b610c61565b6103a2610497366004611ba3565b610cfa565b6102b16104aa366004611b1b565b610dae565b610276620186a081565b6102766104c7366004611aa1565b6001600160a01b03166000908152600b602052604090206001015490565b610276600a5481565b6105156104fc366004611aa1565b600b602052600090815260409020805460019091015482565b60408051928352602083019190915201610280565b6103a2610538366004611ba3565b610dbb565b6103a2610e1d565b610276610553366004611bbc565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b610276610ef1565b6103a2610594366004611ba3565b610f03565b6103a26105a7366004611aa1565b610fb2565b6060600380546105bb90611bef565b80601f01602080910402602001604051908101604052809291908181526020018280546105e790611bef565b80156106345780601f1061060957610100808354040283529160200191610634565b820191906000526020600020905b81548152906001019060200180831161061757829003601f168201915b5050505050905090565b600061064b3384846110ad565b5060015b92915050565b60006106628484846111d1565b6001600160a01b0384166000908152600160209081526040808320338452909152902054828110156106ec5760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b6106f985338584036110ad565b506001949350505050565b60004280831161071857600091505061064f565b60006107248285611c40565b905061073561044762015180611c57565b811061074557849250505061064f565b61075461044762015180611c57565b61075e8287611c57565b6107689190611c76565b95945050505050565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909161064b9185906107a8908690611c98565b6110ad565b6009548110156107cf5760405162461bcd60e51b81526004016106e390611cb0565b6107db828260006113a1565b5050565b6006546001146108015760405162461bcd60e51b81526004016106e390611cde565b60006006819055338152600b602052604090208054429061085a5760405162461bcd60e51b81526020600482015260136024820152724e6f7468696e6720746f20776974686472617760681b60448201526064016106e3565b81600101548110156108a75760405162461bcd60e51b8152602060048201526016602482015275546865206c6f636b206469646e27742065787069726560501b60448201526064016106e3565b815460006001840181905583556108ce335b336000908152600c6020526040902054611657565b336000818152600c60205260408120556007546108f7916001600160a01b0390911690836117a5565b604080518281526020810184905233917ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b568910160405180910390a25050600160065550565b6109463382611657565b50565b60095481101561096b5760405162461bcd60e51b81526004016106e390611cb0565b610946338260006113a1565b60055461010090046001600160a01b031633146109a65760405162461bcd60e51b81526004016106e390611cfe565b600880546001600160a01b0319166001600160a01b0383169081179091556040517f2541601c97bce42b47813f2be715ba4eb0a571f2aafaf35cda2054137d9a79af90600090a250565b600954821015610a125760405162461bcd60e51b81526004016106e390611cb0565b336000908152600b602052604090205415610a6f5760405162461bcd60e51b815260206004820152601960248201527f5769746864726177206f6c6420746f6b656e732066697273740000000000000060448201526064016106e3565b6007811015610ac05760405162461bcd60e51b815260206004820152601d60248201527f566f74696e67206c6f636b2063616e20626520372064617973206d696e00000060448201526064016106e3565b610447811115610b125760405162461bcd60e51b815260206004820152601e60248201527f566f74696e67206c6f636b2063616e2062652034207965617273206d6178000060448201526064016106e3565b6107db3383836113a1565b60055461010090046001600160a01b03163314610b4c5760405162461bcd60e51b81526004016106e390611cfe565b60055460405160009161010090046001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a360058054610100600160a81b0319169055565b60006104478210610bae57508161064f565b610447610bbb8385611c57565b610bc59190611c76565b9392505050565b6000610bd88333610553565b905081811015610c365760405162461bcd60e51b8152602060048201526024808201527f45524332303a206275726e20616d6f756e74206578636565647320616c6c6f77604482015263616e636560e01b60648201526084016106e3565b610c4383338484036110ad565b610c4d8383611657565b505050565b6060600480546105bb90611bef565b3360009081526001602090815260408083206001600160a01b038616845290915281205482811015610ce35760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016106e3565b610cf033858584036110ad565b5060019392505050565b60055461010090046001600160a01b03163314610d295760405162461bcd60e51b81526004016106e390611cfe565b61c350811115610d7b5760405162461bcd60e51b815260206004820152601e60248201527f7769746864726177616c2070656e616c747920697320746f6f2068696768000060448201526064016106e3565b600a81905560405181907fa7d10353d34f5fe96bad91fa358f55fbea8ad6ee0d30924022d2b58e77f476e390600090a250565b600061064b3384846111d1565b60055461010090046001600160a01b03163314610dea5760405162461bcd60e51b81526004016106e390611cfe565b600981905560405181907f9a8dc7fb9d13b0f5acaf673226d570d31ec15d8a813fceced1eb36ad11afebc590600090a250565b600654600114610e3f5760405162461bcd60e51b81526004016106e390611cde565b60006006819055338152600b6020526040902080544290610e985760405162461bcd60e51b81526020600482015260136024820152724e6f7468696e6720746f20776974686472617760681b60448201526064016106e3565b81546001830154821015610edd576000620186a0600a5483610eba9190611c57565b610ec49190611c76565b9050610ecf81611808565b610ed98183611c40565b9150505b60006001840181905583556108ce336108b9565b610f0061044762015180611c57565b81565b6007811015610f545760405162461bcd60e51b815260206004820152601d60248201527f566f74696e67206c6f636b2063616e20626520372064617973206d696e00000060448201526064016106e3565b610447811115610fa65760405162461bcd60e51b815260206004820152601e60248201527f566f74696e67206c6f636b2063616e2062652034207965617273206d6178000060448201526064016106e3565b610946336000836113a1565b60055461010090046001600160a01b03163314610fe15760405162461bcd60e51b81526004016106e390611cfe565b6001600160a01b0381166110465760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016106e3565b6005546040516001600160a01b0380841692610100900416907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600580546001600160a01b0390921661010002610100600160a81b0319909216919091179055565b6001600160a01b03831661110f5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016106e3565b6001600160a01b0382166111705760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016106e3565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b0383166112355760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016106e3565b6001600160a01b0382166112975760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016106e3565b6001600160a01b0383166000908152602081905260409020548181101561130f5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016106e3565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290611346908490611c98565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161139291815260200190565b60405180910390a35b50505050565b6006546001146113c35760405162461bcd60e51b81526004016106e390611cde565b600060068190556001600160a01b0384168152600b6020526040812080546001820154919242929082611420576113fa8787610b9c565b878655905061140c8662015180611c57565b6114169085611c98565b600186015561155b565b856114425761142f8783610704565b905061143b8784611c98565b855561155b565b86156114b65760405162461bcd60e51b815260206004820152603760248201527f43616e6e6f7420696e63726561736520616d6f756e7420616e6420657874656e60448201527f64206c6f636b20696e207468652073616d652074696d6500000000000000000060648201526084016106e3565b6114c08387610b9c565b90506114cf8662015180611c57565b6114d99083611c98565b60018601556114ed61044762015180611c57565b8486600101546114fd9190611c40565b111561155b5760405162461bcd60e51b815260206004820152602760248201527f43616e6e6f7420657874656e64206c6f636b20746f206d6f7265207468616e206044820152663420796561727360c81b60648201526084016106e3565b600081116115a05760405162461bcd60e51b81526020600482015260126024820152714e6f2062656e6566697420746f206c6f636b60701b60448201526064016106e3565b86156115be576115be336007546001600160a01b031690308a611897565b6115c888826118cf565b6001600160a01b0388166000908152600c6020526040812080548392906115f0908490611c98565b90915550508454600186015460408051928352602083019190915281018590526001600160a01b038916907f36af321ec8d3c75236829c5317affd40ddb308863a1236d2d277a4025cccee1e9060600160405180910390a250506001600655505050505050565b6001600160a01b0382166116b75760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016106e3565b6001600160a01b0382166000908152602081905260409020548181101561172b5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016106e3565b6001600160a01b038316600090815260208190526040812083830390556002805484929061175a908490611c40565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3505050565b6040516001600160a01b038316602482015260448101829052610c4d90849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526119ae565b6008546001600160a01b03161561183657600854600754610946916001600160a01b039182169116836117a5565b600754604051630852cd8d60e31b8152600481018390526001600160a01b03909116906342966c6890602401600060405180830381600087803b15801561187c57600080fd5b505af1158015611890573d6000803e3d6000fd5b5050505050565b6040516001600160a01b038085166024830152831660448201526064810182905261139b9085906323b872dd60e01b906084016117d1565b6001600160a01b0382166119255760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016106e3565b80600260008282546119379190611c98565b90915550506001600160a01b03821660009081526020819052604081208054839290611964908490611c98565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b600080836001600160a01b0316836040516119c99190611d33565b6000604051808303816000865af19150503d8060008114611a06576040519150601f19603f3d011682016040523d82523d6000602084013e611a0b565b606091505b50915091506000821415611a23573d6000803e3d6000fd5b80511580611a40575080806020019051810190611a409190611d4f565b61139b5760405162461bcd60e51b815260206004820152601660248201527514d0519157d15490cc8c17d0d0531317d1905253115160521b60448201526064016106e3565b80356001600160a01b0381168114611a9c57600080fd5b919050565b600060208284031215611ab357600080fd5b610bc582611a85565b60005b83811015611ad7578181015183820152602001611abf565b8381111561139b5750506000910152565b6020815260008251806020840152611b07816040850160208701611abc565b601f01601f19169190910160400192915050565b60008060408385031215611b2e57600080fd5b611b3783611a85565b946020939093013593505050565b600080600060608486031215611b5a57600080fd5b611b6384611a85565b9250611b7160208501611a85565b9150604084013590509250925092565b60008060408385031215611b9457600080fd5b50508035926020909101359150565b600060208284031215611bb557600080fd5b5035919050565b60008060408385031215611bcf57600080fd5b611bd883611a85565b9150611be660208401611a85565b90509250929050565b600181811c90821680611c0357607f821691505b60208210811415611c2457634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b600082821015611c5257611c52611c2a565b500390565b6000816000190483118215151615611c7157611c71611c2a565b500290565b600082611c9357634e487b7160e01b600052601260045260246000fd5b500490565b60008219821115611cab57611cab611c2a565b500190565b6020808252601490820152731b195cdcc81d1a185b881b5a5b88185b5bdd5b9d60621b604082015260600190565b6020808252600690820152651313d0d2d15160d21b604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60008251611d45818460208701611abc565b9190910192915050565b600060208284031215611d6157600080fd5b81518015158114610bc557600080fdfea2646970667358221220c7e4a3fa1552669143e4866962039b11664a0ed7c64f254530c3b2f9585ea0d664736f6c634300080c0033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "burn(uint256)": {
        "details": "Destroys `amount` tokens from the caller. See {ERC20-_burn}."
      },
      "burnFrom(address,uint256)": {
        "details": "Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 6353,
        "contract": "contracts/RedRequiem.sol:RedRequiem",
        "label": "_balances",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 6359,
        "contract": "contracts/RedRequiem.sol:RedRequiem",
        "label": "_allowances",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
      },
      {
        "astId": 6361,
        "contract": "contracts/RedRequiem.sol:RedRequiem",
        "label": "_totalSupply",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 6363,
        "contract": "contracts/RedRequiem.sol:RedRequiem",
        "label": "_name",
        "offset": 0,
        "slot": "3",
        "type": "t_string_storage"
      },
      {
        "astId": 6365,
        "contract": "contracts/RedRequiem.sol:RedRequiem",
        "label": "_symbol",
        "offset": 0,
        "slot": "4",
        "type": "t_string_storage"
      },
      {
        "astId": 6367,
        "contract": "contracts/RedRequiem.sol:RedRequiem",
        "label": "_decimals",
        "offset": 0,
        "slot": "5",
        "type": "t_uint8"
      },
      {
        "astId": 7303,
        "contract": "contracts/RedRequiem.sol:RedRequiem",
        "label": "_owner",
        "offset": 1,
        "slot": "5",
        "type": "t_address"
      },
      {
        "astId": 181,
        "contract": "contracts/RedRequiem.sol:RedRequiem",
        "label": "_unlocked",
        "offset": 0,
        "slot": "6",
        "type": "t_uint256"
      },
      {
        "astId": 202,
        "contract": "contracts/RedRequiem.sol:RedRequiem",
        "label": "lockedToken",
        "offset": 0,
        "slot": "7",
        "type": "t_address"
      },
      {
        "astId": 204,
        "contract": "contracts/RedRequiem.sol:RedRequiem",
        "label": "penaltyCollector",
        "offset": 0,
        "slot": "8",
        "type": "t_address"
      },
      {
        "astId": 206,
        "contract": "contracts/RedRequiem.sol:RedRequiem",
        "label": "minLockedAmount",
        "offset": 0,
        "slot": "9",
        "type": "t_uint256"
      },
      {
        "astId": 208,
        "contract": "contracts/RedRequiem.sol:RedRequiem",
        "label": "earlyWithdrawPenaltyRate",
        "offset": 0,
        "slot": "10",
        "type": "t_uint256"
      },
      {
        "astId": 218,
        "contract": "contracts/RedRequiem.sol:RedRequiem",
        "label": "locked",
        "offset": 0,
        "slot": "11",
        "type": "t_mapping(t_address,t_struct(LockedBalance)213_storage)"
      },
      {
        "astId": 222,
        "contract": "contracts/RedRequiem.sol:RedRequiem",
        "label": "mintedForLock",
        "offset": 0,
        "slot": "12",
        "type": "t_mapping(t_address,t_uint256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_uint256)"
      },
      "t_mapping(t_address,t_struct(LockedBalance)213_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct RedRequiem.LockedBalance)",
        "numberOfBytes": "32",
        "value": "t_struct(LockedBalance)213_storage"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(LockedBalance)213_storage": {
        "encoding": "inplace",
        "label": "struct RedRequiem.LockedBalance",
        "members": [
          {
            "astId": 210,
            "contract": "contracts/RedRequiem.sol:RedRequiem",
            "label": "amount",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 212,
            "contract": "contracts/RedRequiem.sol:RedRequiem",
            "label": "end",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  }
}