/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { FRAX, FRAXInterface } from "../FRAX";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "chainId_",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "src",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "guy",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: true,
    inputs: [
      {
        indexed: true,
        internalType: "bytes4",
        name: "sig",
        type: "bytes4",
      },
      {
        indexed: true,
        internalType: "address",
        name: "usr",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "arg1",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "arg2",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "LogNote",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "src",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "dst",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PERMIT_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "usr",
        type: "address",
      },
    ],
    name: "addAuth",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_limit",
        type: "uint256",
      },
    ],
    name: "adjustDailyFraxLimit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account_",
        type: "address",
      },
      {
        internalType: "address",
        name: "sender_",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "usr_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "wad_",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "usr",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "dailyFraxLimit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "guy",
        type: "address",
      },
    ],
    name: "deny",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "fraxMintedToday",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "lastMintRestart",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "usr",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "src",
        type: "address",
      },
      {
        internalType: "address",
        name: "dst",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "move",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "holder",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "expiry",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "allowed",
        type: "bool",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "usr",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "pull",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "usr",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "push",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "guy",
        type: "address",
      },
    ],
    name: "rely",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "dst",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "src",
        type: "address",
      },
      {
        internalType: "address",
        name: "dst",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "wards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161123a38038061123a83398101604081905261002f91610127565b336000908152602081815260409182902060019081905582518084018452600a815269232920ac102a27a5a2a760b11b9083015282518084018452908152603160f81b9082015281517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f818301527f0b5e63856806857c7af67a3841d8148fce118228c7167c9e8705ab68578b5d9f818401527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6606082015260808101939093523060a0808501919091528251808503909101815260c0909301909152815191012060085569021e19e0c9bab2400000600255610140565b60006020828403121561013957600080fd5b5051919050565b6110eb8061014f6000396000f3fe608060405234801561001057600080fd5b50600436106101a95760003560e01c80637ecebe00116100f9578063b753a98c11610097578063d3fd35ec11610071578063d3fd35ec14610401578063d7f1bf1214610414578063dd62ed3e1461041d578063f2d5d56b1461043057600080fd5b8063b753a98c146103bb578063bb35783b146103ce578063bf353dbb146103e157600080fd5b80639c52a7f1116100d35780639c52a7f1146103625780639dc29fac146103755780639e16de3414610388578063a9059cbb146103a857600080fd5b80637ecebe001461030c5780638fcbaf0c1461032c57806395d89b411461033f57600080fd5b80633644e5151161016657806354fd4d501161014057806354fd4d50146102ac57806365fae35e1461029957806370a08231146102cc578063798247ae146102ec57600080fd5b80633644e5151461027b57806340c10f19146102845780635422224e1461029957600080fd5b806306fdde03146101ae578063095ea7b3146101ed57806318160ddd1461021057806323b872dd1461022757806330adf81f1461023a578063313ce56714610261575b600080fd5b6101d76040518060400160405280600a815260200169232920ac102a27a5a2a760b11b81525081565b6040516101e49190610e60565b60405180910390f35b6102006101fb366004610ed1565b610443565b60405190151581526020016101e4565b61021960015481565b6040519081526020016101e4565b610200610235366004610efb565b610458565b6102197fea2aa0a1be11a07ed86d755c93467f4f82362b452371d1ba94d1715123511acb81565b610269601281565b60405160ff90911681526020016101e4565b61021960085481565b610297610292366004610ed1565b610633565b005b6102976102a7366004610f37565b6107e5565b6101d7604051806040016040528060018152602001603160f81b81525081565b6102196102da366004610f37565b60036020526000908152604090205481565b6102196102fa366004610f37565b60066020526000908152604090205481565b61021961031a366004610f37565b60056020526000908152604090205481565b61029761033a366004610f52565b610831565b6101d76040518060400160405280600481526020016308ca482b60e31b81525081565b610297610370366004610f37565b610b29565b610297610383366004610ed1565b610b72565b610219610396366004610f37565b60076020526000908152604090205481565b6102006103b6366004610ed1565b610d1a565b6102976103c9366004610ed1565b610d27565b6102976103dc366004610efb565b610d37565b6102196103ef366004610f37565b60006020819052908152604090205481565b61029761040f366004610fdc565b610d48565b61021960025481565b61021961042b366004610ff5565b610d7c565b61029761043e366004610ed1565b610d88565b600061044f8383610d93565b90505b92915050565b6001600160a01b0383166000908152600360205260408120548211156104c15760405162461bcd60e51b8152602060048201526019602482015278467261782f696e73756666696369656e742d62616c616e636560381b60448201526064015b60405180910390fd5b6001600160a01b03841633148015906104e557506000196104e28533610dff565b14155b1561057b57816104f58533610dff565b10156105435760405162461bcd60e51b815260206004820152601b60248201527f467261782f696e73756666696369656e742d616c6c6f77616e6365000000000060448201526064016104b8565b6105566105508533610dff565b83610e2a565b6001600160a01b03851660009081526004602090815260408083203384529091529020555b6001600160a01b03841660009081526003602052604090205461059e9083610e2a565b6001600160a01b0380861660009081526003602052604080822093909355908516815220546105cd9083610e45565b6001600160a01b0380851660008181526003602052604090819020939093559151908616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906106219086815260200190565b60405180910390a35060019392505050565b336000908152602081905260409020546107535760025433600090815260076020526040902054610665908390610e45565b11158061069c5750336000908152600660205260409020546119649061068c904390610e2a565b1015801561069c57506002548111155b6106e05760405162461bcd60e51b815260206004820152601560248201527413dd995c8819185a5b1e48119c985e08131a5b5a5d605a1b60448201526064016104b8565b33600090815260066020526040902054611964906106ff904390610e2a565b106107285733600090815260076020908152604080832084905560069091529020439055610753565b336000908152600760205260409020546107429082610e45565b336000908152600760205260409020555b6001600160a01b0382166000908152600360205260409020546107769082610e45565b6001600160a01b03831660009081526003602052604090205560015461079c9082610e45565b6001556040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906020015b60405180910390a35050565b336000908152602081905260409020546001146108145760405162461bcd60e51b81526004016104b890611028565b6001600160a01b0316600090815260208190526040902060019055565b600854604080517fea2aa0a1be11a07ed86d755c93467f4f82362b452371d1ba94d1715123511acb60208201526001600160a01b03808c169282019290925290891660608201526080810188905260a0810187905285151560c08201526000919060e001604051602081830303815290604052805190602001206040516020016108d292919061190160f01b81526002810192909252602282015260420190565b60408051601f19818403018152919052805160209091012090506001600160a01b03891661093b5760405162461bcd60e51b81526020600482015260166024820152750467261782f696e76616c69642d616464726573732d360541b60448201526064016104b8565b60408051600081526020810180835283905260ff861691810191909152606081018490526080810183905260019060a0016020604051602081039080840390855afa15801561098e573d6000803e3d6000fd5b505050602060405103516001600160a01b0316896001600160a01b0316146109ee5760405162461bcd60e51b8152602060048201526013602482015272119c985e0bda5b9d985b1a590b5c195c9b5a5d606a1b60448201526064016104b8565b8515806109fb5750854211155b610a3d5760405162461bcd60e51b8152602060048201526013602482015272119c985e0bdc195c9b5a5d0b595e1c1a5c9959606a1b60448201526064016104b8565b6001600160a01b0389166000908152600560205260408120805491610a618361106b565b919050558714610aa85760405162461bcd60e51b8152602060048201526012602482015271467261782f696e76616c69642d6e6f6e636560701b60448201526064016104b8565b600085610ab6576000610aba565b6000195b6001600160a01b038b81166000818152600460209081526040808320948f16808452948252918290208590559051848152939450919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a350505050505050505050565b33600090815260208190526040902054600114610b585760405162461bcd60e51b81526004016104b890611028565b6001600160a01b0316600090815260208190526040812055565b6001600160a01b038216600090815260036020526040902054811115610bd65760405162461bcd60e51b8152602060048201526019602482015278467261782f696e73756666696369656e742d62616c616e636560381b60448201526064016104b8565b6001600160a01b0382163314801590610bfa5750600019610bf78333610dff565b14155b15610c905780610c0a8333610dff565b1015610c585760405162461bcd60e51b815260206004820152601b60248201527f467261782f696e73756666696369656e742d616c6c6f77616e6365000000000060448201526064016104b8565b610c6b610c658333610dff565b82610e2a565b6001600160a01b03831660009081526004602090815260408083203384529091529020555b6001600160a01b038216600090815260036020526040902054610cb39082610e2a565b6001600160a01b038316600090815260036020526040902055600154610cd99082610e2a565b6001556040518181526000906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906020016107d9565b600061044f338484610458565b610d32338383610458565b505050565b610d42838383610458565b50505050565b33600090815260208190526040902054600114610d775760405162461bcd60e51b81526004016104b890611028565b600255565b600061044f8383610dff565b610d32823383610458565b3360008181526004602090815260408083206001600160a01b038716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92590610dee9086815260200190565b60405180910390a350600192915050565b6001600160a01b03918216600090815260046020908152604080832093909416825291909152205490565b600082610e378382611086565b915081111561045257600080fd5b600082610e52838261109d565b915081101561045257600080fd5b600060208083528351808285015260005b81811015610e8d57858101830151858201604001528201610e71565b81811115610e9f576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b0381168114610ecc57600080fd5b919050565b60008060408385031215610ee457600080fd5b610eed83610eb5565b946020939093013593505050565b600080600060608486031215610f1057600080fd5b610f1984610eb5565b9250610f2760208501610eb5565b9150604084013590509250925092565b600060208284031215610f4957600080fd5b61044f82610eb5565b600080600080600080600080610100898b031215610f6f57600080fd5b610f7889610eb5565b9750610f8660208a01610eb5565b9650604089013595506060890135945060808901358015158114610fa957600080fd5b935060a089013560ff81168114610fbf57600080fd5b979a969950949793969295929450505060c08201359160e0013590565b600060208284031215610fee57600080fd5b5035919050565b6000806040838503121561100857600080fd5b61101183610eb5565b915061101f60208401610eb5565b90509250929050565b602080825260139082015272119c985e0bdb9bdd0b585d5d1a1bdc9a5e9959606a1b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b600060001982141561107f5761107f611055565b5060010190565b60008282101561109857611098611055565b500390565b600082198211156110b0576110b0611055565b50019056fea26469706673582212203055e617818952117023d29ddc218117f15e34001ddbecc10da6994b61186b5e64736f6c634300080b0033";

export class FRAX__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    chainId_: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<FRAX> {
    return super.deploy(chainId_, overrides || {}) as Promise<FRAX>;
  }
  getDeployTransaction(
    chainId_: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(chainId_, overrides || {});
  }
  attach(address: string): FRAX {
    return super.attach(address) as FRAX;
  }
  connect(signer: Signer): FRAX__factory {
    return super.connect(signer) as FRAX__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FRAXInterface {
    return new utils.Interface(_abi) as FRAXInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): FRAX {
    return new Contract(address, _abi, signerOrProvider) as FRAX;
  }
}
