/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type { IManageable, IManageableInterface } from "../IManageable";

const _abi = [
  {
    inputs: [],
    name: "policy",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pullManagement",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner_",
        type: "address",
      },
    ],
    name: "pushManagement",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceManagement",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class IManageable__factory {
  static readonly abi = _abi;
  static createInterface(): IManageableInterface {
    return new utils.Interface(_abi) as IManageableInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IManageable {
    return new Contract(address, _abi, signerOrProvider) as IManageable;
  }
}
