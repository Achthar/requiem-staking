/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { WREQT, WREQTInterface } from "../WREQT";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_staking",
        type: "address",
      },
      {
        internalType: "address",
        name: "_REQT",
        type: "address",
      },
      {
        internalType: "address",
        name: "_sREQT",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "REQT",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "sREQT",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "sREQTValue",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "staking",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "unwrapToREQT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "unwrapTosREQT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "wREQTValue",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "wrapFromREQT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "wrapFromsREQT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60e06040523480156200001157600080fd5b5060405162001845380380620018458339810160408190526200003491620001d8565b604080518082018252600d81526c15dc985c1c1959081cd4915455609a1b6020808301918252835180850190945260068452651ddcd491545560d21b9084015281519192916012916200008b916003919062000115565b508151620000a190600490602085019062000115565b506005805460ff191660ff9290921691909117905550506001600160a01b038316620000cc57600080fd5b6001600160a01b038084166080528216620000e657600080fd5b6001600160a01b0380831660a05281166200010057600080fd5b6001600160a01b031660c052506200025f9050565b828054620001239062000222565b90600052602060002090601f01602090048101928262000147576000855562000192565b82601f106200016257805160ff191683800117855562000192565b8280016001018555821562000192579182015b828111156200019257825182559160200191906001019062000175565b50620001a0929150620001a4565b5090565b5b80821115620001a05760008155600101620001a5565b80516001600160a01b0381168114620001d357600080fd5b919050565b600080600060608486031215620001ee57600080fd5b620001f984620001bb565b92506200020960208501620001bb565b91506200021960408501620001bb565b90509250925092565b600181811c908216806200023757607f821691505b602082108114156200025957634e487b7160e01b600052602260045260246000fd5b50919050565b60805160a05160c051611562620002e360003960008181610328015281816105a0015281816107600152610ad2015260008181610136015281816106be0152818161091f01526109db0152600081816101ff015281816104b30152818161056e0152818161062c015281816107f5015281816109ac0152610a6501526115626000f3fe608060405234801561001057600080fd5b506004361061012c5760003560e01c806370a08231116100ad578063a9059cbb11610071578063a9059cbb146102b1578063b0370e34146102c4578063dd62ed3e146102d7578063eebf78fc14610310578063fafbbc671461032357600080fd5b806370a0823114610247578063783389b01461027057806385fb54a21461028357806395d89b4114610296578063a457c2d71461029e57600080fd5b8063313ce567116100f4578063313ce567146101d257806339509351146101e75780634cf088d9146101fa5780635960257e146102215780635ad421b11461023457600080fd5b806302bb41e51461013157806306fdde0314610175578063095ea7b31461018a57806318160ddd146101ad57806323b872dd146101bf575b600080fd5b6101587f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b61017d61034a565b60405161016c919061116a565b61019d6101983660046111db565b6103dc565b604051901515815260200161016c565b6002545b60405190815260200161016c565b61019d6101cd366004611205565b6103f3565b60055460405160ff909116815260200161016c565b61019d6101f53660046111db565b61045c565b6101587f000000000000000000000000000000000000000000000000000000000000000081565b6101b161022f366004611241565b610492565b6101b1610242366004611241565b610540565b6101b161025536600461125a565b6001600160a01b031660009081526020819052604090205490565b6101b161027e366004611241565b61073b565b6101b1610291366004611241565b6107ee565b61017d61088f565b61019d6102ac3660046111db565b61089e565b61019d6102bf3660046111db565b6108ed565b6101b16102d2366004611241565b6108fa565b6101b16102e5366004611275565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6101b161031e366004611241565b610a9c565b6101587f000000000000000000000000000000000000000000000000000000000000000081565b606060038054610359906112a8565b80601f0160208091040260200160405190810160405280929190818152602001828054610385906112a8565b80156103d25780601f106103a7576101008083540402835291602001916103d2565b820191906000526020600020905b8154815290600101906020018083116103b557829003601f168201915b5050505050905090565b60006103e9338484610b09565b5060015b92915050565b6000610400848484610c33565b610452843361044d856040518060600160405280602881526020016114e0602891396001600160a01b038a1660009081526001602090815260408083203384529091529020549190610db6565b610b09565b5060019392505050565b3360008181526001602090815260408083206001600160a01b038716845290915281205490916103e991859061044d9086610df0565b60006103ed6104a360055460ff1690565b6104ae90600a6113dd565b61053a7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316632986c0e56040518163ffffffff1660e01b8152600401602060405180830381865afa15801561050f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061053391906113ec565b8590610e56565b90610ed5565b600061054c3383610f17565b600061055783610492565b60405163095ea7b360e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152602482018390529192507f00000000000000000000000000000000000000000000000000000000000000009091169063095ea7b3906044016020604051808303816000875af11580156105eb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061060f9190611405565b506040516341c0f0c160e11b8152600481018290523060248201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690638381e182906044016020604051808303816000875af115801561067d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106a19190611405565b5060405163a9059cbb60e01b8152336004820152602481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063a9059cbb906044015b6020604051808303816000875af1158015610710573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107349190611405565b5092915050565b6040516323b872dd60e01b8152336004820152306024820152604481018290526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906323b872dd906064015b6020604051808303816000875af11580156107b2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107d69190611405565b5060006107e2836107ee565b90506103ed3382611023565b60006103ed7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316632986c0e56040518163ffffffff1660e01b8152600401602060405180830381865afa158015610851573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061087591906113ec565b61053a61088460055460ff1690565b61053390600a6113dd565b606060048054610359906112a8565b60006103e9338461044d85604051806060016040528060258152602001611508602591393360009081526001602090815260408083206001600160a01b038d1684529091529020549190610db6565b60006103e9338484610c33565b6040516323b872dd60e01b8152336004820152306024820152604481018290526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906323b872dd906064016020604051808303816000875af1158015610970573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109949190611405565b5060405163095ea7b360e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152602482018490527f0000000000000000000000000000000000000000000000000000000000000000169063095ea7b3906044016020604051808303816000875af1158015610a24573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a489190611405565b50604051637acb775760e01b8152600481018390523060248201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690637acb775790604401610793565b6000610aa83383610f17565b6000610ab383610492565b60405163a9059cbb60e01b8152336004820152602481018290529091507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063a9059cbb906044016106f1565b6001600160a01b038316610b705760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084015b60405180910390fd5b6001600160a01b038216610bd15760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610b67565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b038316610c975760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610b67565b6001600160a01b038216610cf95760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610b67565b610d36816040518060600160405280602681526020016114ba602691396001600160a01b0386166000908152602081905260409020549190610db6565b6001600160a01b038085166000908152602081905260408082209390935590841681522054610d659082610df0565b6001600160a01b038381166000818152602081815260409182902094909455518481529092918616917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9101610c26565b60008184841115610dda5760405162461bcd60e51b8152600401610b67919061116a565b506000610de78486611427565b95945050505050565b600080610dfd838561143e565b905083811015610e4f5760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f7700000000006044820152606401610b67565b9392505050565b600082610e65575060006103ed565b6000610e718385611456565b905082610e7e8583611475565b14610e4f5760405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6044820152607760f81b6064820152608401610b67565b6000610e4f83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f0000000000008152506110fa565b6001600160a01b038216610f775760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610b67565b610fb481604051806060016040528060228152602001611498602291396001600160a01b0385166000908152602081905260409020549190610db6565b6001600160a01b038316600090815260208190526040902055600254610fda9082611128565b6002556040518181526000906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906020015b60405180910390a35050565b6001600160a01b0382166110795760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610b67565b6002546110869082610df0565b6002556001600160a01b0382166000908152602081905260409020546110ac9082610df0565b6001600160a01b038316600081815260208181526040918290209390935551838152909130917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9101611017565b6000818361111b5760405162461bcd60e51b8152600401610b67919061116a565b506000610de78486611475565b6000610e4f83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610db6565b600060208083528351808285015260005b818110156111975785810183015185820160400152820161117b565b818111156111a9576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b03811681146111d657600080fd5b919050565b600080604083850312156111ee57600080fd5b6111f7836111bf565b946020939093013593505050565b60008060006060848603121561121a57600080fd5b611223846111bf565b9250611231602085016111bf565b9150604084013590509250925092565b60006020828403121561125357600080fd5b5035919050565b60006020828403121561126c57600080fd5b610e4f826111bf565b6000806040838503121561128857600080fd5b611291836111bf565b915061129f602084016111bf565b90509250929050565b600181811c908216806112bc57607f821691505b602082108114156112dd57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b600181815b8085111561133457816000190482111561131a5761131a6112e3565b8085161561132757918102915b93841c93908002906112fe565b509250929050565b60008261134b575060016103ed565b81611358575060006103ed565b816001811461136e576002811461137857611394565b60019150506103ed565b60ff841115611389576113896112e3565b50506001821b6103ed565b5060208310610133831016604e8410600b84101617156113b7575081810a6103ed565b6113c183836112f9565b80600019048211156113d5576113d56112e3565b029392505050565b6000610e4f60ff84168361133c565b6000602082840312156113fe57600080fd5b5051919050565b60006020828403121561141757600080fd5b81518015158114610e4f57600080fd5b600082821015611439576114396112e3565b500390565b60008219821115611451576114516112e3565b500190565b6000816000190483118215151615611470576114706112e3565b500290565b60008261149257634e487b7160e01b600052601260045260246000fd5b50049056fe45524332303a206275726e20616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa26469706673582212209156259a044cb44a82bbcfa5fe670aa23306cbcad9b68daf304ccf684ee4c5bb64736f6c634300080a0033";

export class WREQT__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _staking: string,
    _REQT: string,
    _sREQT: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<WREQT> {
    return super.deploy(
      _staking,
      _REQT,
      _sREQT,
      overrides || {}
    ) as Promise<WREQT>;
  }
  getDeployTransaction(
    _staking: string,
    _REQT: string,
    _sREQT: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_staking, _REQT, _sREQT, overrides || {});
  }
  attach(address: string): WREQT {
    return super.attach(address) as WREQT;
  }
  connect(signer: Signer): WREQT__factory {
    return super.connect(signer) as WREQT__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WREQTInterface {
    return new utils.Interface(_abi) as WREQTInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): WREQT {
    return new Contract(address, _abi, signerOrProvider) as WREQT;
  }
}
