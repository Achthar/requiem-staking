/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  RequiemFormula,
  RequiemFormulaInterface,
} from "../RequiemFormula";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "reserve0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserve1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "balance0Adjusted",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "balance1Adjusted",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "tokenWeight0",
        type: "uint32",
      },
    ],
    name: "ensureConstantValue",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveOut",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "tokenWeightIn",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "tokenWeightOut",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "swapFee",
        type: "uint32",
      },
    ],
    name: "getAmountIn",
    outputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveOut",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "tokenWeightIn",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "tokenWeightOut",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "swapFee",
        type: "uint32",
      },
    ],
    name: "getAmountOut",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "path",
        type: "address[]",
      },
    ],
    name: "getAmountsIn",
    outputs: [
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "path",
        type: "address[]",
      },
    ],
    name: "getAmountsOut",
    outputs: [
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "factory",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "path",
        type: "address[]",
      },
    ],
    name: "getFactoryAmountsIn",
    outputs: [
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "factory",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "path",
        type: "address[]",
      },
    ],
    name: "getFactoryAmountsOut",
    outputs: [
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "factory",
        type: "address",
      },
      {
        internalType: "address",
        name: "pair",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
    ],
    name: "getFactoryReserveAndWeights",
    outputs: [
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "reserveA",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveB",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "tokenWeightA",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "tokenWeightB",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "swapFee",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "factory",
        type: "address",
      },
      {
        internalType: "address",
        name: "pair",
        type: "address",
      },
    ],
    name: "getFactoryWeightsAndSwapFee",
    outputs: [
      {
        internalType: "uint32",
        name: "tokenWeight0",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "tokenWeight1",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "swapFee",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pair",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
    ],
    name: "getOtherToken",
    outputs: [
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pair",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    name: "getPairAmountIn",
    outputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pair",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
    ],
    name: "getPairAmountOut",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pair",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
    ],
    name: "getReserveAndWeights",
    outputs: [
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "reserveA",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveB",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "tokenWeightA",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "tokenWeightB",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "swapFee",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pair",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
    ],
    name: "getReserves",
    outputs: [
      {
        internalType: "uint256",
        name: "reserveA",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveB",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pair",
        type: "address",
      },
    ],
    name: "getWeightsAndSwapFee",
    outputs: [
      {
        internalType: "uint32",
        name: "tokenWeight0",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "tokenWeight1",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "swapFee",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "totalLiquidity",
        type: "uint256",
      },
      {
        internalType: "uint112",
        name: "reserve0",
        type: "uint112",
      },
      {
        internalType: "uint112",
        name: "reserve1",
        type: "uint112",
      },
      {
        internalType: "uint32",
        name: "tokenWeight0",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "tokenWeight1",
        type: "uint32",
      },
      {
        internalType: "uint112",
        name: "collectedFee0",
        type: "uint112",
      },
      {
        internalType: "uint112",
        name: "collectedFee1",
        type: "uint112",
      },
    ],
    name: "mintLiquidityFee",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountA",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveA",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveB",
        type: "uint256",
      },
    ],
    name: "quote",
    outputs: [
      {
        internalType: "uint256",
        name: "amountB",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
    ],
    name: "sortTokens",
    outputs: [
      {
        internalType: "address",
        name: "token0",
        type: "address",
      },
      {
        internalType: "address",
        name: "token1",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061073f6001641c35fedd1560601b036020556001646c3390ecc9605e1b036021556001640cf801476160611b0360225560016431bdb23e1d605f1b0360235560016502fb1d8fe083605b1b0360245560016505b771955b37605a1b036025556001650af67a93bb5160591b0360265560016515060c256cb360581b036027556001651428a2f98d7360581b036028556001654d515663970960561b03602955600165944620b0e70f60551b03602a55600166011c592761c66760541b03602b5560016602214d10d014eb60531b03602c55600166020ade36b7dbef60531b03602d5560016603eab73b3bbfe360521b03602e556001660782ee3593f6d760511b03602f556001661ccf4b44bb4821604f1b0360305560016606e7f88ad8a77760511b0360315560016669f3d1c921891d604d1b03603255600166cb2ff529eb71e5604c1b03603355600166c2d415c3db974b604c1b0360345560016702eb40f9f620fda7604a1b0360355560016705990681d961a1eb60491b03603655600167055e12902701414760491b0360375560016714962dee9dc9764160471b0360385560016704ef57b9b560fab560491b0360395560016712ed7b32a58f552b60471b03603a556001679131271922eaa60760441b03603b556001678b380f3558668c4760441b03603c556001680215f77c045fbe885760421b03603d556001600160831b03603e556001670f577eded5773a1160471b03603f556001680eb5ec597592befbf5603f1b036040556001681c35fedd14b861eb05603e1b036041556001683619c87664579bc94b603d1b0360425560016867c00a3b07ffc01fd7603c1b03604355600168c6f6c8f8739773a7a5603b1b03604455600168bec763f8209b7a72b1603b1b0360455560016902dbb8caad9b7097b91b60391b03604655600169057b3d49dda84556d6f760381b03604755600169054183095b2c8ececf3160381b036048556001690a14517cc6b9457111ef60371b0360495560016913545598e5c23276ccf160361b03604a556001692511882c39c3adea96ff60351b03604b55600169471649d87199aa99075760341b03604c557004429a21a029d4c1457cfbffffffffffff604d55700415bc6d6fb7dd71af2cb3ffffffffffff604e557003eab73b3bbfe282243ce1ffffffffffff604f557003c1771ac9fb6b4c18e229ffffffffffff605055700399e96897690418f785257fffffffffff605155700373fc456c53bb779bf0ea9fffffffffff60525570034f9e8e490c48e67e6ab8bfffffffffff60535570032cbfd4a7adc790560b3337ffffffffff60545570030b50570f6e5d2acca94613ffffffffff6055557002eb40f9f620fda6b56c2861ffffffffff6056557002cc8340ecb0d0f520a6af58ffffffffff6057557002af09481380a0a35cf1ba02ffffffffff605855700292c5bdd3b92ec810287b1b3fffffffff605955700277abdcdab07d5a77ac6d6b9fffffffff605a5570025daf6654b1eaa55fd64df5efffffffff605b55700244c49c648baa98192dce88b7ffffffff605c5570022ce03cd5619a311b2471268bffffffff605d55700215f77c045fbe885654a44a0fffffffff605e556001600160811b03605f557001eaefdbdaaee7421fc4d3ede5ffffffff6060557001d6bd8b2eb257df7e8ca57b09bfffffff6061557001c35fedd14b861eb0443f7f133fffffff6062557001b0ce43b322bcde4a56e8ada5afffffff60635570019f0028ec1fff007f5a195a39dfffffff60645570018ded91f0e72ee74f49b15ba527ffffff60655570017d8ec7f04136f4e5615fd41a63ffffff60665570016ddc6556cdb84bdc8d12d22e6fffffff60675570015ecf52776a1155b5bd8395814f7fffff60685570015060c256cb23b3b3cc3754cf40ffffff6069557001428a2f98d728ae223ddab715be3fffff606a5570013545598e5c23276ccf0ede68034fffff606b557001288c4161ce1d6f54b7f61081194fffff606c5570011c592761c666aa641d5a01a40f17ffff606d55700110a688680a7530515f3e6e6cfdcdffff606e557001056f1b5bedf75c6bcb2ce8aed428ffff606f556ffaadceceeff8a0890f3875f008277fff6070556ff05dc6b27edad306388a600f6ba0bfff6071556fe67a5a25da41063de1495d5b18cdbfff6072556fdcff115b14eedde6fc3aa5353f2e4fff6073556fd3e7a3924312399f9aae2e0f868f8fff6074556fcb2ff529eb71e41582cccd5a1ee26fff6075556fc2d415c3db974ab32a51840c0b67edff6076556fbad03e7d883f69ad5b0a186184e06bff6077556fb320d03b2c343d4829abd6075f0cc5ff6078556fabc25204e02828d73c6e80bcdb1a95bf6079556fa4b16f74ee4bb2040a1ec6c15fbbf2df607a556f9deaf736ac1f569deb1b5ae3f36c130f607b556f976bd9952c7aa957f5937d790ef65037607c556f9131271922eaa6064b73a22d0bd4f2bf607d556f8b380f3558668c46c91c49a2f8e967b9607e556f857ddf0117efa215952912839f6473e6607f55565b613bf98061074e6000396000f3fe608060405234801561001057600080fd5b50600436106101365760003560e01c80638888a737116100b2578063b19210b011610081578063b3923a9911610066578063b3923a991461032b578063ca2229791461033e578063d69109371461035157600080fd5b8063b19210b014610305578063b33d96b01461031857600080fd5b80638888a737146102b95780638fabd82d146102cc57806392aec23c146102df578063ad615dec146102f257600080fd5b80635bff1d9211610109578063671a11b5116100ee578063671a11b51461027057806367f84adc1461028357806379c91b371461029657600080fd5b80635bff1d92146101f95780636350d7741461024f57600080fd5b8063119220a51461013b5780632bb66e1d14610164578063327494611461019e578063544caa56146101c6575b600080fd5b61014e610149366004613453565b61037c565b60405161015b91906134d8565b60405180910390f35b61017761017236600461351c565b610577565b6040805163ffffffff9485168152928416602084015292169181019190915260600161015b565b6101b16101ac366004613555565b61060f565b6040805192835260208301919091520161015b565b6101d96101d436600461351c565b610812565b604080516001600160a01b0393841681529290911660208301520161015b565b61020c61020736600461351c565b610922565b604080516001600160a01b03909716875260208701959095529385019290925263ffffffff908116606085015290811660808401521660a082015260c00161015b565b61026261025d3660046135a0565b610bf9565b60405190815260200161015b565b61026261027e3660046135f3565b610c32565b61014e610291366004613453565b610df1565b6102a96102a436600461365a565b610fd1565b604051901515815260200161015b565b6102626102c73660046135a0565b6110f6565b61014e6102da3660046136a7565b611122565b6102626102ed36600461372f565b611304565b6102626103003660046137bc565b6113e7565b6102626103133660046135f3565b6114e6565b61020c610326366004613555565b6116ba565b61014e6103393660046136a7565b611948565b61017761034c3660046137e8565b611b15565b61036461035f36600461351c565b611c70565b6040516001600160a01b03909116815260200161015b565b6060816103d05760405162461bcd60e51b815260206004820152601c60248201527f5265717569656d466f726d756c613a20494e56414c49445f504154480000000060448201526064015b60405180910390fd5b6103db82600161381b565b67ffffffffffffffff8111156103f3576103f3613833565b60405190808252806020026020018201604052801561041c578160200160208202803683370190505b509050838160008151811061043357610433613849565b60209081029190910101528560005b838110156104fb576000806000806000806104848f8c8c8a81811061046957610469613849565b905060200201602081019061047e91906137e8565b8a6116ba565b9550955095509550955095506104b78988815181106104a5576104a5613849565b60200260200101518686868686610c32565b896104c389600161381b565b815181106104d3576104d3613849565b60200260200101818152505085975050505050505080806104f39061385f565b915050610442565b50856001600160a01b0316816001600160a01b03161461056c5760405162461bcd60e51b815260206004820152602660248201527f5265717569656d466f726d756c613a20494e56414c49445f544f4b454e5f4f556044820152650a8bea082a8960d31b60648201526084016103c7565b509695505050505050565b6040517fca2229790000000000000000000000000000000000000000000000000000000081526001600160a01b038281166004830152600091829182919086169063ca22297990602401606060405180830381865afa1580156105de573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610602919061387a565b9250925092509250925092565b60008060008061061f8686610812565b91509150600080886001600160a01b0316630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa158015610664573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061068891906138bc565b506001600160701b031691506001600160701b03169150886001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa1580156106dd573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061070191906138ed565b6001600160a01b0316846001600160a01b03161480156107935750886001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa15801561075a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061077e91906138ed565b6001600160a01b0316836001600160a01b0316145b6107df5760405162461bcd60e51b815260206004820152601d60248201527f5265717569656d466f726d756c613a20496e76616c696420746f6b656e00000060448201526064016103c7565b836001600160a01b0316886001600160a01b0316146107ff578082610802565b81815b909a909950975050505050505050565b600080826001600160a01b0316846001600160a01b0316141561089d5760405162461bcd60e51b815260206004820152602360248201527f5265717569656d466f726d756c613a204944454e544943414c5f41444452455360448201527f534553000000000000000000000000000000000000000000000000000000000060648201526084016103c7565b826001600160a01b0316846001600160a01b0316106108bd5782846108c0565b83835b90925090506001600160a01b03821661091b5760405162461bcd60e51b815260206004820152601c60248201527f5265717569656d466f726d756c613a205a45524f5f414444524553530000000060448201526064016103c7565b9250929050565b600080600080600080600080896001600160a01b0316630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa15801561096c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061099091906138bc565b506001600160701b031691506001600160701b031691506000806109b38c611b15565b8097508193508294505050508b6001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa1580156109fd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a2191906138ed565b6001600160a01b03168b6001600160a01b03161415610ab1578b6001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a78573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a9c91906138ed565b99509297509095509350915084848484610beb565b8b6001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015610aef573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b1391906138ed565b6001600160a01b03168b6001600160a01b03161415610ba3578b6001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b6a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b8e91906138ed565b99509197509195509350915083858385610beb565b60405162461bcd60e51b815260206004820152601e60248201527f5265717569656d466f726d756c613a20496e76616c696420746f6b656e41000060448201526064016103c7565b505050509295509295509295565b600080600080600080610c0c8989610922565b9550955095509550955050610c258785878587866114e6565b9998505050505050505050565b6000808711610ca95760405162461bcd60e51b815260206004820152602960248201527f5265717569656d466f726d756c613a20494e53554646494349454e545f494e5060448201527f55545f414d4f554e54000000000000000000000000000000000000000000000060648201526084016103c7565b600086118015610cb95750600085115b610d145760405162461bcd60e51b815260206004820152602660248201527f5265717569656d466f726d756c613a20494e53554646494349454e545f4c495160448201526555494449545960d01b60648201526084016103c7565b6000610d228361271061390a565b610d329063ffffffff168961392f565b90508363ffffffff168563ffffffff161415610d7b5780610d558861271061392f565b610d5f919061381b565b610d69828861392f565b610d739190613964565b915050610de7565b6000808083610d8c8b61271061392f565b610d96919061381b565b9050610daf81610da88c61271061392f565b8a8a611dd9565b90935091506000610dc0848b61392f565b905060ff83168a901b84610dd48284613978565b610dde9190613964565b96505050505050505b9695505050505050565b606081610e405760405162461bcd60e51b815260206004820152601c60248201527f5265717569656d466f726d756c613a20494e56414c49445f504154480000000060448201526064016103c7565b610e4b82600161381b565b67ffffffffffffffff811115610e6357610e63613833565b604051908082528060200260200182016040528015610e8c578160200160208202803683370190505b509050838160018351610e9f9190613978565b81518110610eaf57610eaf613849565b602090810291909101015284825b8015610f615760008080808080610eea8f8c8c610edb60018c613978565b81811061046957610469613849565b955095509550955095509550610f1d898881518110610f0b57610f0b613849565b602002602001015185878587866114e6565b89610f2960018a613978565b81518110610f3957610f39613849565b6020026020010181815250508597505050505050508080610f599061398f565b915050610ebd565b50866001600160a01b0316816001600160a01b03161461056c5760405162461bcd60e51b815260206004820152602560248201527f5265717569656d466f726d756c613a20494e56414c49445f544f4b454e5f494e6044820152640bea082a8960db1b60648201526084016103c7565b60008163ffffffff1660321415610fff57610fec858761392f565b610ff6848661392f565b101590506110ed565b85841015801561100f5750848310155b1561101c575060016110ed565b85841115801561102c5750848311155b15611039575060006110ed565b81600061104782606461390a565b90506000806000808b8a10611085576110638b8a876032611dd9565b90945060ff1692506110788a8d886032611dd9565b90925060ff1690506110b0565b6110928c8b886032611dd9565b90945060ff1692506110a7898c876032611dd9565b90925060ff1690505b60008184106110bf57816110c1565b835b90506110cd8185613978565b93506110d98183613978565b9290921c9390921c92909211159450505050505b95945050505050565b6000806000806000806111098989610922565b9550955095509550955050610c25878686868686610c32565b6060816111715760405162461bcd60e51b815260206004820152601c60248201527f5265717569656d466f726d756c613a20494e56414c49445f504154480000000060448201526064016103c7565b61117c82600161381b565b67ffffffffffffffff81111561119457611194613833565b6040519080825280602002602001820160405280156111bd578160200160208202803683370190505b50905083816000815181106111d4576111d4613849565b60209081029190910101528560005b83811015611289576000806000806000806112248b8b8981811061120957611209613849565b905060200201602081019061121e91906137e8565b89610922565b9550955095509550955095506112458988815181106104a5576104a5613849565b8961125189600161381b565b8151811061126157611261613849565b60200260200101818152505085975050505050505080806112819061385f565b9150506111e3565b50856001600160a01b0316816001600160a01b0316146112fa5760405162461bcd60e51b815260206004820152602660248201527f5265717569656d466f726d756c613a20494e56414c49445f544f4b454e5f4f556044820152650a8bea082a8960d31b60648201526084016103c7565b5095945050505050565b60006001600160701b03831615611371576000806113436113316001600160701b03808c1690881661381b565b8a6001600160701b0316896064611dd9565b90925060ff1690508981611357848361392f565b611362911c8561381b565b61136c9190613978565b925050505b6001600160701b038216156113dc576000806113ae61139c6001600160701b03808b1690871661381b565b896001600160701b0316886064611dd9565b90925060ff16905089816113c2848361392f565b6113cd911c8561381b565b6113d79190613978565b925050505b979650505050505050565b600080841161145e5760405162461bcd60e51b815260206004820152602360248201527f5265717569656d466f726d756c613a20494e53554646494349454e545f414d4f60448201527f554e54000000000000000000000000000000000000000000000000000000000060648201526084016103c7565b60008311801561146e5750600082115b6114c95760405162461bcd60e51b815260206004820152602660248201527f5265717569656d466f726d756c613a20494e53554646494349454e545f4c495160448201526555494449545960d01b60648201526084016103c7565b826114d4838661392f565b6114de9190613964565b949350505050565b600080871161155d5760405162461bcd60e51b815260206004820152602a60248201527f5265717569656d466f726d756c613a20494e53554646494349454e545f4f555460448201527f5055545f414d4f554e540000000000000000000000000000000000000000000060648201526084016103c7565b60008611801561156d5750600085115b6115c85760405162461bcd60e51b815260206004820152602660248201527f5265717569656d466f726d756c613a20494e53554646494349454e545f4c495160448201526555494449545960d01b60648201526084016103c7565b8263ffffffff168463ffffffff16141561163e5760006115e8888861392f565b6115f49061271061392f565b905060006116048461271061390a565b63ffffffff166116148a89613978565b61161e919061392f565b905061162a8183613964565b61163590600161381b565b92505050610de7565b6000808061164c8a89613978565b905061165a8882888a611dd9565b9093509150600061166d8a61271061392f565b9050600061167b858361392f565b905060ff841682901b6116908861271061390a565b63ffffffff1660ff86166116a48385613978565b6116af92911c613964565b610dde90600161381b565b600080600080600080600080896001600160a01b0316630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa158015611704573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061172891906138bc565b506001600160701b031691506001600160701b0316915060008061174c8d8d610577565b8097508193508294505050508b6001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015611796573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117ba91906138ed565b6001600160a01b03168b6001600160a01b0316141561184a578b6001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015611811573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061183591906138ed565b99509297509095509350915084848484611938565b8b6001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015611888573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118ac91906138ed565b6001600160a01b03168b6001600160a01b03161415610ba3578b6001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015611903573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061192791906138ed565b995091975091955093509150838583855b5050505093975093979195509350565b6060816119975760405162461bcd60e51b815260206004820152601c60248201527f5265717569656d466f726d756c613a20494e56414c49445f504154480000000060448201526064016103c7565b6119a282600161381b565b67ffffffffffffffff8111156119ba576119ba613833565b6040519080825280602002602001820160405280156119e3578160200160208202803683370190505b5090508381600183516119f69190613978565b81518110611a0657611a06613849565b602090810291909101015284825b8015611aa55760008080808080611a408b8b611a3160018b613978565b81811061120957611209613849565b955095509550955095509550611a61898881518110610f0b57610f0b613849565b89611a6d60018a613978565b81518110611a7d57611a7d613849565b6020026020010181815250508597505050505050508080611a9d9061398f565b915050611a14565b50866001600160a01b0316816001600160a01b0316146112fa5760405162461bcd60e51b815260206004820152602560248201527f5265717569656d466f726d756c613a20494e56414c49445f544f4b454e5f494e6044820152640bea082a8960db1b60648201526084016103c7565b6000806000836001600160a01b03166332bfe4696040518163ffffffff1660e01b81526004016040805180830381865afa925050508015611b73575060408051601f3d908101601f19168201909252611b70918101906139a6565b60015b611bfc57611b7f6139d5565b806308c379a01415611bb95750611b94613a2c565b80611b9f5750611bbb565b8060405162461bcd60e51b81526004016103c79190613ab6565b505b3d808015611be5576040519150601f19603f3d011682016040523d82523d6000602084013e611bea565b606091505b50603280601e93509350935050611c69565b8181876001600160a01b031663d4cadf686040518163ffffffff1660e01b8152600401602060405180830381865afa158015611c3c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c609190613b0b565b94509450945050505b9193909250565b600080836001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015611cb1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611cd591906138ed565b90506000846001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015611d17573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d3b91906138ed565b9050836001600160a01b0316826001600160a01b03161480611d6e5750836001600160a01b0316816001600160a01b0316145b611dba5760405162461bcd60e51b815260206004820152601e60248201527f5265717569656d466f726d756c613a20496e76616c696420746f6b656e41000060448201526064016103c7565b836001600160a01b0316826001600160a01b0316146114de57816110ed565b60008084861015611e2c5760405162461bcd60e51b815260206004820152601b60248201527f6e6f7420737570706f7274205f626173654e203c205f6261736544000000000060448201526064016103c7565b600160811b8610611e3c57600080fd5b60008086611e4e6001607f1b8a61392f565b611e589190613964565b905070015bf0a8b1457695355fb8ac404e7a79e3811015611e8357611e7c81611f23565b9150611e8f565b611e8c81612533565b91505b60008563ffffffff168763ffffffff1684611eaa919061392f565b611eb49190613964565b9050700800000000000000000000000000000000811015611ee657611ed881612628565b607f94509450505050611f1a565b6000611ef182612c78565b9050611f0d611f0182607f613b28565b60ff1683901c82612d2b565b95509350611f1a92505050565b94509492505050565b6000808080806fd3094c70f034de4b96ff7d5b6f99fcd88610611f8857611f5a6f400000000000000000000000000000008561381b565b93506fd3094c70f034de4b96ff7d5b6f99fcd8611f7b6001607f1b8861392f565b611f859190613964565b95505b6fa45af1e1f40c333b3de1db4dd55f29a78610611fe757611fb96f200000000000000000000000000000008561381b565b93506fa45af1e1f40c333b3de1db4dd55f29a7611fda6001607f1b8861392f565b611fe49190613964565b95505b6f910b022db7ae67ce76b441c27035c6a1861061203a5761200c6001607c1b8561381b565b93506f910b022db7ae67ce76b441c27035c6a161202d6001607f1b8861392f565b6120379190613964565b95505b6f88415abbe9a76bead8d00cf112e4d4a886106120995761206b6f080000000000000000000000000000008561381b565b93506f88415abbe9a76bead8d00cf112e4d4a861208c6001607f1b8861392f565b6120969190613964565b95505b6f84102b00893f64c705e841d5d4064bd386106120f8576120ca6f040000000000000000000000000000008561381b565b93506f84102b00893f64c705e841d5d4064bd36120eb6001607f1b8861392f565b6120f59190613964565b95505b6f8204055aaef1c8bd5c3259f4822735a28610612157576121296f020000000000000000000000000000008561381b565b93506f8204055aaef1c8bd5c3259f4822735a261214a6001607f1b8861392f565b6121549190613964565b95505b6f810100ab00222d861931c15e39b44e9986106121b6576121886f010000000000000000000000000000008561381b565b93506f810100ab00222d861931c15e39b44e996121a96001607f1b8861392f565b6121b39190613964565b95505b6f808040155aabbbe9451521693554f7338610612214576121e66e8000000000000000000000000000008561381b565b93506f808040155aabbbe9451521693554f7336122076001607f1b8861392f565b6122119190613964565b95505b6122226001607f1b87613978565b92508291506001607f1b612236838061392f565b6122409190613964565b9050600160801b6122518482613978565b61225b908461392f565b6122659190613964565b61226f908561381b565b93506001607f1b612280828461392f565b61228a9190613964565b9150600160811b6122ab846faaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa613978565b6122b5908461392f565b6122bf9190613964565b6122c9908561381b565b93506001607f1b6122da828461392f565b6122e49190613964565b9150700300000000000000000000000000000000612312846f99999999999999999999999999999999613978565b61231c908461392f565b6123269190613964565b612330908561381b565b93506001607f1b612341828461392f565b61234b9190613964565b9150700400000000000000000000000000000000612379846f92492492492492492492492492492492613978565b612383908461392f565b61238d9190613964565b612397908561381b565b93506001607f1b6123a8828461392f565b6123b29190613964565b91507005000000000000000000000000000000006123e0846f8e38e38e38e38e38e38e38e38e38e38e613978565b6123ea908461392f565b6123f49190613964565b6123fe908561381b565b93506001607f1b61240f828461392f565b6124199190613964565b9150700600000000000000000000000000000000612447846f8ba2e8ba2e8ba2e8ba2e8ba2e8ba2e8b613978565b612451908461392f565b61245b9190613964565b612465908561381b565b93506001607f1b612476828461392f565b6124809190613964565b91507007000000000000000000000000000000006124ae846f89d89d89d89d89d89d89d89d89d89d89613978565b6124b8908461392f565b6124c29190613964565b6124cc908561381b565b93506001607f1b6124dd828461392f565b6124e79190613964565b9150700800000000000000000000000000000000612515846f88888888888888888888888888888888613978565b61251f908461392f565b6125299190613964565b610de7908561381b565b600080600160801b83106125775760006125596125546001607f1b86613964565b613389565b60ff811694851c94909150612573906001607f1b9061392f565b9150505b6001607f1b8311156125ec57607f5b60ff8116156125ea576001607f1b61259e858061392f565b6125a89190613964565b9350600160801b84106125da57600193841c936125c59082613b28565b60ff166001901b826125d7919061381b565b91505b6125e381613b4b565b9050612586565b505b6f05b9de1d10bf4103d647b0955897ba806126176f03f80fe03f80fe03f80fe03f80fe03f88361392f565b6126219190613964565b9392505050565b600080808061263b6001607c1b86613b68565b91508190506001607f1b61264f828061392f565b6126599190613964565b905061266d816710e1b3be415a000061392f565b612677908461381b565b92506001607f1b612688838361392f565b6126929190613964565b90506126a6816705a0913f6b1e000061392f565b6126b0908461381b565b92506001607f1b6126c1838361392f565b6126cb9190613964565b90506126df81670168244fdac7800061392f565b6126e9908461381b565b92506001607f1b6126fa838361392f565b6127049190613964565b905061271781664807432bc1800061392f565b612721908461381b565b92506001607f1b612732838361392f565b61273c9190613964565b905061274f81660c0135dca0400061392f565b612759908461381b565b92506001607f1b61276a838361392f565b6127749190613964565b9050612787816601b707b1cdc00061392f565b612791908461381b565b92506001607f1b6127a2838361392f565b6127ac9190613964565b90506127be816536e0f639b80061392f565b6127c8908461381b565b92506001607f1b6127d9838361392f565b6127e39190613964565b90506127f581650618fee9f80061392f565b6127ff908461381b565b92506001607f1b612810838361392f565b61281a9190613964565b905061282b81649c197dcc0061392f565b612835908461381b565b92506001607f1b612846838361392f565b6128509190613964565b905061286181640e30dce40061392f565b61286b908461381b565b92506001607f1b61287c838361392f565b6128869190613964565b90506128978164012ebd130061392f565b6128a1908461381b565b92506001607f1b6128b2838361392f565b6128bc9190613964565b90506128cc816317499f0061392f565b6128d6908461381b565b92506001607f1b6128e7838361392f565b6128f19190613964565b9050612901816301a9d48061392f565b61290b908461381b565b92506001607f1b61291c838361392f565b6129269190613964565b905061293581621c638061392f565b61293f908461381b565b92506001607f1b612950838361392f565b61295a9190613964565b9050612969816201c63861392f565b612973908461381b565b92506001607f1b612984838361392f565b61298e9190613964565b905061299c81611ab861392f565b6129a6908461381b565b92506001607f1b6129b7838361392f565b6129c19190613964565b90506129cf8161017c61392f565b6129d9908461381b565b92506001607f1b6129ea838361392f565b6129f49190613964565b9050612a0181601461392f565b612a0b908461381b565b92506001607f1b612a1c838361392f565b612a269190613964565b9050612a3381600161392f565b612a3d908461381b565b92506001607f1b82612a576721c3677c82b4000086613964565b612a61919061381b565b612a6b919061381b565b92506001607c1b851615612ab35770018ebef9eac820ae8682b9793ac6d1e776612aa6847001c3d6a24ed82218787d624d3e5eba95f961392f565b612ab09190613964565b92505b6f20000000000000000000000000000000851615612b05577001368b2fc6f9609fe7aceb46aa619baed4612af88470018ebef9eac820ae8682b9793ac6d1e77861392f565b612b029190613964565b92505b6f40000000000000000000000000000000851615612b56576fbc5ab1b16779be3575bd8f0520a9f21f612b49847001368b2fc6f9609fe7aceb46aa619baed561392f565b612b539190613964565b92505b6001607f1b851615612b9a576f454aaa8efe072e7f6ddbab84b40a55c9612b8d846fbc5ab1b16779be3575bd8f0520a9f21e61392f565b612b979190613964565b92505b600160801b851615612bde576f0960aadc109e7a3bf4578099615711ea612bd1846f454aaa8efe072e7f6ddbab84b40a55c561392f565b612bdb9190613964565b92505b600160811b851615612c21576e2bf84208204f5977f9a8cf01fdce3d612c14846f0960aadc109e7a3bf4578099615711d761392f565b612c1e9190613964565b92505b700400000000000000000000000000000000851615612c6f576d03c6ab775dd0b95b4cbee7e65d11612c62846e2bf84208204f5977f9a8cf01fdc30761392f565b612c6c9190613964565b92505b50909392505050565b60006020607f5b60ff8116612c8e836001613b7c565b60ff161015612ce15760006002612ca58385613b7c565b612caf9190613ba1565b90508460008260ff1660808110612cc857612cc8613849565b015410612cd757809250612cdb565b8091505b50612c7f565b8360008260ff1660808110612cf857612cf8613849565b015410612d06579392505050565b8360008360ff1660808110612d1d57612d1d613849565b015410610136575092915050565b6000828160ff8416612d3d838061392f565b901c9150612d5b826f03442c4e6074a82f1797f72ac000000061392f565b612d65908261381b565b905060ff8416612d75868461392f565b901c9150612d93826f0116b96f757c380fb287fd0e4000000061392f565b612d9d908261381b565b905060ff8416612dad868461392f565b901c9150612dca826e45ae5bdd5f0e03eca1ff439000000061392f565b612dd4908261381b565b905060ff8416612de4868461392f565b901c9150612e01826e0defabf91302cd95b9ffda5000000061392f565b612e0b908261381b565b905060ff8416612e1b868461392f565b901c9150612e38826e02529ca9832b22439efff9b800000061392f565b612e42908261381b565b905060ff8416612e52868461392f565b901c9150612e6e826d54f1cf12bd04e516b6da8800000061392f565b612e78908261381b565b905060ff8416612e88868461392f565b901c9150612ea4826d0a9e39e257a09ca2d6db5100000061392f565b612eae908261381b565b905060ff8416612ebe868461392f565b901c9150612eda826d012e066e7b839fa050c30900000061392f565b612ee4908261381b565b905060ff8416612ef4868461392f565b901c9150612f0f826c1e33d7d926c329a1ad1a80000061392f565b612f19908261381b565b905060ff8416612f29868461392f565b901c9150612f44826c02bee513bdb4a6b19b5f80000061392f565b612f4e908261381b565b905060ff8416612f5e868461392f565b901c9150612f78826b3a9316fa79b88eccf2a0000061392f565b612f82908261381b565b905060ff8416612f92868461392f565b901c9150612fac826b048177ebe1fa81237520000061392f565b612fb6908261381b565b905060ff8416612fc6868461392f565b901c9150612fdf826a5263fe90242dcbacf0000061392f565b612fe9908261381b565b905060ff8416612ff9868461392f565b901c9150613012826a057e22099c030d9410000061392f565b61301c908261381b565b905060ff841661302c868461392f565b901c9150613044826957e22099c030d941000061392f565b61304e908261381b565b905060ff841661305e868461392f565b901c91506130768269052b6b5456997631000061392f565b613080908261381b565b905060ff8416613090868461392f565b901c91506130a782684985f67696bf74800061392f565b6130b1908261381b565b905060ff84166130c1868461392f565b901c91506130d8826803dea12ea99e49800061392f565b6130e2908261381b565b905060ff84166130f2868461392f565b901c9150613108826731880f2214b6e00061392f565b613112908261381b565b905060ff8416613122868461392f565b901c91506131388267025bcff56eb3600061392f565b613142908261381b565b905060ff8416613152868461392f565b901c915061316782661b722e10ab100061392f565b613171908261381b565b905060ff8416613181868461392f565b901c9150613196826601317c7007700061392f565b6131a0908261381b565b905060ff84166131b0868461392f565b901c91506131c482650cba84aafa0061392f565b6131ce908261381b565b905060ff84166131de868461392f565b901c91506131f1826482573a0a0061392f565b6131fb908261381b565b905060ff841661320b868461392f565b901c915061321e826405035ad90061392f565b613228908261381b565b905060ff8416613238868461392f565b901c915061324a82632f881b0061392f565b613254908261381b565b905060ff8416613264868461392f565b901c9150613276826301b2934061392f565b613280908261381b565b905060ff8416613290868461392f565b901c91506132a182620efc4061392f565b6132ab908261381b565b905060ff84166132bb868461392f565b901c91506132cb82617fe061392f565b6132d5908261381b565b905060ff84166132e5868461392f565b901c91506132f58261042061392f565b6132ff908261381b565b905060ff841661330f868461392f565b901c915061331e82602161392f565b613328908261381b565b905060ff8416613338868461392f565b901c915061334782600161392f565b613351908261381b565b9050600160ff85161b856133756f0688589cc0e9505e2f2fee558000000084613964565b61337f919061381b565b6110ed919061381b565b6000806101008310156133bc575b60018311156133b757600192831c926133b09082613b7c565b9050613397565b6133f0565b60805b60ff8116156133ee57600160ff82161b84106133e35760ff81169390931c92908117905b60011c607f166133bf565b505b92915050565b6001600160a01b038116811461340b57600080fd5b50565b60008083601f84011261342057600080fd5b50813567ffffffffffffffff81111561343857600080fd5b6020830191508360208260051b850101111561091b57600080fd5b60008060008060008060a0878903121561346c57600080fd5b8635613477816133f6565b95506020870135613487816133f6565b94506040870135613497816133f6565b935060608701359250608087013567ffffffffffffffff8111156134ba57600080fd5b6134c689828a0161340e565b979a9699509497509295939492505050565b6020808252825182820181905260009190848201906040850190845b81811015613510578351835292840192918401916001016134f4565b50909695505050505050565b6000806040838503121561352f57600080fd5b823561353a816133f6565b9150602083013561354a816133f6565b809150509250929050565b60008060006060848603121561356a57600080fd5b8335613575816133f6565b92506020840135613585816133f6565b91506040840135613595816133f6565b809150509250925092565b6000806000606084860312156135b557600080fd5b83356135c0816133f6565b925060208401356135d0816133f6565b929592945050506040919091013590565b63ffffffff8116811461340b57600080fd5b60008060008060008060c0878903121561360c57600080fd5b863595506020870135945060408701359350606087013561362c816135e1565b9250608087013561363c816135e1565b915060a087013561364c816135e1565b809150509295509295509295565b600080600080600060a0868803121561367257600080fd5b853594506020860135935060408601359250606086013591506080860135613699816135e1565b809150509295509295909350565b6000806000806000608086880312156136bf57600080fd5b85356136ca816133f6565b945060208601356136da816133f6565b935060408601359250606086013567ffffffffffffffff8111156136fd57600080fd5b6137098882890161340e565b969995985093965092949392505050565b6001600160701b038116811461340b57600080fd5b600080600080600080600060e0888a03121561374a57600080fd5b87359650602088013561375c8161371a565b9550604088013561376c8161371a565b9450606088013561377c816135e1565b9350608088013561378c816135e1565b925060a088013561379c8161371a565b915060c08801356137ac8161371a565b8091505092959891949750929550565b6000806000606084860312156137d157600080fd5b505081359360208301359350604090920135919050565b6000602082840312156137fa57600080fd5b8135612621816133f6565b634e487b7160e01b600052601160045260246000fd5b6000821982111561382e5761382e613805565b500190565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b600060001982141561387357613873613805565b5060010190565b60008060006060848603121561388f57600080fd5b835161389a816135e1565b60208501519093506138ab816135e1565b6040850151909250613595816135e1565b6000806000606084860312156138d157600080fd5b83516138dc8161371a565b60208501519093506138ab8161371a565b6000602082840312156138ff57600080fd5b8151612621816133f6565b600063ffffffff8381169083168181101561392757613927613805565b039392505050565b600081600019048311821515161561394957613949613805565b500290565b634e487b7160e01b600052601260045260246000fd5b6000826139735761397361394e565b500490565b60008282101561398a5761398a613805565b500390565b60008161399e5761399e613805565b506000190190565b600080604083850312156139b957600080fd5b82516139c4816135e1565b602084015190925061354a816135e1565b600060033d11156139ee5760046000803e5060005160e01c5b90565b601f8201601f1916810167ffffffffffffffff81118282101715613a2557634e487b7160e01b600052604160045260246000fd5b6040525050565b600060443d1015613a3a5790565b6040516003193d81016004833e81513d67ffffffffffffffff8160248401118184111715613a6a57505050505090565b8285019150815181811115613a825750505050505090565b843d8701016020828501011115613a9c5750505050505090565b613aab602082860101876139f1565b509095945050505050565b600060208083528351808285015260005b81811015613ae357858101830151858201604001528201613ac7565b81811115613af5576000604083870101525b50601f01601f1916929092016040019392505050565b600060208284031215613b1d57600080fd5b8151612621816135e1565b600060ff821660ff841680821015613b4257613b42613805565b90039392505050565b600060ff821680613b5e57613b5e613805565b6000190192915050565b600082613b7757613b7761394e565b500690565b600060ff821660ff84168060ff03821115613b9957613b99613805565b019392505050565b600060ff831680613bb457613bb461394e565b8060ff8416049150509291505056fea2646970667358221220b9800d09353e4f6c606ed5785cc6bb92746a28b0d44be5a3e4e6ecded814d71264736f6c634300080b0033";

export class RequiemFormula__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<RequiemFormula> {
    return super.deploy(overrides || {}) as Promise<RequiemFormula>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): RequiemFormula {
    return super.attach(address) as RequiemFormula;
  }
  connect(signer: Signer): RequiemFormula__factory {
    return super.connect(signer) as RequiemFormula__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RequiemFormulaInterface {
    return new utils.Interface(_abi) as RequiemFormulaInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RequiemFormula {
    return new Contract(address, _abi, signerOrProvider) as RequiemFormula;
  }
}
