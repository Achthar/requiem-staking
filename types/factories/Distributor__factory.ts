/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Distributor, DistributorInterface } from "../Distributor";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_treasury",
        type: "address",
      },
      {
        internalType: "address",
        name: "_ohm",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_epochLength",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_nextEpochBlock",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "OHM",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_rewardRate",
        type: "uint256",
      },
    ],
    name: "addRecipient",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "adjustments",
    outputs: [
      {
        internalType: "bool",
        name: "add",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "rate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "target",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "distribute",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "epochLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "info",
    outputs: [
      {
        internalType: "uint256",
        name: "rate",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nextEpochBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_rate",
        type: "uint256",
      },
    ],
    name: "nextRewardAt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
    ],
    name: "nextRewardFor",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "policy",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pullPolicy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newPolicy_",
        type: "address",
      },
    ],
    name: "pushPolicy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
    ],
    name: "removeRecipient",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renouncePolicy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "_add",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "_rate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_target",
        type: "uint256",
      },
    ],
    name: "setAdjustment",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "treasury",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60e06040523480156200001157600080fd5b5060405162001537380380620015378339810160408190526200003491620000d9565b600080546001600160a01b0319163390811782556040519091907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a36001600160a01b0384166200008757600080fd5b6001600160a01b0380851660a0528316620000a157600080fd5b6001600160a01b0390921660805260c0526002555062000121565b80516001600160a01b0381168114620000d457600080fd5b919050565b60008060008060808587031215620000f057600080fd5b620000fb85620000bc565b93506200010b60208601620000bc565b6040860151606090960151949790965092505050565b60805160a05160c0516113d162000166600039600081816101b401526108b20152600081816101f8015261091501526000818161023a01526107ff01526113d16000f3fe608060405234801561001057600080fd5b50600436106100ff5760003560e01c8063a15ad07711610097578063c9fa8b2a11610066578063c9fa8b2a146102ac578063e4fc6b6d146102bf578063f7982243146102d7578063fe3fbbad146102ea57600080fd5b8063a15ad0771461021a578063a4b239801461022d578063a6c41fec14610235578063bc3b2b121461025c57600080fd5b806357d775f8116100d357806357d775f8146101af5780635beede08146101d65780635db854b0146101e057806361d027b3146101f357600080fd5b8062640c2e146101045780630505c8c9146101205780632e3405991461015f57806336d33f441461019c575b600080fd5b61010d60025481565b6040519081526020015b60405180910390f35b60005473ffffffffffffffffffffffffffffffffffffffff165b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610117565b61017261016d3660046110dd565b6102fd565b6040805192835273ffffffffffffffffffffffffffffffffffffffff909116602083015201610117565b61010d6101aa36600461111f565b610341565b61010d7f000000000000000000000000000000000000000000000000000000000000000081565b6101de6103f3565b005b6101de6101ee36600461113a565b6104aa565b61013a7f000000000000000000000000000000000000000000000000000000000000000081565b6101de61022836600461111f565b610595565b6101de610700565b61013a7f000000000000000000000000000000000000000000000000000000000000000081565b61028f61026a3660046110dd565b60036020526000908152604090208054600182015460029092015460ff909116919083565b604080519315158452602084019290925290820152606001610117565b61010d6102ba3660046110dd565b6107f0565b6102c761089e565b6040519015158152602001610117565b6101de6102e536600461117c565b610a56565b6101de6102f83660046111a6565b610bb1565b6004818154811061030d57600080fd5b60009182526020909120600290910201805460019091015490915073ffffffffffffffffffffffffffffffffffffffff1682565b60008060005b6004548110156103ec578373ffffffffffffffffffffffffffffffffffffffff166004828154811061037b5761037b6111d2565b600091825260209091206001600290920201015473ffffffffffffffffffffffffffffffffffffffff16036103da576103d7600482815481106103c0576103c06111d2565b9060005260206000209060020201600001546107f0565b91505b806103e481611230565b915050610347565b5092915050565b60015473ffffffffffffffffffffffffffffffffffffffff16331461041757600080fd5b6001546000805460405173ffffffffffffffffffffffffffffffffffffffff93841693909116917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600154600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff909216919091179055565b60005473ffffffffffffffffffffffffffffffffffffffff163314610530576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b6040805160608101825293151584526020808501938452848201928352600095865260039052909320915182547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169015151782555160018201559051600290910155565b60005473ffffffffffffffffffffffffffffffffffffffff163314610616576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610527565b73ffffffffffffffffffffffffffffffffffffffff81166106b9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610527565b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60005473ffffffffffffffffffffffffffffffffffffffff163314610781576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610527565b6000805460405173ffffffffffffffffffffffffffffffffffffffff909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080547fffffffffffffffffffffffff0000000000000000000000000000000000000000169055565b6000610898620f4240610892847f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610868573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061088c9190611268565b90610d0b565b90610dca565b92915050565b60004360025411610a50576002546108d6907f0000000000000000000000000000000000000000000000000000000000000000610e0c565b60025560005b600454811015610a48576000600482815481106108fb576108fb6111d2565b9060005260206000209060020201600001541115610a36577f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16636a20de9260048381548110610962576109626111d2565b906000526020600020906002020160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166109aa600485815481106103c0576103c06111d2565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b16815273ffffffffffffffffffffffffffffffffffffffff90921660048301526024820152604401600060405180830381600087803b158015610a1557600080fd5b505af1158015610a29573d6000803e3d6000fd5b50505050610a3681610e85565b80610a4081611230565b9150506108dc565b506001905090565b50600090565b60005473ffffffffffffffffffffffffffffffffffffffff163314610ad7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610527565b73ffffffffffffffffffffffffffffffffffffffff8216610af757600080fd5b6040805180820190915290815273ffffffffffffffffffffffffffffffffffffffff918216602082019081526004805460018101825560009190915291517f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b600290930292830155517f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19c90910180547fffffffffffffffffffffffff00000000000000000000000000000000000000001691909216179055565b60005473ffffffffffffffffffffffffffffffffffffffff163314610c32576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610527565b60048281548110610c4557610c456111d2565b600091825260209091206001600290920201015473ffffffffffffffffffffffffffffffffffffffff828116911614610c7d57600080fd5b600060048381548110610c9257610c926111d2565b906000526020600020906002020160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600060048381548110610cf657610cf66111d2565b60009182526020909120600290910201555050565b600082600003610d1d57506000610898565b6000610d298385611281565b905082610d3685836112be565b14610dc3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f60448201527f77000000000000000000000000000000000000000000000000000000000000006064820152608401610527565b9392505050565b6000610dc383836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250611004565b600080610e1983856112f9565b905083811015610dc3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f7700000000006044820152606401610527565b6000818152600360209081526040918290208251606081018452815460ff161515815260018201549281018390526002909101549281019290925215610f6557805115610f6957610efe816020015160048481548110610ee757610ee76111d2565b600091825260209091206002909102015490610e0c565b60048381548110610f1157610f116111d2565b600091825260209091206002909102015560408101516004805484908110610f3b57610f3b6111d2565b90600052602060002090600202016000015410610f65576000828152600360205260408120600101555b5050565b610f9b816020015160048481548110610f8457610f846111d2565b600091825260209091206002909102015490611055565b60048381548110610fae57610fae6111d2565b600091825260209091206002909102015560408101516004805484908110610fd857610fd86111d2565b90600052602060002090600202016000015411610f655750600090815260036020526040812060010155565b6000818361103f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105279190611311565b50600061104c84866112be565b95945050505050565b6000610dc383836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250600081848411156110d0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105279190611311565b50600061104c8486611384565b6000602082840312156110ef57600080fd5b5035919050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461111a57600080fd5b919050565b60006020828403121561113157600080fd5b610dc3826110f6565b6000806000806080858703121561115057600080fd5b843593506020850135801515811461116757600080fd5b93969395505050506040820135916060013590565b6000806040838503121561118f57600080fd5b611198836110f6565b946020939093013593505050565b600080604083850312156111b957600080fd5b823591506111c9602084016110f6565b90509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361126157611261611201565b5060010190565b60006020828403121561127a57600080fd5b5051919050565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156112b9576112b9611201565b500290565b6000826112f4577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b6000821982111561130c5761130c611201565b500190565b600060208083528351808285015260005b8181101561133e57858101830151858201604001528201611322565b81811115611350576000604083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016929092016040019392505050565b60008282101561139657611396611201565b50039056fea2646970667358221220487aa2872c5e0a7ddfde6a7fcdc53a7b4a96354184ed33c3a3605f1c809fbfc864736f6c634300080d0033";

export class Distributor__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _treasury: string,
    _ohm: string,
    _epochLength: BigNumberish,
    _nextEpochBlock: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Distributor> {
    return super.deploy(
      _treasury,
      _ohm,
      _epochLength,
      _nextEpochBlock,
      overrides || {}
    ) as Promise<Distributor>;
  }
  getDeployTransaction(
    _treasury: string,
    _ohm: string,
    _epochLength: BigNumberish,
    _nextEpochBlock: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _treasury,
      _ohm,
      _epochLength,
      _nextEpochBlock,
      overrides || {}
    );
  }
  attach(address: string): Distributor {
    return super.attach(address) as Distributor;
  }
  connect(signer: Signer): Distributor__factory {
    return super.connect(signer) as Distributor__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DistributorInterface {
    return new utils.Interface(_abi) as DistributorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Distributor {
    return new Contract(address, _abi, signerOrProvider) as Distributor;
  }
}
