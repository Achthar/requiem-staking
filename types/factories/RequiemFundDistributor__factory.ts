/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  RequiemFundDistributor,
  RequiemFundDistributorInterface,
} from "../RequiemFundDistributor";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "FundRequested",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "requester",
        type: "address",
      },
    ],
    name: "RequesterAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "requester",
        type: "address",
      },
    ],
    name: "RequesterRemoved",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_requester",
        type: "address",
      },
    ],
    name: "addRequester",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_maturity",
        type: "uint256",
      },
    ],
    name: "distributeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_reward",
        type: "address",
      },
      {
        internalType: "address",
        name: "_rewardGovernance",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "missingDecimals",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_requester",
        type: "address",
      },
    ],
    name: "removeRequester",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "requesters",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "reward",
    outputs: [
      {
        internalType: "contract IRewardToken",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardGovernance",
    outputs: [
      {
        internalType: "contract IGovernanceLock",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner_",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50600080546001600160a01b0319163390811782556040519091907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a361114f8061005f6000396000f3fe608060405234801561001057600080fd5b50600436106100c95760003560e01c8063715018a611610081578063e4d609cc1161005b578063e4d609cc146101d0578063efdd6f0c146101e3578063f2fde38b146101f657600080fd5b8063715018a6146101775780638da5cb5b1461017f578063d6f8307f1461019d57600080fd5b80633ba349bd116100b25780633ba349bd1461012d578063412831c41461014d578063485cc9551461016457600080fd5b80631107e77c146100ce578063228cb733146100e3575b600080fd5b6100e16100dc366004610e79565b610209565b005b6001546101039073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b6002546101039073ffffffffffffffffffffffffffffffffffffffff1681565b61015660035481565b604051908152602001610124565b6100e1610172366004610e9b565b610392565b6100e16106a5565b60005473ffffffffffffffffffffffffffffffffffffffff16610103565b6101c06101ab366004610e79565b60046020526000908152604090205460ff1681565b6040519015158152602001610124565b6100e16101de366004610e79565b610795565b6100e16101f1366004610ece565b61091d565b6100e1610204366004610e79565b610c9f565b60005473ffffffffffffffffffffffffffffffffffffffff16331461028f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff811660009081526004602052604090205460ff1661031e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f726571756573746572206e6f7420666f756e64000000000000000000000000006044820152606401610286565b73ffffffffffffffffffffffffffffffffffffffff811660008181526004602052604080822080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169055517ffac6f04e18535b820487cce1312e5a45366b7326f7e956a9c48d70fecdde87619190a250565b6000547501000000000000000000000000000000000000000000900460ff16806103d7575060005474010000000000000000000000000000000000000000900460ff16155b610463576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a65640000000000000000000000000000000000006064820152608401610286565b6000547501000000000000000000000000000000000000000000900460ff161580156104ca57600080547fffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffff1675010100000000000000000000000000000000000000001790555b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff8581169182179092556040517f095ea7b300000000000000000000000000000000000000000000000000000000815291841660048301527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60248301529063095ea7b3906044016020604051808303816000875af115801561058b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105af9190610f01565b5081600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa15801561063c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106609190610f23565b61066b906012610f75565b60ff1660035580156106a057600080547fffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffffff1690555b505050565b60005473ffffffffffffffffffffffffffffffffffffffff163314610726576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610286565b6000805460405173ffffffffffffffffffffffffffffffffffffffff909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080547fffffffffffffffffffffffff0000000000000000000000000000000000000000169055565b60005473ffffffffffffffffffffffffffffffffffffffff163314610816576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610286565b73ffffffffffffffffffffffffffffffffffffffff811660009081526004602052604090205460ff16156108a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f72657175657374657220657869737465640000000000000000000000000000006044820152606401610286565b73ffffffffffffffffffffffffffffffffffffffff811660008181526004602052604080822080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055517f1616bf4c0898e95cbe6407827ef9ba6f5887a571df69e07eeda76b2b2a4f7daf9190a250565b3360009081526004602052604090205460ff16610996576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f4f6e6c7920706f6f6c2063616e2072657175657374207472616e7366657200006044820152606401610286565b73ffffffffffffffffffffffffffffffffffffffff8316610a13576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f496e76616c6964206164647265737300000000000000000000000000000000006044820152606401610286565b81156106a0576000600354600a610a2a91906110ba565b610a3490846110c6565b90506000610a428342611101565b6001546040517f40c10f190000000000000000000000000000000000000000000000000000000081523060048201526024810185905291925073ffffffffffffffffffffffffffffffffffffffff16906340c10f1990604401600060405180830381600087803b158015610ab557600080fd5b505af1158015610ac9573d6000803e3d6000fd5b50506002546040517fc4ee3c5000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff898116600483015260248201869052909116925063c4ee3c509150604401602060405180830381865afa158015610b44573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b689190610f01565b610c04576002546040517fdcb69fbb000000000000000000000000000000000000000000000000000000008152600481018490526024810183905273ffffffffffffffffffffffffffffffffffffffff87811660448301529091169063dcb69fbb90606401600060405180830381600087803b158015610be757600080fd5b505af1158015610bfb573d6000803e3d6000fd5b50505050610c98565b6002546040517f8763e430000000000000000000000000000000000000000000000000000000008152600481018490526024810183905273ffffffffffffffffffffffffffffffffffffffff878116604483015290911690638763e43090606401600060405180830381600087803b158015610c7f57600080fd5b505af1158015610c93573d6000803e3d6000fd5b505050505b5050505050565b60005473ffffffffffffffffffffffffffffffffffffffff163314610d20576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610286565b73ffffffffffffffffffffffffffffffffffffffff8116610dc3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610286565b6000805460405173ffffffffffffffffffffffffffffffffffffffff808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b803573ffffffffffffffffffffffffffffffffffffffff81168114610e7457600080fd5b919050565b600060208284031215610e8b57600080fd5b610e9482610e50565b9392505050565b60008060408385031215610eae57600080fd5b610eb783610e50565b9150610ec560208401610e50565b90509250929050565b600080600060608486031215610ee357600080fd5b610eec84610e50565b95602085013595506040909401359392505050565b600060208284031215610f1357600080fd5b81518015158114610e9457600080fd5b600060208284031215610f3557600080fd5b815160ff81168114610e9457600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600060ff821660ff841680821015610f8f57610f8f610f46565b90039392505050565b600181815b80851115610ff157817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04821115610fd757610fd7610f46565b80851615610fe457918102915b93841c9390800290610f9d565b509250929050565b600082611008575060016110b4565b81611015575060006110b4565b816001811461102b576002811461103557611051565b60019150506110b4565b60ff84111561104657611046610f46565b50506001821b6110b4565b5060208310610133831016604e8410600b8410161715611074575081810a6110b4565b61107e8383610f98565b807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211156110b0576110b0610f46565b0290505b92915050565b6000610e948383610ff9565b6000826110fc577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b6000821982111561111457611114610f46565b50019056fea2646970667358221220dc30d757ecd01a3c918c53048423b765294db681d865ab56870da732732e544164736f6c634300080d0033";

export class RequiemFundDistributor__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<RequiemFundDistributor> {
    return super.deploy(overrides || {}) as Promise<RequiemFundDistributor>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): RequiemFundDistributor {
    return super.attach(address) as RequiemFundDistributor;
  }
  connect(signer: Signer): RequiemFundDistributor__factory {
    return super.connect(signer) as RequiemFundDistributor__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RequiemFundDistributorInterface {
    return new utils.Interface(_abi) as RequiemFundDistributorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RequiemFundDistributor {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as RequiemFundDistributor;
  }
}
