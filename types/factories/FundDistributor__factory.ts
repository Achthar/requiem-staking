/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  FundDistributor,
  FundDistributorInterface,
} from "../FundDistributor";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "FundRequested",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "requester",
        type: "address",
      },
    ],
    name: "RequesterAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "requester",
        type: "address",
      },
    ],
    name: "RequesterRemoved",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_requester",
        type: "address",
      },
    ],
    name: "addRequester",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "distributeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_reward",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "missingDecimals",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_requester",
        type: "address",
      },
    ],
    name: "removeRequester",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "requesters",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "reward",
    outputs: [
      {
        internalType: "contract IRewardToken",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner_",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50600080546001600160a01b0319163390811782556040519091907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3610e0f8061005f6000396000f3fe608060405234801561001057600080fd5b50600436106100be5760003560e01c8063c4d66de811610076578063d6f8307f1161005b578063d6f8307f14610185578063e4d609cc146101b8578063f2fde38b146101cb57600080fd5b8063c4d66de81461015f578063d66e57cd1461017257600080fd5b8063412831c4116100a7578063412831c414610122578063715018a6146101395780638da5cb5b1461014157600080fd5b80631107e77c146100c3578063228cb733146100d8575b600080fd5b6100d66100d1366004610baf565b6101de565b005b6001546100f89073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b61012b60025481565b604051908152602001610119565b6100d6610367565b60005473ffffffffffffffffffffffffffffffffffffffff166100f8565b6100d661016d366004610baf565b610457565b6100d6610180366004610bd1565b61068e565b6101a8610193366004610baf565b60036020526000908152604090205460ff1681565b6040519015158152602001610119565b6100d66101c6366004610baf565b61084d565b6100d66101d9366004610baf565b6109d5565b60005473ffffffffffffffffffffffffffffffffffffffff163314610264576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff811660009081526003602052604090205460ff166102f3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f726571756573746572206e6f7420666f756e6400000000000000000000000000604482015260640161025b565b73ffffffffffffffffffffffffffffffffffffffff811660008181526003602052604080822080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169055517ffac6f04e18535b820487cce1312e5a45366b7326f7e956a9c48d70fecdde87619190a250565b60005473ffffffffffffffffffffffffffffffffffffffff1633146103e8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161025b565b6000805460405173ffffffffffffffffffffffffffffffffffffffff909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080547fffffffffffffffffffffffff0000000000000000000000000000000000000000169055565b6000547501000000000000000000000000000000000000000000900460ff168061049c575060005474010000000000000000000000000000000000000000900460ff16155b610528576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a6564000000000000000000000000000000000000606482015260840161025b565b6000547501000000000000000000000000000000000000000000900460ff1615801561058f57600080547fffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffff1675010100000000000000000000000000000000000000001790555b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff8416908117909155604080517f313ce567000000000000000000000000000000000000000000000000000000008152905163313ce567916004808201926020929091908290030181865afa158015610626573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061064a9190610bfb565b610655906012610c4d565b60ff16600255801561068a57600080547fffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffffff1690555b5050565b3360009081526003602052604090205460ff16610707576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f4f6e6c7920706f6f6c2063616e2072657175657374207472616e736665720000604482015260640161025b565b73ffffffffffffffffffffffffffffffffffffffff8216610784576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f496e76616c696420616464726573730000000000000000000000000000000000604482015260640161025b565b801561068a5760015460025473ffffffffffffffffffffffffffffffffffffffff909116906340c10f199084906107bc90600a610d92565b6107c69085610d9e565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b16815273ffffffffffffffffffffffffffffffffffffffff90921660048301526024820152604401600060405180830381600087803b15801561083157600080fd5b505af1158015610845573d6000803e3d6000fd5b505050505050565b60005473ffffffffffffffffffffffffffffffffffffffff1633146108ce576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161025b565b73ffffffffffffffffffffffffffffffffffffffff811660009081526003602052604090205460ff161561095e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f7265717565737465722065786973746564000000000000000000000000000000604482015260640161025b565b73ffffffffffffffffffffffffffffffffffffffff811660008181526003602052604080822080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055517f1616bf4c0898e95cbe6407827ef9ba6f5887a571df69e07eeda76b2b2a4f7daf9190a250565b60005473ffffffffffffffffffffffffffffffffffffffff163314610a56576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161025b565b73ffffffffffffffffffffffffffffffffffffffff8116610af9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840161025b565b6000805460405173ffffffffffffffffffffffffffffffffffffffff808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b803573ffffffffffffffffffffffffffffffffffffffff81168114610baa57600080fd5b919050565b600060208284031215610bc157600080fd5b610bca82610b86565b9392505050565b60008060408385031215610be457600080fd5b610bed83610b86565b946020939093013593505050565b600060208284031215610c0d57600080fd5b815160ff81168114610bca57600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600060ff821660ff841680821015610c6757610c67610c1e565b90039392505050565b600181815b80851115610cc957817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04821115610caf57610caf610c1e565b80851615610cbc57918102915b93841c9390800290610c75565b509250929050565b600082610ce057506001610d8c565b81610ced57506000610d8c565b8160018114610d035760028114610d0d57610d29565b6001915050610d8c565b60ff841115610d1e57610d1e610c1e565b50506001821b610d8c565b5060208310610133831016604e8410600b8410161715610d4c575081810a610d8c565b610d568383610c70565b807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04821115610d8857610d88610c1e565b0290505b92915050565b6000610bca8383610cd1565b600082610dd4577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b50049056fea2646970667358221220faf043ec3b8d563f9ca43e7bf6b9f5d599cc87b5f4796c86d959fc4c5ac7c0bd64736f6c634300080d0033";

export class FundDistributor__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<FundDistributor> {
    return super.deploy(overrides || {}) as Promise<FundDistributor>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): FundDistributor {
    return super.attach(address) as FundDistributor;
  }
  connect(signer: Signer): FundDistributor__factory {
    return super.connect(signer) as FundDistributor__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FundDistributorInterface {
    return new utils.Interface(_abi) as FundDistributorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FundDistributor {
    return new Contract(address, _abi, signerOrProvider) as FundDistributor;
  }
}
