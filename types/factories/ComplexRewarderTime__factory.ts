/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ComplexRewarderTime,
  ComplexRewarderTimeInterface,
} from "../ComplexRewarderTime";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_rewardToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_rewardPerSecond",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_REQUIEM_CHEF",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [],
    name: "LogInit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "LogOnReward",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "allocPoint",
        type: "uint256",
      },
    ],
    name: "LogPoolAddition",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "rewardPerSecond",
        type: "uint256",
      },
    ],
    name: "LogRewardPerSecond",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "allocPoint",
        type: "uint256",
      },
    ],
    name: "LogSetPool",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "lastRewardTime",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "lpSupply",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "accRewardPerShare",
        type: "uint256",
      },
    ],
    name: "LogUpdatePool",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "allocPoint",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
    ],
    name: "add",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "pids",
        type: "uint256[]",
      },
    ],
    name: "massUpdatePools",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lpToken",
        type: "uint256",
      },
    ],
    name: "onReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "pendingToken",
    outputs: [
      {
        internalType: "uint256",
        name: "pending",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "pendingTokens",
    outputs: [
      {
        internalType: "contract IERC20[]",
        name: "rewardTokens",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "rewardAmounts",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "poolIds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "poolInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "accRewardPerShare",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastRewardTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "allocPoint",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "poolLength",
    outputs: [
      {
        internalType: "uint256",
        name: "pools",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardPerSecond",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_allocPoint",
        type: "uint256",
      },
    ],
    name: "set",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_rewardPerSecond",
        type: "uint256",
      },
    ],
    name: "setRewardPerSecond",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner_",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
    ],
    name: "updatePool",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "accRewardPerShare",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastRewardTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "allocPoint",
            type: "uint256",
          },
        ],
        internalType: "struct ComplexRewarderTime.PoolInfo",
        name: "pool",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rewardDebt",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516200178438038062001784833981016040819052610031916100bf565b600080546001600160a01b0319163390811782556040519091907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3600180546001600160a01b039485166001600160a01b03199182161790915560069290925560078054919093169116179055610102565b6001600160a01b03811681146100bc57600080fd5b50565b6000806000606084860312156100d457600080fd5b83516100df816100a7565b6020850151604086015191945092506100f7816100a7565b809150509250925092565b61167280620001126000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c806369883b4e116100975780638f10369a116100665780638f10369a1461025157806393f1a40b1461025a578063d63b3c49146102a1578063f2fde38b146102c257600080fd5b806369883b4e146101fb578063715018a61461020e578063771602f7146102165780638da5cb5b1461022957600080fd5b806348e43af4116100d357806348e43af41461018d57806351eb05a6146101a057806357a5b58c146101d557806366da5815146101e857600080fd5b8063081e3eda146101055780631526fe271461011c5780631ab06ee51461016557806344af0fa71461017a575b600080fd5b6003545b6040519081526020015b60405180910390f35b61014a61012a366004611228565b600260208190526000918252604090912080546001820154919092015483565b60408051938452602084019290925290820152606001610113565b610178610173366004611241565b6102d5565b005b610178610188366004611288565b6103dd565b61010961019b3660046112da565b61059d565b6101b36101ae366004611228565b6107c6565b6040805182518152602080840151908201529181015190820152606001610113565b6101786101e336600461130a565b610a39565b6101786101f6366004611228565b610a7d565b610109610209366004611228565b610b39565b610178610b5a565b610178610224366004611241565b610c4a565b60005460405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610113565b61010960065481565b61028c6102683660046112da565b60046020908152600092835260408084209091529082529020805460019091015482565b60408051928352602083019190915201610113565b6102b46102af36600461137f565b610e11565b6040516101139291906113b7565b6101786102d0366004611448565b610ee3565b60005473ffffffffffffffffffffffffffffffffffffffff16331461035b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b60008281526002602081905260409091200154600554829161037c9161149b565b61038691906114b2565b600555600082815260026020819052604091829020018290555182907f942cc7e17a17c164bd977f32ab8c54265d5b9d481e4e352bf874f1e568874e7c906103d19084815260200190565b60405180910390a25050565b60075473ffffffffffffffffffffffffffffffffffffffff163314610484576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602160248201527f4f6e6c79204d4356322063616e2063616c6c20746869732066756e6374696f6e60448201527f2e000000000000000000000000000000000000000000000000000000000000006064820152608401610352565b600061048f866107c6565b600087815260046020908152604080832073ffffffffffffffffffffffffffffffffffffffff8a16845290915281208054929350911561051d5760018201548351835464e8d4a51000916104e2916114ca565b6104ec9190611507565b6104f6919061149b565b60015490915061051d9073ffffffffffffffffffffffffffffffffffffffff168783611094565b838255825164e8d4a510009061053390866114ca565b61053d9190611507565b600183015560405181815273ffffffffffffffffffffffffffffffffffffffff808816918a918a16907f2ece88ca2bc08dd018db50e1d25a20bf1241e5fab1c396caa51f01a54bd2f75b9060200160405180910390a45050505050505050565b600082815260026020818152604080842081516060810183528154815260018201548185015293015483820152858452600480835281852073ffffffffffffffffffffffffffffffffffffffff87811687529352818520845160075493517f78ed5d1f0000000000000000000000000000000000000000000000000000000081529283018990529093909286929116906378ed5d1f90602401602060405180830381865afa158015610653573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106779190611542565b6007546040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff91821660048201529116906370a0823190602401602060405180830381865afa1580156106e6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061070a919061155f565b905083602001514211801561071e57508015155b1561078e576000846020015142610735919061149b565b9050600060055486604001516006548461074f91906114ca565b61075991906114ca565b6107639190611507565b90508261077564e8d4a51000836114ca565b61077f9190611507565b61078990856114b2565b935050505b6001830154835464e8d4a51000906107a79085906114ca565b6107b19190611507565b6107bb919061149b565b979650505050505050565b6107ea60405180606001604052806000815260200160008152602001600081525090565b5060008181526002602081815260409283902083516060810185528154815260018201549281018390529201549282019290925290421115610a34576007546040517f78ed5d1f0000000000000000000000000000000000000000000000000000000081526004810184905260009173ffffffffffffffffffffffffffffffffffffffff16906378ed5d1f90602401602060405180830381865afa158015610896573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108ba9190611542565b6007546040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff91821660048201529116906370a0823190602401602060405180830381865afa158015610929573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061094d919061155f565b905080156109c2576000826020015142610967919061149b565b9050600060055484604001516006548461098191906114ca565b61098b91906114ca565b6109959190611507565b9050826109a764e8d4a51000836114ca565b6109b19190611507565b84516109bd91906114b2565b845250505b426020838101918252600085815260028083526040918290208651808255945160018201819055838801519190920155815190815291820184905281019190915283907fcb7325664a4a3b7c7223eefc492a97ca4fdf94d46884621e5a8fae5a04b2b9d29060600160405180910390a2505b919050565b8060005b81811015610a7757610a66848483818110610a5a57610a5a611578565b905060200201356107c6565b50610a70816115a7565b9050610a3d565b50505050565b60005473ffffffffffffffffffffffffffffffffffffffff163314610afe576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610352565b60068190556040518181527fde89cb17ac7f58f94792b3e91e086ed85403819c24ceea882491f960ccb1a2789060200160405180910390a150565b60038181548110610b4957600080fd5b600091825260209091200154905081565b60005473ffffffffffffffffffffffffffffffffffffffff163314610bdb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610352565b6000805460405173ffffffffffffffffffffffffffffffffffffffff909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080547fffffffffffffffffffffffff0000000000000000000000000000000000000000169055565b60005473ffffffffffffffffffffffffffffffffffffffff163314610ccb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610352565b60008181526002602052604090206001015415610d44576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f506f6f6c20616c726561647920657869737473000000000000000000000000006044820152606401610352565b60004290508260056000828254610d5b91906114b2565b909155505060408051606081018252600080825260208083018581528385018881528784526002928390528584209451855590516001808601919091559051939091019290925560038054928301815590527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b018390555182907f38410508059921573ab9ebdca2a5034be738d236366b8f32de4434ea95ed3c8190610e049086815260200190565b60405180910390a2505050565b6040805160018082528183019092526060918291600091602080830190803683375050600154825192935073ffffffffffffffffffffffffffffffffffffffff1691839150600090610e6557610e65611578565b73ffffffffffffffffffffffffffffffffffffffff9290921660209283029190910190910152604080516001808252818301909252600091816020016020820280368337019050509050610eb9878761059d565b81600081518110610ecc57610ecc611578565b602090810291909101015290969095509350505050565b60005473ffffffffffffffffffffffffffffffffffffffff163314610f64576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610352565b73ffffffffffffffffffffffffffffffffffffffff8116611007576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610352565b6000805460405173ffffffffffffffffffffffffffffffffffffffff808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b6040805173ffffffffffffffffffffffffffffffffffffffff8416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb00000000000000000000000000000000000000000000000000000000179052611121908490611126565b505050565b6000808373ffffffffffffffffffffffffffffffffffffffff168360405161114e91906115df565b6000604051808303816000865af19150503d806000811461118b576040519150601f19603f3d011682016040523d82523d6000602084013e611190565b606091505b509092509050816111a5573d6000803e3d6000fd5b805115806111c25750808060200190518101906111c2919061161a565b610a77576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f534146455f45524332305f43414c4c5f4641494c4544000000000000000000006044820152606401610352565b60006020828403121561123a57600080fd5b5035919050565b6000806040838503121561125457600080fd5b50508035926020909101359150565b73ffffffffffffffffffffffffffffffffffffffff8116811461128557600080fd5b50565b600080600080600060a086880312156112a057600080fd5b8535945060208601356112b281611263565b935060408601356112c281611263565b94979396509394606081013594506080013592915050565b600080604083850312156112ed57600080fd5b8235915060208301356112ff81611263565b809150509250929050565b6000806020838503121561131d57600080fd5b823567ffffffffffffffff8082111561133557600080fd5b818501915085601f83011261134957600080fd5b81358181111561135857600080fd5b8660208260051b850101111561136d57600080fd5b60209290920196919550909350505050565b60008060006060848603121561139457600080fd5b8335925060208401356113a681611263565b929592945050506040919091013590565b604080825283519082018190526000906020906060840190828701845b8281101561140657815173ffffffffffffffffffffffffffffffffffffffff16845292840192908401906001016113d4565b5050508381038285015284518082528583019183019060005b8181101561143b5783518352928401929184019160010161141f565b5090979650505050505050565b60006020828403121561145a57600080fd5b813561146581611263565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000828210156114ad576114ad61146c565b500390565b600082198211156114c5576114c561146c565b500190565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156115025761150261146c565b500290565b60008261153d577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b60006020828403121561155457600080fd5b815161146581611263565b60006020828403121561157157600080fd5b5051919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036115d8576115d861146c565b5060010190565b6000825160005b8181101561160057602081860181015185830152016115e6565b8181111561160f576000828501525b509190910192915050565b60006020828403121561162c57600080fd5b8151801515811461146557600080fdfea26469706673582212204a8fe0c35dbaf4d0cee1a08ffc157f5911b5604ded3f9f007c924029f1d245c464736f6c634300080d0033";

export class ComplexRewarderTime__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _rewardToken: string,
    _rewardPerSecond: BigNumberish,
    _REQUIEM_CHEF: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ComplexRewarderTime> {
    return super.deploy(
      _rewardToken,
      _rewardPerSecond,
      _REQUIEM_CHEF,
      overrides || {}
    ) as Promise<ComplexRewarderTime>;
  }
  getDeployTransaction(
    _rewardToken: string,
    _rewardPerSecond: BigNumberish,
    _REQUIEM_CHEF: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _rewardToken,
      _rewardPerSecond,
      _REQUIEM_CHEF,
      overrides || {}
    );
  }
  attach(address: string): ComplexRewarderTime {
    return super.attach(address) as ComplexRewarderTime;
  }
  connect(signer: Signer): ComplexRewarderTime__factory {
    return super.connect(signer) as ComplexRewarderTime__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ComplexRewarderTimeInterface {
    return new utils.Interface(_abi) as ComplexRewarderTimeInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ComplexRewarderTime {
    return new Contract(address, _abi, signerOrProvider) as ComplexRewarderTime;
  }
}
