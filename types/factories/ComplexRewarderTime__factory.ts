/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ComplexRewarderTime,
  ComplexRewarderTimeInterface,
} from "../ComplexRewarderTime";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_rewardToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_rewardPerSecond",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_REQUIEM_CHEF",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [],
    name: "LogInit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "LogOnReward",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "allocPoint",
        type: "uint256",
      },
    ],
    name: "LogPoolAddition",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "rewardPerSecond",
        type: "uint256",
      },
    ],
    name: "LogRewardPerSecond",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "allocPoint",
        type: "uint256",
      },
    ],
    name: "LogSetPool",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "lastRewardTime",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "lpSupply",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "accRewardPerShare",
        type: "uint256",
      },
    ],
    name: "LogUpdatePool",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "allocPoint",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
    ],
    name: "add",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "pids",
        type: "uint256[]",
      },
    ],
    name: "massUpdatePools",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lpToken",
        type: "uint256",
      },
    ],
    name: "onReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "pendingToken",
    outputs: [
      {
        internalType: "uint256",
        name: "pending",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "pendingTokens",
    outputs: [
      {
        internalType: "contract IERC20[]",
        name: "rewardTokens",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "rewardAmounts",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "poolIds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "poolInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "accRewardPerShare",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastRewardTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "allocPoint",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "poolLength",
    outputs: [
      {
        internalType: "uint256",
        name: "pools",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardPerSecond",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_allocPoint",
        type: "uint256",
      },
    ],
    name: "set",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_rewardPerSecond",
        type: "uint256",
      },
    ],
    name: "setRewardPerSecond",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner_",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
    ],
    name: "updatePool",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "accRewardPerShare",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastRewardTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "allocPoint",
            type: "uint256",
          },
        ],
        internalType: "struct ComplexRewarderTime.PoolInfo",
        name: "pool",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rewardDebt",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161148338038061148383398101604081905261002f916100bd565b600080546001600160a01b0319163390811782556040519091907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3600180546001600160a01b039485166001600160a01b03199182161790915560069290925560078054919093169116179055610100565b6001600160a01b03811681146100ba57600080fd5b50565b6000806000606084860312156100d257600080fd5b83516100dd816100a5565b6020850151604086015191945092506100f5816100a5565b809150509250925092565b6113748061010f6000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c806369883b4e116100975780638f10369a116100665780638f10369a1461024457806393f1a40b1461024d578063d63b3c4914610294578063f2fde38b146102b557600080fd5b806369883b4e146101fb578063715018a61461020e578063771602f7146102165780638da5cb5b1461022957600080fd5b806348e43af4116100d357806348e43af41461018d57806351eb05a6146101a057806357a5b58c146101d557806366da5815146101e857600080fd5b8063081e3eda146101055780631526fe271461011c5780631ab06ee51461016557806344af0fa71461017a575b600080fd5b6003545b6040519081526020015b60405180910390f35b61014a61012a366004610fca565b600260208190526000918252604090912080546001820154919092015483565b60408051938452602084019290925290820152606001610113565b610178610173366004610fe3565b6102c8565b005b61017861018836600461101d565b6103a9565b61010961019b36600461106f565b61051b565b6101b36101ae366004610fca565b6106f8565b6040805182518152602080840151908201529181015190820152606001610113565b6101786101e336600461109f565b61091f565b6101786101f6366004610fca565b610963565b610109610209366004610fca565b6109f8565b610178610a19565b610178610224366004610fe3565b610aca565b6000546040516001600160a01b039091168152602001610113565b61010960065481565b61027f61025b36600461106f565b60046020908152600092835260408084209091529082529020805460019091015482565b60408051928352602083019190915201610113565b6102a76102a2366004611114565b610c50565b60405161011392919061114c565b6101786102c33660046111d0565b610d08565b6000546001600160a01b031633146103275760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b6000828152600260208190526040909120015460055482916103489161120a565b6103529190611221565b600555600082815260026020819052604091829020018290555182907f942cc7e17a17c164bd977f32ab8c54265d5b9d481e4e352bf874f1e568874e7c9061039d9084815260200190565b60405180910390a25050565b6007546001600160a01b031633146104295760405162461bcd60e51b815260206004820152602160248201527f4f6e6c79204d4356322063616e2063616c6c20746869732066756e6374696f6e60448201527f2e00000000000000000000000000000000000000000000000000000000000000606482015260840161031e565b6000610434866106f8565b60008781526004602090815260408083206001600160a01b038a1684529091528120805492935091156104a85760018201548351835464e8d4a510009161047a91611239565b6104849190611258565b61048e919061120a565b6001549091506104a8906001600160a01b03168783610e46565b838255825164e8d4a51000906104be9086611239565b6104c89190611258565b60018301556040518181526001600160a01b03808816918a918a16907f2ece88ca2bc08dd018db50e1d25a20bf1241e5fab1c396caa51f01a54bd2f75b9060200160405180910390a45050505050505050565b60008281526002602081815260408084208151606081018352815481526001820154818501529301548382015285845260048083528185206001600160a01b0387811687529352818520845160075493516378ed5d1f60e01b81529283018990529093909286929116906378ed5d1f90602401602060405180830381865afa1580156105ab573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105cf919061127a565b6007546040516370a0823160e01b81526001600160a01b0391821660048201529116906370a0823190602401602060405180830381865afa158015610618573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061063c9190611297565b905083602001514211801561065057508015155b156106c0576000846020015142610667919061120a565b905060006005548660400151600654846106819190611239565b61068b9190611239565b6106959190611258565b9050826106a764e8d4a5100083611239565b6106b19190611258565b6106bb9085611221565b935050505b6001830154835464e8d4a51000906106d9908590611239565b6106e39190611258565b6106ed919061120a565b979650505050505050565b61071c60405180606001604052806000815260200160008152602001600081525090565b506000818152600260208181526040928390208351606081018552815481526001820154928101839052920154928201929092529042111561091a576007546040516378ed5d1f60e01b8152600481018490526000916001600160a01b0316906378ed5d1f90602401602060405180830381865afa1580156107a2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107c6919061127a565b6007546040516370a0823160e01b81526001600160a01b0391821660048201529116906370a0823190602401602060405180830381865afa15801561080f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108339190611297565b905080156108a857600082602001514261084d919061120a565b905060006005548460400151600654846108679190611239565b6108719190611239565b61087b9190611258565b90508261088d64e8d4a5100083611239565b6108979190611258565b84516108a39190611221565b845250505b426020838101918252600085815260028083526040918290208651808255945160018201819055838801519190920155815190815291820184905281019190915283907fcb7325664a4a3b7c7223eefc492a97ca4fdf94d46884621e5a8fae5a04b2b9d29060600160405180910390a2505b919050565b8060005b8181101561095d5761094c848483818110610940576109406112b0565b905060200201356106f8565b50610956816112c6565b9050610923565b50505050565b6000546001600160a01b031633146109bd5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161031e565b60068190556040518181527fde89cb17ac7f58f94792b3e91e086ed85403819c24ceea882491f960ccb1a2789060200160405180910390a150565b60038181548110610a0857600080fd5b600091825260209091200154905081565b6000546001600160a01b03163314610a735760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161031e565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a36000805473ffffffffffffffffffffffffffffffffffffffff19169055565b6000546001600160a01b03163314610b245760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161031e565b60008181526002602052604090206001015415610b835760405162461bcd60e51b815260206004820152601360248201527f506f6f6c20616c72656164792065786973747300000000000000000000000000604482015260640161031e565b60004290508260056000828254610b9a9190611221565b909155505060408051606081018252600080825260208083018581528385018881528784526002928390528584209451855590516001808601919091559051939091019290925560038054928301815590527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b018390555182907f38410508059921573ab9ebdca2a5034be738d236366b8f32de4434ea95ed3c8190610c439086815260200190565b60405180910390a2505050565b604080516001808252818301909252606091829160009160208083019080368337505060015482519293506001600160a01b031691839150600090610c9757610c976112b0565b6001600160a01b039290921660209283029190910190910152604080516001808252818301909252600091816020016020820280368337019050509050610cde878761051b565b81600081518110610cf157610cf16112b0565b602090810291909101015290969095509350505050565b6000546001600160a01b03163314610d625760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161031e565b6001600160a01b038116610dde5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840161031e565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb00000000000000000000000000000000000000000000000000000000179052610ec6908490610ecb565b505050565b600080836001600160a01b031683604051610ee691906112e1565b6000604051808303816000865af19150503d8060008114610f23576040519150601f19603f3d011682016040523d82523d6000602084013e610f28565b606091505b50915091506000821415610f40573d6000803e3d6000fd5b61095d815160001480610f62575081806020019051810190610f62919061131c565b6101a281610f7357610f7381610f77565b5050565b62461bcd60e51b6000908152602060045260076024526652455123000030600a808404818106603090810160081b95839006959095019082900491820690940160101b939093010160c81b604452606490fd5b600060208284031215610fdc57600080fd5b5035919050565b60008060408385031215610ff657600080fd5b50508035926020909101359150565b6001600160a01b038116811461101a57600080fd5b50565b600080600080600060a0868803121561103557600080fd5b85359450602086013561104781611005565b9350604086013561105781611005565b94979396509394606081013594506080013592915050565b6000806040838503121561108257600080fd5b82359150602083013561109481611005565b809150509250929050565b600080602083850312156110b257600080fd5b823567ffffffffffffffff808211156110ca57600080fd5b818501915085601f8301126110de57600080fd5b8135818111156110ed57600080fd5b8660208260051b850101111561110257600080fd5b60209290920196919550909350505050565b60008060006060848603121561112957600080fd5b83359250602084013561113b81611005565b929592945050506040919091013590565b604080825283519082018190526000906020906060840190828701845b8281101561118e5781516001600160a01b031684529284019290840190600101611169565b5050508381038285015284518082528583019183019060005b818110156111c3578351835292840192918401916001016111a7565b5090979650505050505050565b6000602082840312156111e257600080fd5b81356111ed81611005565b9392505050565b634e487b7160e01b600052601160045260246000fd5b60008282101561121c5761121c6111f4565b500390565b60008219821115611234576112346111f4565b500190565b6000816000190483118215151615611253576112536111f4565b500290565b60008261127557634e487b7160e01b600052601260045260246000fd5b500490565b60006020828403121561128c57600080fd5b81516111ed81611005565b6000602082840312156112a957600080fd5b5051919050565b634e487b7160e01b600052603260045260246000fd5b60006000198214156112da576112da6111f4565b5060010190565b6000825160005b8181101561130257602081860181015185830152016112e8565b81811115611311576000828501525b509190910192915050565b60006020828403121561132e57600080fd5b815180151581146111ed57600080fdfea26469706673582212203f8fe573f29fba31eda4ee782cc28417664a9509a17da6ad1776886d95a57bc164736f6c634300080b0033";

export class ComplexRewarderTime__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _rewardToken: string,
    _rewardPerSecond: BigNumberish,
    _REQUIEM_CHEF: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ComplexRewarderTime> {
    return super.deploy(
      _rewardToken,
      _rewardPerSecond,
      _REQUIEM_CHEF,
      overrides || {}
    ) as Promise<ComplexRewarderTime>;
  }
  getDeployTransaction(
    _rewardToken: string,
    _rewardPerSecond: BigNumberish,
    _REQUIEM_CHEF: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _rewardToken,
      _rewardPerSecond,
      _REQUIEM_CHEF,
      overrides || {}
    );
  }
  attach(address: string): ComplexRewarderTime {
    return super.attach(address) as ComplexRewarderTime;
  }
  connect(signer: Signer): ComplexRewarderTime__factory {
    return super.connect(signer) as ComplexRewarderTime__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ComplexRewarderTimeInterface {
    return new utils.Interface(_abi) as ComplexRewarderTimeInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ComplexRewarderTime {
    return new Contract(address, _abi, signerOrProvider) as ComplexRewarderTime;
  }
}
