/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { StakingHelper, StakingHelperInterface } from "../StakingHelper";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_staking",
        type: "address",
      },
      {
        internalType: "address",
        name: "_REQT",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "REQT",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "stake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "staking",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60c060405234801561001057600080fd5b506040516104fd3803806104fd83398101604081905261002f91610089565b6001600160a01b03821661004257600080fd5b6001600160a01b03808316608052811661005b57600080fd5b6001600160a01b031660a052506100bc565b80516001600160a01b038116811461008457600080fd5b919050565b6000806040838503121561009c57600080fd5b6100a58361006d565b91506100b36020840161006d565b90509250929050565b60805160a0516103fb61010260003960008181604b0152818161010001526101d5015260008181608e015281816101a601528181610278015261031c01526103fb6000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806302bb41e5146100465780634cf088d914610089578063a694fc3a146100b0575b600080fd5b61006d7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200160405180910390f35b61006d7f000000000000000000000000000000000000000000000000000000000000000081565b6100c36100be366004610383565b6100c5565b005b6040517f23b872dd000000000000000000000000000000000000000000000000000000008152336004820152306024820152604481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906323b872dd906064016020604051808303816000875af1158015610151573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610175919061039c565b506040517f095ea7b30000000000000000000000000000000000000000000000000000000081526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152602482018390527f0000000000000000000000000000000000000000000000000000000000000000169063095ea7b3906044016020604051808303816000875af115801561021e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610242919061039c565b506040517f7acb7757000000000000000000000000000000000000000000000000000000008152600481018290523360248201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690637acb7757906044016020604051808303816000875af11580156102c9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102ed919061039c565b506040517f1e83409a0000000000000000000000000000000000000000000000000000000081523360048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690631e83409a90602401600060405180830381600087803b15801561036857600080fd5b505af115801561037c573d6000803e3d6000fd5b5050505050565b60006020828403121561039557600080fd5b5035919050565b6000602082840312156103ae57600080fd5b815180151581146103be57600080fd5b939250505056fea2646970667358221220dec4ac96b10d855f1f84efb46478679302ff4b7ecaadd4079e9584a7783db8ea64736f6c634300080b0033";

export class StakingHelper__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _staking: string,
    _REQT: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<StakingHelper> {
    return super.deploy(
      _staking,
      _REQT,
      overrides || {}
    ) as Promise<StakingHelper>;
  }
  getDeployTransaction(
    _staking: string,
    _REQT: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_staking, _REQT, overrides || {});
  }
  attach(address: string): StakingHelper {
    return super.attach(address) as StakingHelper;
  }
  connect(signer: Signer): StakingHelper__factory {
    return super.connect(signer) as StakingHelper__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StakingHelperInterface {
    return new utils.Interface(_abi) as StakingHelperInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): StakingHelper {
    return new Contract(address, _abi, signerOrProvider) as StakingHelper;
  }
}
