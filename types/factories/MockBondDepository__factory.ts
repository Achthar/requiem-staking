/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MockBondDepository,
  MockBondDepositoryInterface,
} from "../MockBondDepository";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_REQT",
        type: "address",
      },
      {
        internalType: "address",
        name: "_principle",
        type: "address",
      },
      {
        internalType: "address",
        name: "_treasury",
        type: "address",
      },
      {
        internalType: "address",
        name: "_DAO",
        type: "address",
      },
      {
        internalType: "address",
        name: "_bondCalculator",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "deposit",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "payout",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "expires",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "priceInUSD",
        type: "uint256",
      },
    ],
    name: "BondCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "priceInUSD",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "internalPrice",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "debtRatio",
        type: "uint256",
      },
    ],
    name: "BondPriceChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "payout",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "remaining",
        type: "uint256",
      },
    ],
    name: "BondRedeemed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "initialBCV",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newBCV",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "adjustment",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "addition",
        type: "bool",
      },
    ],
    name: "ControlVariableAdjustment",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipPulled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipPushed",
    type: "event",
  },
  {
    inputs: [],
    name: "DAO",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "REQT",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "adjustment",
    outputs: [
      {
        internalType: "bool",
        name: "add",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "rate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "target",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "buffer",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastBlock",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "bondCalculator",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "bondInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "payout",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "vesting",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "pricePaid",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "bondPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "price_",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "bondPriceInUSD",
    outputs: [
      {
        internalType: "uint256",
        name: "price_",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "currentDebt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "debtDecay",
    outputs: [
      {
        internalType: "uint256",
        name: "decay_",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "debtRatio",
    outputs: [
      {
        internalType: "uint256",
        name: "debtRatio_",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_maxPrice",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_depositor",
        type: "address",
      },
    ],
    name: "deposit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_controlVariable",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_vestingTerm",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_minimumPrice",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_maxPayout",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_maxDebt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_initialDebt",
        type: "uint256",
      },
    ],
    name: "initializeBondTerms",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "isLiquidityBond",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastDecay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxPayout",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "payoutFor",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_depositor",
        type: "address",
      },
    ],
    name: "pendingPayoutFor",
    outputs: [
      {
        internalType: "uint256",
        name: "pendingPayout_",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_depositor",
        type: "address",
      },
    ],
    name: "percentVestedFor",
    outputs: [
      {
        internalType: "uint256",
        name: "percentVested_",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "policy",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "principle",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pullManagement",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner_",
        type: "address",
      },
    ],
    name: "pushManagement",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    name: "recoverLostToken",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_stake",
        type: "bool",
      },
    ],
    name: "redeem",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceManagement",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_addition",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "_increment",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_target",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_buffer",
        type: "uint256",
      },
    ],
    name: "setAdjustment",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum MockBondDepository.PARAMETER",
        name: "_parameter",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "_input",
        type: "uint256",
      },
    ],
    name: "setBondTerms",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_staking",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_helper",
        type: "bool",
      },
    ],
    name: "setStaking",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "staking",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "stakingHelper",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "standardizedDebtRatio",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "terms",
    outputs: [
      {
        internalType: "uint256",
        name: "controlVariable",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "vestingTerm",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minimumPrice",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxPayout",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxDebt",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalDebt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "treasury",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "useHelper",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6101406040523480156200001257600080fd5b5060405162002e0038038062002e00833981016040819052620000359162000118565b600080546001600160a01b0319163390811782556040519091907fea8258f2d9ddb679928cf34b78cf645b7feda9acc828e4dd82d014eaae270eba908290a36001600160a01b0385166200008857600080fd5b6001600160a01b038086166080528416620000a257600080fd5b6001600160a01b0380851660a0528316620000bc57600080fd5b6001600160a01b0380841660c0528216620000d657600080fd5b6001600160a01b0391821660e052166101208190521515610100525062000188915050565b80516001600160a01b03811681146200011357600080fd5b919050565b600080600080600060a086880312156200013157600080fd5b6200013c86620000fb565b94506200014c60208701620000fb565b93506200015c60408701620000fb565b92506200016c60608701620000fb565b91506200017c60808701620000fb565b90509295509295909350565b60805160a05160c05160e0516101005161012051612b80620002806000396000818161049c0152818161102301526117fc01526000818161057e01528181610fb5015261178b0152600081816104620152818161162b01526119290152600081816103d7015281816112da01528181611485015261158801526000818161024b01528181610ff0015281816110a8015281816112a801528181611446015281816114b401528181611559015281816117c601526118bb0152600081816102b0015281816116090152818161187d015281816119bc01528181611bc701528181611d9901528181611e470152611f4b0152612b806000f3fe608060405234801561001057600080fd5b50600436106102415760003560e01c806377b8189511610145578063cea55f57116100bd578063d7ccfb0b1161008c578063e392a26211610071578063e392a262146105b0578063f5c2ab5b146105b8578063fc7b9c18146105c157600080fd5b8063d7ccfb0b146105a0578063e0176de8146105a857600080fd5b8063cea55f5714610513578063d4d863ce1461051b578063d50256251461052e578063d79690601461057957600080fd5b8063904b3ece11610114578063b4abccba116100f9578063b4abccba14610484578063c5332b7c14610497578063cd1234b3146104be57600080fd5b8063904b3ece1461045557806398fabd3a1461045d57600080fd5b806377b81895146104145780637927ebf814610427578063844b5c7c1461043a5780638dbdbe6d1461044257600080fd5b80632f3f470a116101d8578063507930ec116101a757806361d027b31161018c57806361d027b3146103d257806371535008146103f9578063759076e51461040c57600080fd5b8063507930ec146103b75780635a96ac0a146103ca57600080fd5b80632f3f470a14610326578063451ee4a11461034a57806346f68ee9146103915780634cf088d9146103a457600080fd5b8063089208d811610214578063089208d8146102e35780631a3d0068146102ed5780631e321a0f146103005780631feed31f1461031357600080fd5b8063016a42841461024657806301b88ee81461028a57806302bb41e5146102ab5780630505c8c9146102d2575b600080fd5b61026d7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b61029d610298366004612782565b6105ca565b604051908152602001610281565b61026d7f000000000000000000000000000000000000000000000000000000000000000081565b6000546001600160a01b031661026d565b6102eb610623565b005b6102eb6102fb3660046127ab565b6106d9565b6102eb61030e3660046127e6565b6107e3565b61029d610321366004612816565b6109d8565b60035461033a90600160a01b900460ff1681565b6040519015158152602001610281565b600a54600b54600c54600d54600e546103679460ff169392919085565b6040805195151586526020860194909452928401919091526060830152608082015260a001610281565b6102eb61039f366004612782565b610bc2565b60025461026d906001600160a01b031681565b61029d6103c5366004612782565b610d00565b6102eb610d86565b61026d7f000000000000000000000000000000000000000000000000000000000000000081565b6102eb61040736600461284d565b610e74565b61029d610f70565b60035461026d906001600160a01b031681565b61029d610435366004612899565b610f8b565b61029d610fb1565b61029d6104503660046128b2565b611136565b61029d611787565b61026d7f000000000000000000000000000000000000000000000000000000000000000081565b61033a610492366004612782565b611879565b61026d7f000000000000000000000000000000000000000000000000000000000000000081565b6104f36104cc366004612782565b600f6020526000908152604090208054600182015460028301546003909301549192909184565b604080519485526020850193909352918301526060820152608001610281565b61029d6119b7565b6102eb610529366004612816565b611a6c565b60045460055460065460075460085460095461054c95949392919086565b604080519687526020870195909552938501929092526060840152608083015260a082015260c001610281565b61033a7f000000000000000000000000000000000000000000000000000000000000000081565b61029d611b74565b61029d611bb3565b61029d611c47565b61029d60115481565b61029d60105481565b6000806105d683610d00565b6001600160a01b0384166000908152600f602052604090205490915061271082106106035780925061061c565b6106196127106106138385611c8c565b90611d2a565b92505b5050919050565b6000546001600160a01b031633146106825760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b600080546040516001600160a01b03909116907fea8258f2d9ddb679928cf34b78cf645b7feda9acc828e4dd82d014eaae270eba908390a36000805473ffffffffffffffffffffffffffffffffffffffff19169055565b6000546001600160a01b031633146107335760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610679565b600454610749906103e890610613906019611c8c565b8311156107985760405162461bcd60e51b815260206004820152601360248201527f496e6372656d656e7420746f6f206c61726765000000000000000000000000006044820152606401610679565b6040805160a0810182529415158086526020860185905290850183905260608501829052436080909501859052600a805460ff19169091179055600b92909255600c55600d55600e55565b6000546001600160a01b0316331461083d5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610679565b6000826003811115610851576108516128e7565b036108d3576127108110156108cd5760405162461bcd60e51b8152602060048201526024808201527f56657374696e67206d757374206265206c6f6e676572207468616e203336206860448201527f6f757273000000000000000000000000000000000000000000000000000000006064820152608401610679565b60055550565b60018260038111156108e7576108e76128e7565b03610944576103e881111561093e5760405162461bcd60e51b815260206004820181905260248201527f5061796f75742063616e6e6f742062652061626f766520312070657263656e746044820152606401610679565b60075550565b6002826003811115610958576109586128e7565b036109b5576127108111156109af5760405162461bcd60e51b815260206004820152601c60248201527f44414f206665652063616e6e6f7420657863656564207061796f7574000000006044820152606401610679565b60085550565b60038260038111156109c9576109c96128e7565b036109d45760098190555b5050565b6001600160a01b0382166000908152600f6020908152604080832081516080810183528154815260018201549381019390935260028101549183019190915260030154606082015281610a2a85610d00565b90506127108110610abc576001600160a01b0385166000818152600f60205260408082208281556001810183905560028101839055600301829055845190517f51c99f515c87b0d95ba97f616edd182e8f161c4932eac17c6fefe9dab58b77b192610a9c928252602082015260400190565b60405180910390a2610ab385858460000151611d6c565b92505050610bbc565b8151600090610ad390612710906106139085611c8c565b90506040518060800160405280610af783866000015161203b90919063ffffffff16565b8152602001610b21610b1686604001514361203b90919063ffffffff16565b60208701519061203b565b8152436020808301919091526060868101516040938401526001600160a01b038a166000818152600f8452849020855180825586850151600183015586860151600283015595909201516003909201919091558251858152918201939093527f51c99f515c87b0d95ba97f616edd182e8f161c4932eac17c6fefe9dab58b77b1910160405180910390a2610bb6868683611d6c565b93505050505b92915050565b6000546001600160a01b03163314610c1c5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610679565b6001600160a01b038116610c985760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610679565b600080546040516001600160a01b03808516939216917fea8258f2d9ddb679928cf34b78cf645b7feda9acc828e4dd82d014eaae270eba91a36001805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b6001600160a01b0381166000908152600f6020908152604080832081516080810183528154815260018201549381019390935260028101549183018290526003015460608301528290610d5490439061203b565b60208301519091508015610d7957610d728161061384612710611c8c565b9350610d7e565b600093505b505050919050565b6001546001600160a01b03163314610e065760405162461bcd60e51b815260206004820152602260248201527f4f776e61626c653a206d757374206265206e6577206f776e657220746f20707560448201527f6c6c0000000000000000000000000000000000000000000000000000000000006064820152608401610679565b600154600080546040516001600160a01b0393841693909116917faa151555690c956fc3ea32f106bb9f119b5237a061eaa8557cff3e51e3792c8d91a36001546000805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b03909216919091179055565b6000546001600160a01b03163314610ece5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610679565b60045415610f1e5760405162461bcd60e51b815260206004820181905260248201527f426f6e6473206d75737420626520696e697469616c697a65642066726f6d20306044820152606401610679565b6040805160c08101825288815260208101889052908101869052606081018590526080810184905260a00182905260049690965560059490945560069290925560075560085560095560105543601155565b6000610f86610f7d611c47565b6010549061203b565b905090565b6000610bbc662386f26fc10000610613610fac85610fa7611b74565b61207d565b6121dd565b60007f00000000000000000000000000000000000000000000000000000000000000001561109e576040516332da80a360e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152610f8691606491610613917f0000000000000000000000000000000000000000000000000000000000000000909116906332da80a390602401602060405180830381865afa15801561106c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061109091906128fd565b611098611b74565b90611c8c565b610f8660646106137f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015611104573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111289190612916565b61109090600a612a33565b90565b60006001600160a01b03821661118e5760405162461bcd60e51b815260206004820152600f60248201527f496e76616c6964206164647265737300000000000000000000000000000000006044820152606401610679565b6111966121fd565b60095460105411156111ea5760405162461bcd60e51b815260206004820152601460248201527f4d617820636170616369747920726561636865640000000000000000000000006044820152606401610679565b60006111f4610fb1565b90506000611200612211565b9050808510156112785760405162461bcd60e51b815260206004820152602360248201527f536c697070616765206c696d69743a206d6f7265207468616e206d617820707260448201527f69636500000000000000000000000000000000000000000000000000000000006064820152608401610679565b6040517fd1b317e50000000000000000000000000000000000000000000000000000000081526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152602482018890526000917f00000000000000000000000000000000000000000000000000000000000000009091169063d1b317e590604401602060405180830381865afa158015611323573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061134791906128fd565b9050600061135482610f8b565b9050629896808110156113a95760405162461bcd60e51b815260206004820152600e60248201527f426f6e6420746f6f20736d616c6c0000000000000000000000000000000000006044820152606401610679565b6113b1611bb3565b8111156114005760405162461bcd60e51b815260206004820152600e60248201527f426f6e6420746f6f206c617267650000000000000000000000000000000000006044820152606401610679565b600061141f612710610613600480015485611c8c90919063ffffffff16565b9050600061143782611431868661203b565b9061203b565b905061146e6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001633308d612251565b60405163095ea7b360e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152602482018c90527f0000000000000000000000000000000000000000000000000000000000000000169063095ea7b3906044016020604051808303816000875af11580156114fd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115219190612a42565b506040517fbc157ac1000000000000000000000000000000000000000000000000000000008152600481018b90526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166024830152604482018390527f0000000000000000000000000000000000000000000000000000000000000000169063bc157ac1906064016020604051808303816000875af11580156115d1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115f59190612a42565b508115611650576116506001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000167f0000000000000000000000000000000000000000000000000000000000000000846122f3565b60105461165d9085612328565b601055604080516080810182526001600160a01b038a166000908152600f6020529190912054819061168f9086612328565b81526005805460208084019190915243604080850182905260609485018c90526001600160a01b038e166000908152600f845281902086518155928601516001840155850151600283015593909201516003909201919091555487916116f491612328565b847f1fec6dc81f140574bf43f6b1e420ae1dd47928b9d57db8cbd7b8611063b85ae58d60405161172691815260200190565b60405180910390a46117366119b7565b61173e612211565b611746610fb1565b6040517f375b221f40939bfd8f49723a17cf7bc6d576ebf72efe2cc3e991826f5b3f390a90600090a4611777612387565b50909450505050505b9392505050565b60007f000000000000000000000000000000000000000000000000000000000000000015611871576040516332da80a360e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152610f8691633b9aca0091610613917f0000000000000000000000000000000000000000000000000000000000000000909116906332da80a390602401602060405180830381865afa158015611845573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061186991906128fd565b6110986119b7565b610f866119b7565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316826001600160a01b0316036118b957600080fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316826001600160a01b0316036118f757600080fd5b6040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201526119af907f0000000000000000000000000000000000000000000000000000000000000000906001600160a01b038516906370a0823190602401602060405180830381865afa15801561197a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061199e91906128fd565b6001600160a01b03851691906122f3565b506001919050565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611a18573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a3c91906128fd565b9050611a66670de0b6b3a7640000610613610fac611a60633b9aca00611098610f70565b8561207d565b91505090565b6000546001600160a01b03163314611ac65760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610679565b6001600160a01b038216611ad957600080fd5b8015611b1e57600380546001600160a01b0384167fffffffffffffffffffffff00000000000000000000000000000000000000000090911617600160a01b1790555050565b600380547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff169055600280546001600160a01b03841673ffffffffffffffffffffffffffffffffffffffff199091161790555050565b6000611b9f62989680610613633b9aca00611b99611b906119b7565b60045490611c8c565b90612328565b600654909150811015611133575060065490565b6000610f86620186a06106136004600301547f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611c23573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061109891906128fd565b600080611c5f6011544361203b90919063ffffffff16565b600554601054919250611c76916106139084611c8c565b9150601054821115611c885760105491505b5090565b600082600003611c9e57506000610bbc565b6000611caa8385612a5f565b905082611cb78583612a7e565b146117805760405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f60448201527f77000000000000000000000000000000000000000000000000000000000000006064820152608401610679565b600061178083836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250612468565b600082611e0c5760405163a9059cbb60e01b81526001600160a01b038581166004830152602482018490527f0000000000000000000000000000000000000000000000000000000000000000169063a9059cbb906044016020604051808303816000875af1158015611de2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e069190612a42565b50612034565b600354600160a01b900460ff1615611f225760035460405163095ea7b360e01b81526001600160a01b039182166004820152602481018490527f00000000000000000000000000000000000000000000000000000000000000009091169063095ea7b3906044016020604051808303816000875af1158015611e92573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611eb69190612a42565b50600354604051637acb775760e01b8152600481018490526001600160a01b03868116602483015290911690637acb775790604401600060405180830381600087803b158015611f0557600080fd5b505af1158015611f19573d6000803e3d6000fd5b50505050612034565b60025460405163095ea7b360e01b81526001600160a01b039182166004820152602481018490527f00000000000000000000000000000000000000000000000000000000000000009091169063095ea7b3906044016020604051808303816000875af1158015611f96573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611fba9190612a42565b50600254604051637acb775760e01b8152600481018490526001600160a01b03868116602483015290911690637acb7757906044016020604051808303816000875af115801561200e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120329190612a42565b505b5092915050565b600061178083836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525061249f565b604080516020810190915260008152600082116121025760405162461bcd60e51b815260206004820152602660248201527f4669786564506f696e743a3a6672616374696f6e3a206469766973696f6e206260448201527f79207a65726f00000000000000000000000000000000000000000000000000006064820152608401610679565b8260000361211f5750604080516020810190915260008152610bbc565b71ffffffffffffffffffffffffffffffffffff83116121c157600061214883607086901b612a7e565b90506001600160e01b038111156121a15760405162461bcd60e51b815260206004820152601e60248201527f4669786564506f696e743a3a6672616374696f6e3a206f766572666c6f7700006044820152606401610679565b6040518060200160405280826001600160e01b0316815250915050610bbc565b6000612148846e010000000000000000000000000000856124d0565b8051600090610bbc906612725dd1d243ab906001600160e01b0316612a7e565b612208610f7d611c47565b60105543601155565b600061222d62989680610613633b9aca00611b99611b906119b7565b600654909150811015612241575060065490565b6006541561113357600060065590565b6040516001600160a01b03808516602483015283166044820152606481018290526122ed9085907f23b872dd00000000000000000000000000000000000000000000000000000000906084015b60408051601f198184030181529190526020810180516001600160e01b03167fffffffff000000000000000000000000000000000000000000000000000000009093169290921790915261257e565b50505050565b6040516001600160a01b03831660248201526044810182905261232390849063a9059cbb60e01b9060640161229e565b505050565b6000806123358385612aa0565b9050838110156117805760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f7700000000006044820152606401610679565b600d54600e5460009161239a9190612328565b600b54909150158015906123ae5750804310155b1561246557600454600a5460ff16156123e857600b546004546123d091612328565b6004819055600c54116123e3576000600b555b61240a565b600b546004546123f79161203b565b6004819055600c541061240a576000600b555b43600e55600454600b54600a5460408051858152602081019490945283019190915260ff16151560608201527fb923e581a0f83128e9e1d8297aa52b18d6744310476e0b54509c054cd7a93b2a9060800160405180910390a1505b50565b600081836124895760405162461bcd60e51b81526004016106799190612ae4565b5060006124968486612a7e565b95945050505050565b600081848411156124c35760405162461bcd60e51b81526004016106799190612ae4565b5060006124968486612b17565b600080806000198587098587029250828110838203039150508060000361250957600084116124fe57600080fd5b508290049050611780565b80841161251557600080fd5b60008486880960026001871981018816978890046003810283188082028403028082028403028082028403028082028403028082028403029081029092039091026000889003889004909101858311909403939093029303949094049190911702949350505050565b60006125d3826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166126639092919063ffffffff16565b80519091501561232357808060200190518101906125f19190612a42565b6123235760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610679565b6060612672848460008561267a565b949350505050565b6060843b6126ca5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610679565b600080866001600160a01b031685876040516126e69190612b2e565b60006040518083038185875af1925050503d8060008114612723576040519150601f19603f3d011682016040523d82523d6000602084013e612728565b606091505b5091509150811561273c5791506126729050565b80511561274c5780518082602001fd5b8360405162461bcd60e51b81526004016106799190612ae4565b80356001600160a01b038116811461277d57600080fd5b919050565b60006020828403121561279457600080fd5b61178082612766565b801515811461246557600080fd5b600080600080608085870312156127c157600080fd5b84356127cc8161279d565b966020860135965060408601359560600135945092505050565b600080604083850312156127f957600080fd5b82356004811061280857600080fd5b946020939093013593505050565b6000806040838503121561282957600080fd5b61283283612766565b915060208301356128428161279d565b809150509250929050565b600080600080600080600060e0888a03121561286857600080fd5b505085359760208701359750604087013596606081013596506080810135955060a0810135945060c0013592509050565b6000602082840312156128ab57600080fd5b5035919050565b6000806000606084860312156128c757600080fd5b83359250602084013591506128de60408501612766565b90509250925092565b634e487b7160e01b600052602160045260246000fd5b60006020828403121561290f57600080fd5b5051919050565b60006020828403121561292857600080fd5b815160ff8116811461178057600080fd5b634e487b7160e01b600052601160045260246000fd5b600181815b8085111561298a57816000190482111561297057612970612939565b8085161561297d57918102915b93841c9390800290612954565b509250929050565b6000826129a157506001610bbc565b816129ae57506000610bbc565b81600181146129c457600281146129ce576129ea565b6001915050610bbc565b60ff8411156129df576129df612939565b50506001821b610bbc565b5060208310610133831016604e8410600b8410161715612a0d575081810a610bbc565b612a17838361294f565b8060001904821115612a2b57612a2b612939565b029392505050565b600061178060ff841683612992565b600060208284031215612a5457600080fd5b81516117808161279d565b6000816000190483118215151615612a7957612a79612939565b500290565b600082612a9b57634e487b7160e01b600052601260045260246000fd5b500490565b60008219821115612ab357612ab3612939565b500190565b60005b83811015612ad3578181015183820152602001612abb565b838111156122ed5750506000910152565b6020815260008251806020840152612b03816040850160208701612ab8565b601f01601f19169190910160400192915050565b600082821015612b2957612b29612939565b500390565b60008251612b40818460208701612ab8565b919091019291505056fea26469706673582212203d1177dbca41fb3d9c749a35fc7250fabfe62029bae49faa14c01207bf83307964736f6c634300080d0033";

export class MockBondDepository__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _REQT: string,
    _principle: string,
    _treasury: string,
    _DAO: string,
    _bondCalculator: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MockBondDepository> {
    return super.deploy(
      _REQT,
      _principle,
      _treasury,
      _DAO,
      _bondCalculator,
      overrides || {}
    ) as Promise<MockBondDepository>;
  }
  getDeployTransaction(
    _REQT: string,
    _principle: string,
    _treasury: string,
    _DAO: string,
    _bondCalculator: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _REQT,
      _principle,
      _treasury,
      _DAO,
      _bondCalculator,
      overrides || {}
    );
  }
  attach(address: string): MockBondDepository {
    return super.attach(address) as MockBondDepository;
  }
  connect(signer: Signer): MockBondDepository__factory {
    return super.connect(signer) as MockBondDepository__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockBondDepositoryInterface {
    return new utils.Interface(_abi) as MockBondDepositoryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockBondDepository {
    return new Contract(address, _abi, signerOrProvider) as MockBondDepository;
  }
}
